// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/api/expr/v1alpha1/explain.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Values of intermediate expressions produced when evaluating expression.
/// Deprecated, use `EvalState` instead.
public struct Google_Api_Expr_V1alpha1_Explain {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// All of the observed values.
  ///
  /// The field value_index is an index in the values list.
  /// Separating values from steps is needed to remove redundant values.
  public var values: [Google_Api_Expr_V1alpha1_Value] = []

  /// List of steps.
  ///
  /// Repeated evaluations of the same expression generate new ExprStep
  /// instances. The order of such ExprStep instances matches the order of
  /// elements returned by Comprehension.iter_range.
  public var exprSteps: [Google_Api_Expr_V1alpha1_Explain.ExprStep] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// ID and value index of one step.
  public struct ExprStep {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// ID of corresponding Expr node.
    public var id: Int64 = 0

    /// Index of the value in the values list.
    public var valueIndex: Int32 = 0

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.api.expr.v1alpha1"

extension Google_Api_Expr_V1alpha1_Explain: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Explain"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "values"),
    2: .standard(proto: "expr_steps"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.values)
      case 2: try decoder.decodeRepeatedMessageField(value: &self.exprSteps)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.values.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.values, fieldNumber: 1)
    }
    if !self.exprSteps.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.exprSteps, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Api_Expr_V1alpha1_Explain, rhs: Google_Api_Expr_V1alpha1_Explain) -> Bool {
    if lhs.values != rhs.values {return false}
    if lhs.exprSteps != rhs.exprSteps {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Api_Expr_V1alpha1_Explain.ExprStep: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Api_Expr_V1alpha1_Explain.protoMessageName + ".ExprStep"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "id"),
    2: .standard(proto: "value_index"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt64Field(value: &self.id)
      case 2: try decoder.decodeSingularInt32Field(value: &self.valueIndex)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.id != 0 {
      try visitor.visitSingularInt64Field(value: self.id, fieldNumber: 1)
    }
    if self.valueIndex != 0 {
      try visitor.visitSingularInt32Field(value: self.valueIndex, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Api_Expr_V1alpha1_Explain.ExprStep, rhs: Google_Api_Expr_V1alpha1_Explain.ExprStep) -> Bool {
    if lhs.id != rhs.id {return false}
    if lhs.valueIndex != rhs.valueIndex {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
