// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: udpa/annotations/security.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// These annotations indicate metadata for the purpose of understanding the
/// security significance of fields.
public struct Udpa_Annotations_FieldSecurityAnnotation {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Field should be set in the presence of untrusted downstreams.
  public var configureForUntrustedDownstream: Bool = false

  /// Field should be set in the presence of untrusted upstreams.
  public var configureForUntrustedUpstream: Bool = false

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Extension support defined in security.proto.

// MARK: - Extension Properties

// Swift Extensions on the exteneded Messages to add easy access to the declared
// extension fields. The names are based on the extension field name from the proto
// declaration. To avoid naming collisions, the names are prefixed with the name of
// the scope where the extend directive occurs.

extension SwiftProtobuf.Google_Protobuf_FieldOptions {

  /// Magic number is the 28 most significant bits in the sha256sum of
  /// "udpa.annotations.security".
  public var Udpa_Annotations_security: Udpa_Annotations_FieldSecurityAnnotation {
    get {return getExtensionValue(ext: Udpa_Annotations_Extensions_security) ?? Udpa_Annotations_FieldSecurityAnnotation()}
    set {setExtensionValue(ext: Udpa_Annotations_Extensions_security, value: newValue)}
  }
  /// Returns true if extension `Udpa_Annotations_Extensions_security`
  /// has been explicitly set.
  public var hasUdpa_Annotations_security: Bool {
    return hasExtensionValue(ext: Udpa_Annotations_Extensions_security)
  }
  /// Clears the value of extension `Udpa_Annotations_Extensions_security`.
  /// Subsequent reads from it will return its default value.
  public mutating func clearUdpa_Annotations_security() {
    clearExtensionValue(ext: Udpa_Annotations_Extensions_security)
  }

}

// MARK: - File's ExtensionMap: Udpa_Annotations_Security_Extensions

/// A `SwiftProtobuf.SimpleExtensionMap` that includes all of the extensions defined by
/// this .proto file. It can be used any place an `SwiftProtobuf.ExtensionMap` is needed
/// in parsing, or it can be combined with other `SwiftProtobuf.SimpleExtensionMap`s to create
/// a larger `SwiftProtobuf.SimpleExtensionMap`.
public let Udpa_Annotations_Security_Extensions: SwiftProtobuf.SimpleExtensionMap = [
  Udpa_Annotations_Extensions_security
]

// Extension Objects - The only reason these might be needed is when manually
// constructing a `SimpleExtensionMap`, otherwise, use the above _Extension Properties_
// accessors for the extension fields on the messages directly.

/// Magic number is the 28 most significant bits in the sha256sum of
/// "udpa.annotations.security".
public let Udpa_Annotations_Extensions_security = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<Udpa_Annotations_FieldSecurityAnnotation>, SwiftProtobuf.Google_Protobuf_FieldOptions>(
  _protobuf_fieldNumber: 11122993,
  fieldName: "udpa.annotations.security"
)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "udpa.annotations"

extension Udpa_Annotations_FieldSecurityAnnotation: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".FieldSecurityAnnotation"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "configure_for_untrusted_downstream"),
    2: .standard(proto: "configure_for_untrusted_upstream"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularBoolField(value: &self.configureForUntrustedDownstream) }()
      case 2: try { try decoder.decodeSingularBoolField(value: &self.configureForUntrustedUpstream) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.configureForUntrustedDownstream != false {
      try visitor.visitSingularBoolField(value: self.configureForUntrustedDownstream, fieldNumber: 1)
    }
    if self.configureForUntrustedUpstream != false {
      try visitor.visitSingularBoolField(value: self.configureForUntrustedUpstream, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Udpa_Annotations_FieldSecurityAnnotation, rhs: Udpa_Annotations_FieldSecurityAnnotation) -> Bool {
    if lhs.configureForUntrustedDownstream != rhs.configureForUntrustedDownstream {return false}
    if lhs.configureForUntrustedUpstream != rhs.configureForUntrustedUpstream {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
