// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: udpa/annotations/migrate.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct Udpa_Annotations_MigrateAnnotation {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Rename the message/enum/enum value in next version.
  public var rename: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct Udpa_Annotations_FieldMigrateAnnotation {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Rename the field in next version.
  public var rename: String = String()

  /// Add the field to a named oneof in next version. If this already exists, the
  /// field will join its siblings under the oneof, otherwise a new oneof will be
  /// created with the given name.
  public var oneofPromotion: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct Udpa_Annotations_FileMigrateAnnotation {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Move all types in the file to another package, this implies changing proto
  /// file path.
  public var moveToPackage: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Extension support defined in migrate.proto.

// MARK: - Extension Properties

// Swift Extensions on the exteneded Messages to add easy access to the declared
// extension fields. The names are based on the extension field name from the proto
// declaration. To avoid naming collisions, the names are prefixed with the name of
// the scope where the extend directive occurs.

extension SwiftProtobuf.Google_Protobuf_EnumOptions {

  public var Udpa_Annotations_enumMigrate: Udpa_Annotations_MigrateAnnotation {
    get {return getExtensionValue(ext: Udpa_Annotations_Extensions_enum_migrate) ?? Udpa_Annotations_MigrateAnnotation()}
    set {setExtensionValue(ext: Udpa_Annotations_Extensions_enum_migrate, value: newValue)}
  }
  /// Returns true if extension `Udpa_Annotations_Extensions_enum_migrate`
  /// has been explicitly set.
  public var hasUdpa_Annotations_enumMigrate: Bool {
    return hasExtensionValue(ext: Udpa_Annotations_Extensions_enum_migrate)
  }
  /// Clears the value of extension `Udpa_Annotations_Extensions_enum_migrate`.
  /// Subsequent reads from it will return its default value.
  public mutating func clearUdpa_Annotations_enumMigrate() {
    clearExtensionValue(ext: Udpa_Annotations_Extensions_enum_migrate)
  }
}

extension SwiftProtobuf.Google_Protobuf_EnumValueOptions {

  public var Udpa_Annotations_enumValueMigrate: Udpa_Annotations_MigrateAnnotation {
    get {return getExtensionValue(ext: Udpa_Annotations_Extensions_enum_value_migrate) ?? Udpa_Annotations_MigrateAnnotation()}
    set {setExtensionValue(ext: Udpa_Annotations_Extensions_enum_value_migrate, value: newValue)}
  }
  /// Returns true if extension `Udpa_Annotations_Extensions_enum_value_migrate`
  /// has been explicitly set.
  public var hasUdpa_Annotations_enumValueMigrate: Bool {
    return hasExtensionValue(ext: Udpa_Annotations_Extensions_enum_value_migrate)
  }
  /// Clears the value of extension `Udpa_Annotations_Extensions_enum_value_migrate`.
  /// Subsequent reads from it will return its default value.
  public mutating func clearUdpa_Annotations_enumValueMigrate() {
    clearExtensionValue(ext: Udpa_Annotations_Extensions_enum_value_migrate)
  }
}

extension SwiftProtobuf.Google_Protobuf_FieldOptions {

  public var Udpa_Annotations_fieldMigrate: Udpa_Annotations_FieldMigrateAnnotation {
    get {return getExtensionValue(ext: Udpa_Annotations_Extensions_field_migrate) ?? Udpa_Annotations_FieldMigrateAnnotation()}
    set {setExtensionValue(ext: Udpa_Annotations_Extensions_field_migrate, value: newValue)}
  }
  /// Returns true if extension `Udpa_Annotations_Extensions_field_migrate`
  /// has been explicitly set.
  public var hasUdpa_Annotations_fieldMigrate: Bool {
    return hasExtensionValue(ext: Udpa_Annotations_Extensions_field_migrate)
  }
  /// Clears the value of extension `Udpa_Annotations_Extensions_field_migrate`.
  /// Subsequent reads from it will return its default value.
  public mutating func clearUdpa_Annotations_fieldMigrate() {
    clearExtensionValue(ext: Udpa_Annotations_Extensions_field_migrate)
  }
}

extension SwiftProtobuf.Google_Protobuf_FileOptions {

  public var Udpa_Annotations_fileMigrate: Udpa_Annotations_FileMigrateAnnotation {
    get {return getExtensionValue(ext: Udpa_Annotations_Extensions_file_migrate) ?? Udpa_Annotations_FileMigrateAnnotation()}
    set {setExtensionValue(ext: Udpa_Annotations_Extensions_file_migrate, value: newValue)}
  }
  /// Returns true if extension `Udpa_Annotations_Extensions_file_migrate`
  /// has been explicitly set.
  public var hasUdpa_Annotations_fileMigrate: Bool {
    return hasExtensionValue(ext: Udpa_Annotations_Extensions_file_migrate)
  }
  /// Clears the value of extension `Udpa_Annotations_Extensions_file_migrate`.
  /// Subsequent reads from it will return its default value.
  public mutating func clearUdpa_Annotations_fileMigrate() {
    clearExtensionValue(ext: Udpa_Annotations_Extensions_file_migrate)
  }
}

extension SwiftProtobuf.Google_Protobuf_MessageOptions {

  public var Udpa_Annotations_messageMigrate: Udpa_Annotations_MigrateAnnotation {
    get {return getExtensionValue(ext: Udpa_Annotations_Extensions_message_migrate) ?? Udpa_Annotations_MigrateAnnotation()}
    set {setExtensionValue(ext: Udpa_Annotations_Extensions_message_migrate, value: newValue)}
  }
  /// Returns true if extension `Udpa_Annotations_Extensions_message_migrate`
  /// has been explicitly set.
  public var hasUdpa_Annotations_messageMigrate: Bool {
    return hasExtensionValue(ext: Udpa_Annotations_Extensions_message_migrate)
  }
  /// Clears the value of extension `Udpa_Annotations_Extensions_message_migrate`.
  /// Subsequent reads from it will return its default value.
  public mutating func clearUdpa_Annotations_messageMigrate() {
    clearExtensionValue(ext: Udpa_Annotations_Extensions_message_migrate)
  }

}

// MARK: - File's ExtensionMap: Udpa_Annotations_Migrate_Extensions

/// A `SwiftProtobuf.SimpleExtensionMap` that includes all of the extensions defined by
/// this .proto file. It can be used any place an `SwiftProtobuf.ExtensionMap` is needed
/// in parsing, or it can be combined with other `SwiftProtobuf.SimpleExtensionMap`s to create
/// a larger `SwiftProtobuf.SimpleExtensionMap`.
public let Udpa_Annotations_Migrate_Extensions: SwiftProtobuf.SimpleExtensionMap = [
  Udpa_Annotations_Extensions_message_migrate,
  Udpa_Annotations_Extensions_field_migrate,
  Udpa_Annotations_Extensions_enum_migrate,
  Udpa_Annotations_Extensions_enum_value_migrate,
  Udpa_Annotations_Extensions_file_migrate
]

// Extension Objects - The only reason these might be needed is when manually
// constructing a `SimpleExtensionMap`, otherwise, use the above _Extension Properties_
// accessors for the extension fields on the messages directly.

public let Udpa_Annotations_Extensions_message_migrate = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<Udpa_Annotations_MigrateAnnotation>, SwiftProtobuf.Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 171962766,
  fieldName: "udpa.annotations.message_migrate"
)

public let Udpa_Annotations_Extensions_field_migrate = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<Udpa_Annotations_FieldMigrateAnnotation>, SwiftProtobuf.Google_Protobuf_FieldOptions>(
  _protobuf_fieldNumber: 171962766,
  fieldName: "udpa.annotations.field_migrate"
)

public let Udpa_Annotations_Extensions_enum_migrate = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<Udpa_Annotations_MigrateAnnotation>, SwiftProtobuf.Google_Protobuf_EnumOptions>(
  _protobuf_fieldNumber: 171962766,
  fieldName: "udpa.annotations.enum_migrate"
)

public let Udpa_Annotations_Extensions_enum_value_migrate = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<Udpa_Annotations_MigrateAnnotation>, SwiftProtobuf.Google_Protobuf_EnumValueOptions>(
  _protobuf_fieldNumber: 171962766,
  fieldName: "udpa.annotations.enum_value_migrate"
)

public let Udpa_Annotations_Extensions_file_migrate = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalMessageExtensionField<Udpa_Annotations_FileMigrateAnnotation>, SwiftProtobuf.Google_Protobuf_FileOptions>(
  _protobuf_fieldNumber: 171962766,
  fieldName: "udpa.annotations.file_migrate"
)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "udpa.annotations"

extension Udpa_Annotations_MigrateAnnotation: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".MigrateAnnotation"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "rename"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.rename) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.rename.isEmpty {
      try visitor.visitSingularStringField(value: self.rename, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Udpa_Annotations_MigrateAnnotation, rhs: Udpa_Annotations_MigrateAnnotation) -> Bool {
    if lhs.rename != rhs.rename {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Udpa_Annotations_FieldMigrateAnnotation: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".FieldMigrateAnnotation"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "rename"),
    2: .standard(proto: "oneof_promotion"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.rename) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.oneofPromotion) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.rename.isEmpty {
      try visitor.visitSingularStringField(value: self.rename, fieldNumber: 1)
    }
    if !self.oneofPromotion.isEmpty {
      try visitor.visitSingularStringField(value: self.oneofPromotion, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Udpa_Annotations_FieldMigrateAnnotation, rhs: Udpa_Annotations_FieldMigrateAnnotation) -> Bool {
    if lhs.rename != rhs.rename {return false}
    if lhs.oneofPromotion != rhs.oneofPromotion {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Udpa_Annotations_FileMigrateAnnotation: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".FileMigrateAnnotation"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    2: .standard(proto: "move_to_package"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 2: try { try decoder.decodeSingularStringField(value: &self.moveToPackage) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.moveToPackage.isEmpty {
      try visitor.visitSingularStringField(value: self.moveToPackage, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Udpa_Annotations_FileMigrateAnnotation, rhs: Udpa_Annotations_FileMigrateAnnotation) -> Bool {
    if lhs.moveToPackage != rhs.moveToPackage {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
