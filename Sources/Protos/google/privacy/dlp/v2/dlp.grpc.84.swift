//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/privacy/dlp/v2/dlp.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Privacy_Dlp_V2_DlpServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Privacy_Dlp_V2_DlpServiceClientProtocol: GRPCClient {
  func inspectContent(
    _ request: Google_Privacy_Dlp_V2_InspectContentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_InspectContentRequest, Google_Privacy_Dlp_V2_InspectContentResponse>

  func redactImage(
    _ request: Google_Privacy_Dlp_V2_RedactImageRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_RedactImageRequest, Google_Privacy_Dlp_V2_RedactImageResponse>

  func deidentifyContent(
    _ request: Google_Privacy_Dlp_V2_DeidentifyContentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_DeidentifyContentRequest, Google_Privacy_Dlp_V2_DeidentifyContentResponse>

  func reidentifyContent(
    _ request: Google_Privacy_Dlp_V2_ReidentifyContentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_ReidentifyContentRequest, Google_Privacy_Dlp_V2_ReidentifyContentResponse>

  func listInfoTypes(
    _ request: Google_Privacy_Dlp_V2_ListInfoTypesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_ListInfoTypesRequest, Google_Privacy_Dlp_V2_ListInfoTypesResponse>

  func createInspectTemplate(
    _ request: Google_Privacy_Dlp_V2_CreateInspectTemplateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_CreateInspectTemplateRequest, Google_Privacy_Dlp_V2_InspectTemplate>

  func updateInspectTemplate(
    _ request: Google_Privacy_Dlp_V2_UpdateInspectTemplateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_UpdateInspectTemplateRequest, Google_Privacy_Dlp_V2_InspectTemplate>

  func getInspectTemplate(
    _ request: Google_Privacy_Dlp_V2_GetInspectTemplateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_GetInspectTemplateRequest, Google_Privacy_Dlp_V2_InspectTemplate>

  func listInspectTemplates(
    _ request: Google_Privacy_Dlp_V2_ListInspectTemplatesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_ListInspectTemplatesRequest, Google_Privacy_Dlp_V2_ListInspectTemplatesResponse>

  func deleteInspectTemplate(
    _ request: Google_Privacy_Dlp_V2_DeleteInspectTemplateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_DeleteInspectTemplateRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func createDeidentifyTemplate(
    _ request: Google_Privacy_Dlp_V2_CreateDeidentifyTemplateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_CreateDeidentifyTemplateRequest, Google_Privacy_Dlp_V2_DeidentifyTemplate>

  func updateDeidentifyTemplate(
    _ request: Google_Privacy_Dlp_V2_UpdateDeidentifyTemplateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_UpdateDeidentifyTemplateRequest, Google_Privacy_Dlp_V2_DeidentifyTemplate>

  func getDeidentifyTemplate(
    _ request: Google_Privacy_Dlp_V2_GetDeidentifyTemplateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_GetDeidentifyTemplateRequest, Google_Privacy_Dlp_V2_DeidentifyTemplate>

  func listDeidentifyTemplates(
    _ request: Google_Privacy_Dlp_V2_ListDeidentifyTemplatesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_ListDeidentifyTemplatesRequest, Google_Privacy_Dlp_V2_ListDeidentifyTemplatesResponse>

  func deleteDeidentifyTemplate(
    _ request: Google_Privacy_Dlp_V2_DeleteDeidentifyTemplateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_DeleteDeidentifyTemplateRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func createJobTrigger(
    _ request: Google_Privacy_Dlp_V2_CreateJobTriggerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_CreateJobTriggerRequest, Google_Privacy_Dlp_V2_JobTrigger>

  func updateJobTrigger(
    _ request: Google_Privacy_Dlp_V2_UpdateJobTriggerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_UpdateJobTriggerRequest, Google_Privacy_Dlp_V2_JobTrigger>

  func hybridInspectJobTrigger(
    _ request: Google_Privacy_Dlp_V2_HybridInspectJobTriggerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_HybridInspectJobTriggerRequest, Google_Privacy_Dlp_V2_HybridInspectResponse>

  func getJobTrigger(
    _ request: Google_Privacy_Dlp_V2_GetJobTriggerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_GetJobTriggerRequest, Google_Privacy_Dlp_V2_JobTrigger>

  func listJobTriggers(
    _ request: Google_Privacy_Dlp_V2_ListJobTriggersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_ListJobTriggersRequest, Google_Privacy_Dlp_V2_ListJobTriggersResponse>

  func deleteJobTrigger(
    _ request: Google_Privacy_Dlp_V2_DeleteJobTriggerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_DeleteJobTriggerRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func activateJobTrigger(
    _ request: Google_Privacy_Dlp_V2_ActivateJobTriggerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_ActivateJobTriggerRequest, Google_Privacy_Dlp_V2_DlpJob>

  func createDlpJob(
    _ request: Google_Privacy_Dlp_V2_CreateDlpJobRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_CreateDlpJobRequest, Google_Privacy_Dlp_V2_DlpJob>

  func listDlpJobs(
    _ request: Google_Privacy_Dlp_V2_ListDlpJobsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_ListDlpJobsRequest, Google_Privacy_Dlp_V2_ListDlpJobsResponse>

  func getDlpJob(
    _ request: Google_Privacy_Dlp_V2_GetDlpJobRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_GetDlpJobRequest, Google_Privacy_Dlp_V2_DlpJob>

  func deleteDlpJob(
    _ request: Google_Privacy_Dlp_V2_DeleteDlpJobRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_DeleteDlpJobRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func cancelDlpJob(
    _ request: Google_Privacy_Dlp_V2_CancelDlpJobRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_CancelDlpJobRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func createStoredInfoType(
    _ request: Google_Privacy_Dlp_V2_CreateStoredInfoTypeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_CreateStoredInfoTypeRequest, Google_Privacy_Dlp_V2_StoredInfoType>

  func updateStoredInfoType(
    _ request: Google_Privacy_Dlp_V2_UpdateStoredInfoTypeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_UpdateStoredInfoTypeRequest, Google_Privacy_Dlp_V2_StoredInfoType>

  func getStoredInfoType(
    _ request: Google_Privacy_Dlp_V2_GetStoredInfoTypeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_GetStoredInfoTypeRequest, Google_Privacy_Dlp_V2_StoredInfoType>

  func listStoredInfoTypes(
    _ request: Google_Privacy_Dlp_V2_ListStoredInfoTypesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_ListStoredInfoTypesRequest, Google_Privacy_Dlp_V2_ListStoredInfoTypesResponse>

  func deleteStoredInfoType(
    _ request: Google_Privacy_Dlp_V2_DeleteStoredInfoTypeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_DeleteStoredInfoTypeRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func hybridInspectDlpJob(
    _ request: Google_Privacy_Dlp_V2_HybridInspectDlpJobRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_HybridInspectDlpJobRequest, Google_Privacy_Dlp_V2_HybridInspectResponse>

  func finishDlpJob(
    _ request: Google_Privacy_Dlp_V2_FinishDlpJobRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Privacy_Dlp_V2_FinishDlpJobRequest, SwiftProtobuf.Google_Protobuf_Empty>

}

extension Google_Privacy_Dlp_V2_DlpServiceClientProtocol {

  /// Finds potentially sensitive info in content.
  /// This method has limits on input size, processing time, and output size.
  ///
  /// When no InfoTypes or CustomInfoTypes are specified in this request, the
  /// system will automatically choose what detectors to run. By default this may
  /// be all types, but may change over time as detectors are updated.
  ///
  /// For how to guides, see https://cloud.google.com/dlp/docs/inspecting-images
  /// and https://cloud.google.com/dlp/docs/inspecting-text,
  ///
  /// - Parameters:
  ///   - request: Request to send to InspectContent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func inspectContent(
    _ request: Google_Privacy_Dlp_V2_InspectContentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_InspectContentRequest, Google_Privacy_Dlp_V2_InspectContentResponse> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/InspectContent",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Redacts potentially sensitive info from an image.
  /// This method has limits on input size, processing time, and output size.
  /// See https://cloud.google.com/dlp/docs/redacting-sensitive-data-images to
  /// learn more.
  ///
  /// When no InfoTypes or CustomInfoTypes are specified in this request, the
  /// system will automatically choose what detectors to run. By default this may
  /// be all types, but may change over time as detectors are updated.
  ///
  /// - Parameters:
  ///   - request: Request to send to RedactImage.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func redactImage(
    _ request: Google_Privacy_Dlp_V2_RedactImageRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_RedactImageRequest, Google_Privacy_Dlp_V2_RedactImageResponse> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/RedactImage",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// De-identifies potentially sensitive info from a ContentItem.
  /// This method has limits on input size and output size.
  /// See https://cloud.google.com/dlp/docs/deidentify-sensitive-data to
  /// learn more.
  ///
  /// When no InfoTypes or CustomInfoTypes are specified in this request, the
  /// system will automatically choose what detectors to run. By default this may
  /// be all types, but may change over time as detectors are updated.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeidentifyContent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deidentifyContent(
    _ request: Google_Privacy_Dlp_V2_DeidentifyContentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_DeidentifyContentRequest, Google_Privacy_Dlp_V2_DeidentifyContentResponse> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/DeidentifyContent",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Re-identifies content that has been de-identified.
  /// See
  /// https://cloud.google.com/dlp/docs/pseudonymization#re-identification_in_free_text_code_example
  /// to learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to ReidentifyContent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func reidentifyContent(
    _ request: Google_Privacy_Dlp_V2_ReidentifyContentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_ReidentifyContentRequest, Google_Privacy_Dlp_V2_ReidentifyContentResponse> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/ReidentifyContent",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns a list of the sensitive information types that the DLP API
  /// supports. See https://cloud.google.com/dlp/docs/infotypes-reference to
  /// learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListInfoTypes.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listInfoTypes(
    _ request: Google_Privacy_Dlp_V2_ListInfoTypesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_ListInfoTypesRequest, Google_Privacy_Dlp_V2_ListInfoTypesResponse> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/ListInfoTypes",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates an InspectTemplate for re-using frequently used configuration
  /// for inspecting content, images, and storage.
  /// See https://cloud.google.com/dlp/docs/creating-templates to learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateInspectTemplate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createInspectTemplate(
    _ request: Google_Privacy_Dlp_V2_CreateInspectTemplateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_CreateInspectTemplateRequest, Google_Privacy_Dlp_V2_InspectTemplate> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/CreateInspectTemplate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates the InspectTemplate.
  /// See https://cloud.google.com/dlp/docs/creating-templates to learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateInspectTemplate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateInspectTemplate(
    _ request: Google_Privacy_Dlp_V2_UpdateInspectTemplateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_UpdateInspectTemplateRequest, Google_Privacy_Dlp_V2_InspectTemplate> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/UpdateInspectTemplate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets an InspectTemplate.
  /// See https://cloud.google.com/dlp/docs/creating-templates to learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetInspectTemplate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getInspectTemplate(
    _ request: Google_Privacy_Dlp_V2_GetInspectTemplateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_GetInspectTemplateRequest, Google_Privacy_Dlp_V2_InspectTemplate> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/GetInspectTemplate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists InspectTemplates.
  /// See https://cloud.google.com/dlp/docs/creating-templates to learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListInspectTemplates.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listInspectTemplates(
    _ request: Google_Privacy_Dlp_V2_ListInspectTemplatesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_ListInspectTemplatesRequest, Google_Privacy_Dlp_V2_ListInspectTemplatesResponse> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/ListInspectTemplates",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes an InspectTemplate.
  /// See https://cloud.google.com/dlp/docs/creating-templates to learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteInspectTemplate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteInspectTemplate(
    _ request: Google_Privacy_Dlp_V2_DeleteInspectTemplateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_DeleteInspectTemplateRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/DeleteInspectTemplate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a DeidentifyTemplate for re-using frequently used configuration
  /// for de-identifying content, images, and storage.
  /// See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
  /// more.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateDeidentifyTemplate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createDeidentifyTemplate(
    _ request: Google_Privacy_Dlp_V2_CreateDeidentifyTemplateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_CreateDeidentifyTemplateRequest, Google_Privacy_Dlp_V2_DeidentifyTemplate> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/CreateDeidentifyTemplate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates the DeidentifyTemplate.
  /// See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
  /// more.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateDeidentifyTemplate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateDeidentifyTemplate(
    _ request: Google_Privacy_Dlp_V2_UpdateDeidentifyTemplateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_UpdateDeidentifyTemplateRequest, Google_Privacy_Dlp_V2_DeidentifyTemplate> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/UpdateDeidentifyTemplate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a DeidentifyTemplate.
  /// See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
  /// more.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDeidentifyTemplate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getDeidentifyTemplate(
    _ request: Google_Privacy_Dlp_V2_GetDeidentifyTemplateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_GetDeidentifyTemplateRequest, Google_Privacy_Dlp_V2_DeidentifyTemplate> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/GetDeidentifyTemplate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists DeidentifyTemplates.
  /// See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
  /// more.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListDeidentifyTemplates.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listDeidentifyTemplates(
    _ request: Google_Privacy_Dlp_V2_ListDeidentifyTemplatesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_ListDeidentifyTemplatesRequest, Google_Privacy_Dlp_V2_ListDeidentifyTemplatesResponse> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/ListDeidentifyTemplates",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a DeidentifyTemplate.
  /// See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
  /// more.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteDeidentifyTemplate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteDeidentifyTemplate(
    _ request: Google_Privacy_Dlp_V2_DeleteDeidentifyTemplateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_DeleteDeidentifyTemplateRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/DeleteDeidentifyTemplate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a job trigger to run DLP actions such as scanning storage for
  /// sensitive information on a set schedule.
  /// See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateJobTrigger.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createJobTrigger(
    _ request: Google_Privacy_Dlp_V2_CreateJobTriggerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_CreateJobTriggerRequest, Google_Privacy_Dlp_V2_JobTrigger> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/CreateJobTrigger",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates a job trigger.
  /// See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateJobTrigger.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateJobTrigger(
    _ request: Google_Privacy_Dlp_V2_UpdateJobTriggerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_UpdateJobTriggerRequest, Google_Privacy_Dlp_V2_JobTrigger> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/UpdateJobTrigger",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Inspect hybrid content and store findings to a trigger. The inspection
  /// will be processed asynchronously. To review the findings monitor the
  /// jobs within the trigger.
  /// Early access feature is in a pre-release state and might change or have
  /// limited support. For more information, see
  /// https://cloud.google.com/products#product-launch-stages.
  ///
  /// - Parameters:
  ///   - request: Request to send to HybridInspectJobTrigger.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func hybridInspectJobTrigger(
    _ request: Google_Privacy_Dlp_V2_HybridInspectJobTriggerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_HybridInspectJobTriggerRequest, Google_Privacy_Dlp_V2_HybridInspectResponse> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/HybridInspectJobTrigger",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a job trigger.
  /// See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetJobTrigger.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getJobTrigger(
    _ request: Google_Privacy_Dlp_V2_GetJobTriggerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_GetJobTriggerRequest, Google_Privacy_Dlp_V2_JobTrigger> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/GetJobTrigger",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists job triggers.
  /// See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListJobTriggers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listJobTriggers(
    _ request: Google_Privacy_Dlp_V2_ListJobTriggersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_ListJobTriggersRequest, Google_Privacy_Dlp_V2_ListJobTriggersResponse> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/ListJobTriggers",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a job trigger.
  /// See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteJobTrigger.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteJobTrigger(
    _ request: Google_Privacy_Dlp_V2_DeleteJobTriggerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_DeleteJobTriggerRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/DeleteJobTrigger",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Activate a job trigger. Causes the immediate execute of a trigger
  /// instead of waiting on the trigger event to occur.
  ///
  /// - Parameters:
  ///   - request: Request to send to ActivateJobTrigger.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func activateJobTrigger(
    _ request: Google_Privacy_Dlp_V2_ActivateJobTriggerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_ActivateJobTriggerRequest, Google_Privacy_Dlp_V2_DlpJob> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/ActivateJobTrigger",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a new job to inspect storage or calculate risk metrics.
  /// See https://cloud.google.com/dlp/docs/inspecting-storage and
  /// https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
  ///
  /// When no InfoTypes or CustomInfoTypes are specified in inspect jobs, the
  /// system will automatically choose what detectors to run. By default this may
  /// be all types, but may change over time as detectors are updated.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateDlpJob.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createDlpJob(
    _ request: Google_Privacy_Dlp_V2_CreateDlpJobRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_CreateDlpJobRequest, Google_Privacy_Dlp_V2_DlpJob> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/CreateDlpJob",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists DlpJobs that match the specified filter in the request.
  /// See https://cloud.google.com/dlp/docs/inspecting-storage and
  /// https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListDlpJobs.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listDlpJobs(
    _ request: Google_Privacy_Dlp_V2_ListDlpJobsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_ListDlpJobsRequest, Google_Privacy_Dlp_V2_ListDlpJobsResponse> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/ListDlpJobs",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets the latest state of a long-running DlpJob.
  /// See https://cloud.google.com/dlp/docs/inspecting-storage and
  /// https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDlpJob.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getDlpJob(
    _ request: Google_Privacy_Dlp_V2_GetDlpJobRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_GetDlpJobRequest, Google_Privacy_Dlp_V2_DlpJob> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/GetDlpJob",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a long-running DlpJob. This method indicates that the client is
  /// no longer interested in the DlpJob result. The job will be cancelled if
  /// possible.
  /// See https://cloud.google.com/dlp/docs/inspecting-storage and
  /// https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteDlpJob.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteDlpJob(
    _ request: Google_Privacy_Dlp_V2_DeleteDlpJobRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_DeleteDlpJobRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/DeleteDlpJob",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Starts asynchronous cancellation on a long-running DlpJob. The server
  /// makes a best effort to cancel the DlpJob, but success is not
  /// guaranteed.
  /// See https://cloud.google.com/dlp/docs/inspecting-storage and
  /// https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelDlpJob.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func cancelDlpJob(
    _ request: Google_Privacy_Dlp_V2_CancelDlpJobRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_CancelDlpJobRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/CancelDlpJob",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a pre-built stored infoType to be used for inspection.
  /// See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
  /// learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateStoredInfoType.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createStoredInfoType(
    _ request: Google_Privacy_Dlp_V2_CreateStoredInfoTypeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_CreateStoredInfoTypeRequest, Google_Privacy_Dlp_V2_StoredInfoType> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/CreateStoredInfoType",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates the stored infoType by creating a new version. The existing version
  /// will continue to be used until the new version is ready.
  /// See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
  /// learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateStoredInfoType.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateStoredInfoType(
    _ request: Google_Privacy_Dlp_V2_UpdateStoredInfoTypeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_UpdateStoredInfoTypeRequest, Google_Privacy_Dlp_V2_StoredInfoType> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/UpdateStoredInfoType",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a stored infoType.
  /// See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
  /// learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetStoredInfoType.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getStoredInfoType(
    _ request: Google_Privacy_Dlp_V2_GetStoredInfoTypeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_GetStoredInfoTypeRequest, Google_Privacy_Dlp_V2_StoredInfoType> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/GetStoredInfoType",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists stored infoTypes.
  /// See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
  /// learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListStoredInfoTypes.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listStoredInfoTypes(
    _ request: Google_Privacy_Dlp_V2_ListStoredInfoTypesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_ListStoredInfoTypesRequest, Google_Privacy_Dlp_V2_ListStoredInfoTypesResponse> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/ListStoredInfoTypes",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a stored infoType.
  /// See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
  /// learn more.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteStoredInfoType.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteStoredInfoType(
    _ request: Google_Privacy_Dlp_V2_DeleteStoredInfoTypeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_DeleteStoredInfoTypeRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/DeleteStoredInfoType",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Inspect hybrid content and store findings to a job.
  /// To review the findings inspect the job. Inspection will occur
  /// asynchronously.
  /// Early access feature is in a pre-release state and might change or have
  /// limited support. For more information, see
  /// https://cloud.google.com/products#product-launch-stages.
  ///
  /// - Parameters:
  ///   - request: Request to send to HybridInspectDlpJob.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func hybridInspectDlpJob(
    _ request: Google_Privacy_Dlp_V2_HybridInspectDlpJobRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_HybridInspectDlpJobRequest, Google_Privacy_Dlp_V2_HybridInspectResponse> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/HybridInspectDlpJob",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Finish a running hybrid DlpJob. Triggers the finalization steps and running
  /// of any enabled actions that have not yet run.
  /// Early access feature is in a pre-release state and might change or have
  /// limited support. For more information, see
  /// https://cloud.google.com/products#product-launch-stages.
  ///
  /// - Parameters:
  ///   - request: Request to send to FinishDlpJob.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func finishDlpJob(
    _ request: Google_Privacy_Dlp_V2_FinishDlpJobRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Privacy_Dlp_V2_FinishDlpJobRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.privacy.dlp.v2.DlpService/FinishDlpJob",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Privacy_Dlp_V2_DlpServiceClient: Google_Privacy_Dlp_V2_DlpServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.privacy.dlp.v2.DlpService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Privacy_Dlp_V2_DlpServiceProvider: CallHandlerProvider {
  /// Finds potentially sensitive info in content.
  /// This method has limits on input size, processing time, and output size.
  ///
  /// When no InfoTypes or CustomInfoTypes are specified in this request, the
  /// system will automatically choose what detectors to run. By default this may
  /// be all types, but may change over time as detectors are updated.
  ///
  /// For how to guides, see https://cloud.google.com/dlp/docs/inspecting-images
  /// and https://cloud.google.com/dlp/docs/inspecting-text,
  func inspectContent(request: Google_Privacy_Dlp_V2_InspectContentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_InspectContentResponse>
  /// Redacts potentially sensitive info from an image.
  /// This method has limits on input size, processing time, and output size.
  /// See https://cloud.google.com/dlp/docs/redacting-sensitive-data-images to
  /// learn more.
  ///
  /// When no InfoTypes or CustomInfoTypes are specified in this request, the
  /// system will automatically choose what detectors to run. By default this may
  /// be all types, but may change over time as detectors are updated.
  func redactImage(request: Google_Privacy_Dlp_V2_RedactImageRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_RedactImageResponse>
  /// De-identifies potentially sensitive info from a ContentItem.
  /// This method has limits on input size and output size.
  /// See https://cloud.google.com/dlp/docs/deidentify-sensitive-data to
  /// learn more.
  ///
  /// When no InfoTypes or CustomInfoTypes are specified in this request, the
  /// system will automatically choose what detectors to run. By default this may
  /// be all types, but may change over time as detectors are updated.
  func deidentifyContent(request: Google_Privacy_Dlp_V2_DeidentifyContentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_DeidentifyContentResponse>
  /// Re-identifies content that has been de-identified.
  /// See
  /// https://cloud.google.com/dlp/docs/pseudonymization#re-identification_in_free_text_code_example
  /// to learn more.
  func reidentifyContent(request: Google_Privacy_Dlp_V2_ReidentifyContentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_ReidentifyContentResponse>
  /// Returns a list of the sensitive information types that the DLP API
  /// supports. See https://cloud.google.com/dlp/docs/infotypes-reference to
  /// learn more.
  func listInfoTypes(request: Google_Privacy_Dlp_V2_ListInfoTypesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_ListInfoTypesResponse>
  /// Creates an InspectTemplate for re-using frequently used configuration
  /// for inspecting content, images, and storage.
  /// See https://cloud.google.com/dlp/docs/creating-templates to learn more.
  func createInspectTemplate(request: Google_Privacy_Dlp_V2_CreateInspectTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_InspectTemplate>
  /// Updates the InspectTemplate.
  /// See https://cloud.google.com/dlp/docs/creating-templates to learn more.
  func updateInspectTemplate(request: Google_Privacy_Dlp_V2_UpdateInspectTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_InspectTemplate>
  /// Gets an InspectTemplate.
  /// See https://cloud.google.com/dlp/docs/creating-templates to learn more.
  func getInspectTemplate(request: Google_Privacy_Dlp_V2_GetInspectTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_InspectTemplate>
  /// Lists InspectTemplates.
  /// See https://cloud.google.com/dlp/docs/creating-templates to learn more.
  func listInspectTemplates(request: Google_Privacy_Dlp_V2_ListInspectTemplatesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_ListInspectTemplatesResponse>
  /// Deletes an InspectTemplate.
  /// See https://cloud.google.com/dlp/docs/creating-templates to learn more.
  func deleteInspectTemplate(request: Google_Privacy_Dlp_V2_DeleteInspectTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Creates a DeidentifyTemplate for re-using frequently used configuration
  /// for de-identifying content, images, and storage.
  /// See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
  /// more.
  func createDeidentifyTemplate(request: Google_Privacy_Dlp_V2_CreateDeidentifyTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_DeidentifyTemplate>
  /// Updates the DeidentifyTemplate.
  /// See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
  /// more.
  func updateDeidentifyTemplate(request: Google_Privacy_Dlp_V2_UpdateDeidentifyTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_DeidentifyTemplate>
  /// Gets a DeidentifyTemplate.
  /// See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
  /// more.
  func getDeidentifyTemplate(request: Google_Privacy_Dlp_V2_GetDeidentifyTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_DeidentifyTemplate>
  /// Lists DeidentifyTemplates.
  /// See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
  /// more.
  func listDeidentifyTemplates(request: Google_Privacy_Dlp_V2_ListDeidentifyTemplatesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_ListDeidentifyTemplatesResponse>
  /// Deletes a DeidentifyTemplate.
  /// See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
  /// more.
  func deleteDeidentifyTemplate(request: Google_Privacy_Dlp_V2_DeleteDeidentifyTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Creates a job trigger to run DLP actions such as scanning storage for
  /// sensitive information on a set schedule.
  /// See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
  func createJobTrigger(request: Google_Privacy_Dlp_V2_CreateJobTriggerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_JobTrigger>
  /// Updates a job trigger.
  /// See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
  func updateJobTrigger(request: Google_Privacy_Dlp_V2_UpdateJobTriggerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_JobTrigger>
  /// Inspect hybrid content and store findings to a trigger. The inspection
  /// will be processed asynchronously. To review the findings monitor the
  /// jobs within the trigger.
  /// Early access feature is in a pre-release state and might change or have
  /// limited support. For more information, see
  /// https://cloud.google.com/products#product-launch-stages.
  func hybridInspectJobTrigger(request: Google_Privacy_Dlp_V2_HybridInspectJobTriggerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_HybridInspectResponse>
  /// Gets a job trigger.
  /// See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
  func getJobTrigger(request: Google_Privacy_Dlp_V2_GetJobTriggerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_JobTrigger>
  /// Lists job triggers.
  /// See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
  func listJobTriggers(request: Google_Privacy_Dlp_V2_ListJobTriggersRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_ListJobTriggersResponse>
  /// Deletes a job trigger.
  /// See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
  func deleteJobTrigger(request: Google_Privacy_Dlp_V2_DeleteJobTriggerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Activate a job trigger. Causes the immediate execute of a trigger
  /// instead of waiting on the trigger event to occur.
  func activateJobTrigger(request: Google_Privacy_Dlp_V2_ActivateJobTriggerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_DlpJob>
  /// Creates a new job to inspect storage or calculate risk metrics.
  /// See https://cloud.google.com/dlp/docs/inspecting-storage and
  /// https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
  ///
  /// When no InfoTypes or CustomInfoTypes are specified in inspect jobs, the
  /// system will automatically choose what detectors to run. By default this may
  /// be all types, but may change over time as detectors are updated.
  func createDlpJob(request: Google_Privacy_Dlp_V2_CreateDlpJobRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_DlpJob>
  /// Lists DlpJobs that match the specified filter in the request.
  /// See https://cloud.google.com/dlp/docs/inspecting-storage and
  /// https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
  func listDlpJobs(request: Google_Privacy_Dlp_V2_ListDlpJobsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_ListDlpJobsResponse>
  /// Gets the latest state of a long-running DlpJob.
  /// See https://cloud.google.com/dlp/docs/inspecting-storage and
  /// https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
  func getDlpJob(request: Google_Privacy_Dlp_V2_GetDlpJobRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_DlpJob>
  /// Deletes a long-running DlpJob. This method indicates that the client is
  /// no longer interested in the DlpJob result. The job will be cancelled if
  /// possible.
  /// See https://cloud.google.com/dlp/docs/inspecting-storage and
  /// https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
  func deleteDlpJob(request: Google_Privacy_Dlp_V2_DeleteDlpJobRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Starts asynchronous cancellation on a long-running DlpJob. The server
  /// makes a best effort to cancel the DlpJob, but success is not
  /// guaranteed.
  /// See https://cloud.google.com/dlp/docs/inspecting-storage and
  /// https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
  func cancelDlpJob(request: Google_Privacy_Dlp_V2_CancelDlpJobRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Creates a pre-built stored infoType to be used for inspection.
  /// See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
  /// learn more.
  func createStoredInfoType(request: Google_Privacy_Dlp_V2_CreateStoredInfoTypeRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_StoredInfoType>
  /// Updates the stored infoType by creating a new version. The existing version
  /// will continue to be used until the new version is ready.
  /// See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
  /// learn more.
  func updateStoredInfoType(request: Google_Privacy_Dlp_V2_UpdateStoredInfoTypeRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_StoredInfoType>
  /// Gets a stored infoType.
  /// See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
  /// learn more.
  func getStoredInfoType(request: Google_Privacy_Dlp_V2_GetStoredInfoTypeRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_StoredInfoType>
  /// Lists stored infoTypes.
  /// See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
  /// learn more.
  func listStoredInfoTypes(request: Google_Privacy_Dlp_V2_ListStoredInfoTypesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_ListStoredInfoTypesResponse>
  /// Deletes a stored infoType.
  /// See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
  /// learn more.
  func deleteStoredInfoType(request: Google_Privacy_Dlp_V2_DeleteStoredInfoTypeRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Inspect hybrid content and store findings to a job.
  /// To review the findings inspect the job. Inspection will occur
  /// asynchronously.
  /// Early access feature is in a pre-release state and might change or have
  /// limited support. For more information, see
  /// https://cloud.google.com/products#product-launch-stages.
  func hybridInspectDlpJob(request: Google_Privacy_Dlp_V2_HybridInspectDlpJobRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Privacy_Dlp_V2_HybridInspectResponse>
  /// Finish a running hybrid DlpJob. Triggers the finalization steps and running
  /// of any enabled actions that have not yet run.
  /// Early access feature is in a pre-release state and might change or have
  /// limited support. For more information, see
  /// https://cloud.google.com/products#product-launch-stages.
  func finishDlpJob(request: Google_Privacy_Dlp_V2_FinishDlpJobRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
}

extension Google_Privacy_Dlp_V2_DlpServiceProvider {
  public var serviceName: Substring { return "google.privacy.dlp.v2.DlpService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "InspectContent":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.inspectContent(request: request, context: context)
        }
      }

    case "RedactImage":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.redactImage(request: request, context: context)
        }
      }

    case "DeidentifyContent":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deidentifyContent(request: request, context: context)
        }
      }

    case "ReidentifyContent":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.reidentifyContent(request: request, context: context)
        }
      }

    case "ListInfoTypes":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listInfoTypes(request: request, context: context)
        }
      }

    case "CreateInspectTemplate":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createInspectTemplate(request: request, context: context)
        }
      }

    case "UpdateInspectTemplate":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateInspectTemplate(request: request, context: context)
        }
      }

    case "GetInspectTemplate":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getInspectTemplate(request: request, context: context)
        }
      }

    case "ListInspectTemplates":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listInspectTemplates(request: request, context: context)
        }
      }

    case "DeleteInspectTemplate":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteInspectTemplate(request: request, context: context)
        }
      }

    case "CreateDeidentifyTemplate":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createDeidentifyTemplate(request: request, context: context)
        }
      }

    case "UpdateDeidentifyTemplate":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateDeidentifyTemplate(request: request, context: context)
        }
      }

    case "GetDeidentifyTemplate":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getDeidentifyTemplate(request: request, context: context)
        }
      }

    case "ListDeidentifyTemplates":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listDeidentifyTemplates(request: request, context: context)
        }
      }

    case "DeleteDeidentifyTemplate":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteDeidentifyTemplate(request: request, context: context)
        }
      }

    case "CreateJobTrigger":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createJobTrigger(request: request, context: context)
        }
      }

    case "UpdateJobTrigger":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateJobTrigger(request: request, context: context)
        }
      }

    case "HybridInspectJobTrigger":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.hybridInspectJobTrigger(request: request, context: context)
        }
      }

    case "GetJobTrigger":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getJobTrigger(request: request, context: context)
        }
      }

    case "ListJobTriggers":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listJobTriggers(request: request, context: context)
        }
      }

    case "DeleteJobTrigger":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteJobTrigger(request: request, context: context)
        }
      }

    case "ActivateJobTrigger":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.activateJobTrigger(request: request, context: context)
        }
      }

    case "CreateDlpJob":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createDlpJob(request: request, context: context)
        }
      }

    case "ListDlpJobs":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listDlpJobs(request: request, context: context)
        }
      }

    case "GetDlpJob":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getDlpJob(request: request, context: context)
        }
      }

    case "DeleteDlpJob":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteDlpJob(request: request, context: context)
        }
      }

    case "CancelDlpJob":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.cancelDlpJob(request: request, context: context)
        }
      }

    case "CreateStoredInfoType":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createStoredInfoType(request: request, context: context)
        }
      }

    case "UpdateStoredInfoType":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateStoredInfoType(request: request, context: context)
        }
      }

    case "GetStoredInfoType":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getStoredInfoType(request: request, context: context)
        }
      }

    case "ListStoredInfoTypes":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listStoredInfoTypes(request: request, context: context)
        }
      }

    case "DeleteStoredInfoType":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteStoredInfoType(request: request, context: context)
        }
      }

    case "HybridInspectDlpJob":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.hybridInspectDlpJob(request: request, context: context)
        }
      }

    case "FinishDlpJob":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.finishDlpJob(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

