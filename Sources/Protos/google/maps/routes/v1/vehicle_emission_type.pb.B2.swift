// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/maps/routes/v1/vehicle_emission_type.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// A set of values describing the vehicle's emission type.
/// Applies only to the DRIVE travel mode.
public enum Google_Maps_Routes_V1_VehicleEmissionType: SwiftProtobuf.Enum {
  public typealias RawValue = Int

  /// No emission type specified. Default to GASOLINE.
  case unspecified // = 0

  /// Gasoline/petrol fueled vehicle.
  case gasoline // = 1

  /// Electricity powered vehicle.
  case electric // = 2

  /// Hybrid fuel (such as gasoline + electric) vehicle.
  case hybrid // = 3
  case UNRECOGNIZED(Int)

  public init() {
    self = .unspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unspecified
    case 1: self = .gasoline
    case 2: self = .electric
    case 3: self = .hybrid
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unspecified: return 0
    case .gasoline: return 1
    case .electric: return 2
    case .hybrid: return 3
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Google_Maps_Routes_V1_VehicleEmissionType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Google_Maps_Routes_V1_VehicleEmissionType] = [
    .unspecified,
    .gasoline,
    .electric,
    .hybrid,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Google_Maps_Routes_V1_VehicleEmissionType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "VEHICLE_EMISSION_TYPE_UNSPECIFIED"),
    1: .same(proto: "GASOLINE"),
    2: .same(proto: "ELECTRIC"),
    3: .same(proto: "HYBRID"),
  ]
}
