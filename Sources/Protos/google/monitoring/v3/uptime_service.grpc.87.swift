//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/monitoring/v3/uptime_service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Monitoring_V3_UptimeCheckServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Monitoring_V3_UptimeCheckServiceClientProtocol: GRPCClient {
  func listUptimeCheckConfigs(
    _ request: Google_Monitoring_V3_ListUptimeCheckConfigsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Monitoring_V3_ListUptimeCheckConfigsRequest, Google_Monitoring_V3_ListUptimeCheckConfigsResponse>

  func getUptimeCheckConfig(
    _ request: Google_Monitoring_V3_GetUptimeCheckConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Monitoring_V3_GetUptimeCheckConfigRequest, Google_Monitoring_V3_UptimeCheckConfig>

  func createUptimeCheckConfig(
    _ request: Google_Monitoring_V3_CreateUptimeCheckConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Monitoring_V3_CreateUptimeCheckConfigRequest, Google_Monitoring_V3_UptimeCheckConfig>

  func updateUptimeCheckConfig(
    _ request: Google_Monitoring_V3_UpdateUptimeCheckConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Monitoring_V3_UpdateUptimeCheckConfigRequest, Google_Monitoring_V3_UptimeCheckConfig>

  func deleteUptimeCheckConfig(
    _ request: Google_Monitoring_V3_DeleteUptimeCheckConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Monitoring_V3_DeleteUptimeCheckConfigRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func listUptimeCheckIps(
    _ request: Google_Monitoring_V3_ListUptimeCheckIpsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Monitoring_V3_ListUptimeCheckIpsRequest, Google_Monitoring_V3_ListUptimeCheckIpsResponse>

}

extension Google_Monitoring_V3_UptimeCheckServiceClientProtocol {

  /// Lists the existing valid Uptime check configurations for the project
  /// (leaving out any invalid configurations).
  ///
  /// - Parameters:
  ///   - request: Request to send to ListUptimeCheckConfigs.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listUptimeCheckConfigs(
    _ request: Google_Monitoring_V3_ListUptimeCheckConfigsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Monitoring_V3_ListUptimeCheckConfigsRequest, Google_Monitoring_V3_ListUptimeCheckConfigsResponse> {
    return self.makeUnaryCall(
      path: "/google.monitoring.v3.UptimeCheckService/ListUptimeCheckConfigs",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a single Uptime check configuration.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUptimeCheckConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getUptimeCheckConfig(
    _ request: Google_Monitoring_V3_GetUptimeCheckConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Monitoring_V3_GetUptimeCheckConfigRequest, Google_Monitoring_V3_UptimeCheckConfig> {
    return self.makeUnaryCall(
      path: "/google.monitoring.v3.UptimeCheckService/GetUptimeCheckConfig",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a new Uptime check configuration.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateUptimeCheckConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createUptimeCheckConfig(
    _ request: Google_Monitoring_V3_CreateUptimeCheckConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Monitoring_V3_CreateUptimeCheckConfigRequest, Google_Monitoring_V3_UptimeCheckConfig> {
    return self.makeUnaryCall(
      path: "/google.monitoring.v3.UptimeCheckService/CreateUptimeCheckConfig",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates an Uptime check configuration. You can either replace the entire
  /// configuration with a new one or replace only certain fields in the current
  /// configuration by specifying the fields to be updated via `updateMask`.
  /// Returns the updated configuration.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateUptimeCheckConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateUptimeCheckConfig(
    _ request: Google_Monitoring_V3_UpdateUptimeCheckConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Monitoring_V3_UpdateUptimeCheckConfigRequest, Google_Monitoring_V3_UptimeCheckConfig> {
    return self.makeUnaryCall(
      path: "/google.monitoring.v3.UptimeCheckService/UpdateUptimeCheckConfig",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes an Uptime check configuration. Note that this method will fail
  /// if the Uptime check configuration is referenced by an alert policy or
  /// other dependent configs that would be rendered invalid by the deletion.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteUptimeCheckConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteUptimeCheckConfig(
    _ request: Google_Monitoring_V3_DeleteUptimeCheckConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Monitoring_V3_DeleteUptimeCheckConfigRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.monitoring.v3.UptimeCheckService/DeleteUptimeCheckConfig",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns the list of IP addresses that checkers run from
  ///
  /// - Parameters:
  ///   - request: Request to send to ListUptimeCheckIps.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listUptimeCheckIps(
    _ request: Google_Monitoring_V3_ListUptimeCheckIpsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Monitoring_V3_ListUptimeCheckIpsRequest, Google_Monitoring_V3_ListUptimeCheckIpsResponse> {
    return self.makeUnaryCall(
      path: "/google.monitoring.v3.UptimeCheckService/ListUptimeCheckIps",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Monitoring_V3_UptimeCheckServiceClient: Google_Monitoring_V3_UptimeCheckServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.monitoring.v3.UptimeCheckService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Monitoring_V3_UptimeCheckServiceProvider: CallHandlerProvider {
  /// Lists the existing valid Uptime check configurations for the project
  /// (leaving out any invalid configurations).
  func listUptimeCheckConfigs(request: Google_Monitoring_V3_ListUptimeCheckConfigsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Monitoring_V3_ListUptimeCheckConfigsResponse>
  /// Gets a single Uptime check configuration.
  func getUptimeCheckConfig(request: Google_Monitoring_V3_GetUptimeCheckConfigRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Monitoring_V3_UptimeCheckConfig>
  /// Creates a new Uptime check configuration.
  func createUptimeCheckConfig(request: Google_Monitoring_V3_CreateUptimeCheckConfigRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Monitoring_V3_UptimeCheckConfig>
  /// Updates an Uptime check configuration. You can either replace the entire
  /// configuration with a new one or replace only certain fields in the current
  /// configuration by specifying the fields to be updated via `updateMask`.
  /// Returns the updated configuration.
  func updateUptimeCheckConfig(request: Google_Monitoring_V3_UpdateUptimeCheckConfigRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Monitoring_V3_UptimeCheckConfig>
  /// Deletes an Uptime check configuration. Note that this method will fail
  /// if the Uptime check configuration is referenced by an alert policy or
  /// other dependent configs that would be rendered invalid by the deletion.
  func deleteUptimeCheckConfig(request: Google_Monitoring_V3_DeleteUptimeCheckConfigRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Returns the list of IP addresses that checkers run from
  func listUptimeCheckIps(request: Google_Monitoring_V3_ListUptimeCheckIpsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Monitoring_V3_ListUptimeCheckIpsResponse>
}

extension Google_Monitoring_V3_UptimeCheckServiceProvider {
  public var serviceName: Substring { return "google.monitoring.v3.UptimeCheckService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "ListUptimeCheckConfigs":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listUptimeCheckConfigs(request: request, context: context)
        }
      }

    case "GetUptimeCheckConfig":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getUptimeCheckConfig(request: request, context: context)
        }
      }

    case "CreateUptimeCheckConfig":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createUptimeCheckConfig(request: request, context: context)
        }
      }

    case "UpdateUptimeCheckConfig":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateUptimeCheckConfig(request: request, context: context)
        }
      }

    case "DeleteUptimeCheckConfig":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteUptimeCheckConfig(request: request, context: context)
        }
      }

    case "ListUptimeCheckIps":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listUptimeCheckIps(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

