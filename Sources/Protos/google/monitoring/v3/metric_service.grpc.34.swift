//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/monitoring/v3/metric_service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Monitoring_V3_MetricServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Monitoring_V3_MetricServiceClientProtocol: GRPCClient {
  func listMonitoredResourceDescriptors(
    _ request: Google_Monitoring_V3_ListMonitoredResourceDescriptorsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Monitoring_V3_ListMonitoredResourceDescriptorsRequest, Google_Monitoring_V3_ListMonitoredResourceDescriptorsResponse>

  func getMonitoredResourceDescriptor(
    _ request: Google_Monitoring_V3_GetMonitoredResourceDescriptorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Monitoring_V3_GetMonitoredResourceDescriptorRequest, Google_Api_MonitoredResourceDescriptor>

  func listMetricDescriptors(
    _ request: Google_Monitoring_V3_ListMetricDescriptorsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Monitoring_V3_ListMetricDescriptorsRequest, Google_Monitoring_V3_ListMetricDescriptorsResponse>

  func getMetricDescriptor(
    _ request: Google_Monitoring_V3_GetMetricDescriptorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Monitoring_V3_GetMetricDescriptorRequest, Google_Api_MetricDescriptor>

  func createMetricDescriptor(
    _ request: Google_Monitoring_V3_CreateMetricDescriptorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Monitoring_V3_CreateMetricDescriptorRequest, Google_Api_MetricDescriptor>

  func deleteMetricDescriptor(
    _ request: Google_Monitoring_V3_DeleteMetricDescriptorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Monitoring_V3_DeleteMetricDescriptorRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func listTimeSeries(
    _ request: Google_Monitoring_V3_ListTimeSeriesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Monitoring_V3_ListTimeSeriesRequest, Google_Monitoring_V3_ListTimeSeriesResponse>

  func createTimeSeries(
    _ request: Google_Monitoring_V3_CreateTimeSeriesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Monitoring_V3_CreateTimeSeriesRequest, SwiftProtobuf.Google_Protobuf_Empty>

}

extension Google_Monitoring_V3_MetricServiceClientProtocol {

  /// Lists monitored resource descriptors that match a filter. This method does not require a Workspace.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListMonitoredResourceDescriptors.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listMonitoredResourceDescriptors(
    _ request: Google_Monitoring_V3_ListMonitoredResourceDescriptorsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Monitoring_V3_ListMonitoredResourceDescriptorsRequest, Google_Monitoring_V3_ListMonitoredResourceDescriptorsResponse> {
    return self.makeUnaryCall(
      path: "/google.monitoring.v3.MetricService/ListMonitoredResourceDescriptors",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a single monitored resource descriptor. This method does not require a Workspace.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetMonitoredResourceDescriptor.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getMonitoredResourceDescriptor(
    _ request: Google_Monitoring_V3_GetMonitoredResourceDescriptorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Monitoring_V3_GetMonitoredResourceDescriptorRequest, Google_Api_MonitoredResourceDescriptor> {
    return self.makeUnaryCall(
      path: "/google.monitoring.v3.MetricService/GetMonitoredResourceDescriptor",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists metric descriptors that match a filter. This method does not require a Workspace.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListMetricDescriptors.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listMetricDescriptors(
    _ request: Google_Monitoring_V3_ListMetricDescriptorsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Monitoring_V3_ListMetricDescriptorsRequest, Google_Monitoring_V3_ListMetricDescriptorsResponse> {
    return self.makeUnaryCall(
      path: "/google.monitoring.v3.MetricService/ListMetricDescriptors",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a single metric descriptor. This method does not require a Workspace.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetMetricDescriptor.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getMetricDescriptor(
    _ request: Google_Monitoring_V3_GetMetricDescriptorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Monitoring_V3_GetMetricDescriptorRequest, Google_Api_MetricDescriptor> {
    return self.makeUnaryCall(
      path: "/google.monitoring.v3.MetricService/GetMetricDescriptor",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a new metric descriptor.
  /// User-created metric descriptors define
  /// [custom metrics](https://cloud.google.com/monitoring/custom-metrics).
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateMetricDescriptor.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createMetricDescriptor(
    _ request: Google_Monitoring_V3_CreateMetricDescriptorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Monitoring_V3_CreateMetricDescriptorRequest, Google_Api_MetricDescriptor> {
    return self.makeUnaryCall(
      path: "/google.monitoring.v3.MetricService/CreateMetricDescriptor",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a metric descriptor. Only user-created
  /// [custom metrics](https://cloud.google.com/monitoring/custom-metrics) can be
  /// deleted.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteMetricDescriptor.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteMetricDescriptor(
    _ request: Google_Monitoring_V3_DeleteMetricDescriptorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Monitoring_V3_DeleteMetricDescriptorRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.monitoring.v3.MetricService/DeleteMetricDescriptor",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists time series that match a filter. This method does not require a Workspace.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListTimeSeries.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listTimeSeries(
    _ request: Google_Monitoring_V3_ListTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Monitoring_V3_ListTimeSeriesRequest, Google_Monitoring_V3_ListTimeSeriesResponse> {
    return self.makeUnaryCall(
      path: "/google.monitoring.v3.MetricService/ListTimeSeries",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates or adds data to one or more time series.
  /// The response is empty if all time series in the request were written.
  /// If any time series could not be written, a corresponding failure message is
  /// included in the error response.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTimeSeries.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createTimeSeries(
    _ request: Google_Monitoring_V3_CreateTimeSeriesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Monitoring_V3_CreateTimeSeriesRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.monitoring.v3.MetricService/CreateTimeSeries",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Monitoring_V3_MetricServiceClient: Google_Monitoring_V3_MetricServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.monitoring.v3.MetricService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Monitoring_V3_MetricServiceProvider: CallHandlerProvider {
  /// Lists monitored resource descriptors that match a filter. This method does not require a Workspace.
  func listMonitoredResourceDescriptors(request: Google_Monitoring_V3_ListMonitoredResourceDescriptorsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Monitoring_V3_ListMonitoredResourceDescriptorsResponse>
  /// Gets a single monitored resource descriptor. This method does not require a Workspace.
  func getMonitoredResourceDescriptor(request: Google_Monitoring_V3_GetMonitoredResourceDescriptorRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Api_MonitoredResourceDescriptor>
  /// Lists metric descriptors that match a filter. This method does not require a Workspace.
  func listMetricDescriptors(request: Google_Monitoring_V3_ListMetricDescriptorsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Monitoring_V3_ListMetricDescriptorsResponse>
  /// Gets a single metric descriptor. This method does not require a Workspace.
  func getMetricDescriptor(request: Google_Monitoring_V3_GetMetricDescriptorRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Api_MetricDescriptor>
  /// Creates a new metric descriptor.
  /// User-created metric descriptors define
  /// [custom metrics](https://cloud.google.com/monitoring/custom-metrics).
  func createMetricDescriptor(request: Google_Monitoring_V3_CreateMetricDescriptorRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Api_MetricDescriptor>
  /// Deletes a metric descriptor. Only user-created
  /// [custom metrics](https://cloud.google.com/monitoring/custom-metrics) can be
  /// deleted.
  func deleteMetricDescriptor(request: Google_Monitoring_V3_DeleteMetricDescriptorRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Lists time series that match a filter. This method does not require a Workspace.
  func listTimeSeries(request: Google_Monitoring_V3_ListTimeSeriesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Monitoring_V3_ListTimeSeriesResponse>
  /// Creates or adds data to one or more time series.
  /// The response is empty if all time series in the request were written.
  /// If any time series could not be written, a corresponding failure message is
  /// included in the error response.
  func createTimeSeries(request: Google_Monitoring_V3_CreateTimeSeriesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
}

extension Google_Monitoring_V3_MetricServiceProvider {
  public var serviceName: Substring { return "google.monitoring.v3.MetricService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "ListMonitoredResourceDescriptors":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listMonitoredResourceDescriptors(request: request, context: context)
        }
      }

    case "GetMonitoredResourceDescriptor":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getMonitoredResourceDescriptor(request: request, context: context)
        }
      }

    case "ListMetricDescriptors":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listMetricDescriptors(request: request, context: context)
        }
      }

    case "GetMetricDescriptor":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getMetricDescriptor(request: request, context: context)
        }
      }

    case "CreateMetricDescriptor":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createMetricDescriptor(request: request, context: context)
        }
      }

    case "DeleteMetricDescriptor":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteMetricDescriptor(request: request, context: context)
        }
      }

    case "ListTimeSeries":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listTimeSeries(request: request, context: context)
        }
      }

    case "CreateTimeSeries":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createTimeSeries(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

