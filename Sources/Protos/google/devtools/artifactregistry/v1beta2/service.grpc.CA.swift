//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/devtools/artifactregistry/v1beta2/service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Devtools_Artifactregistry_V1beta2_ArtifactRegistryClient, then call methods of this protocol to make API calls.
public protocol Google_Devtools_Artifactregistry_V1beta2_ArtifactRegistryClientProtocol: GRPCClient {
  func listRepositories(
    _ request: Google_Devtools_Artifactregistry_V1beta2_ListRepositoriesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_ListRepositoriesRequest, Google_Devtools_Artifactregistry_V1beta2_ListRepositoriesResponse>

  func getRepository(
    _ request: Google_Devtools_Artifactregistry_V1beta2_GetRepositoryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_GetRepositoryRequest, Google_Devtools_Artifactregistry_V1beta2_Repository>

  func createRepository(
    _ request: Google_Devtools_Artifactregistry_V1beta2_CreateRepositoryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_CreateRepositoryRequest, Google_Longrunning_Operation>

  func updateRepository(
    _ request: Google_Devtools_Artifactregistry_V1beta2_UpdateRepositoryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_UpdateRepositoryRequest, Google_Devtools_Artifactregistry_V1beta2_Repository>

  func deleteRepository(
    _ request: Google_Devtools_Artifactregistry_V1beta2_DeleteRepositoryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_DeleteRepositoryRequest, Google_Longrunning_Operation>

  func listPackages(
    _ request: Google_Devtools_Artifactregistry_V1beta2_ListPackagesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_ListPackagesRequest, Google_Devtools_Artifactregistry_V1beta2_ListPackagesResponse>

  func getPackage(
    _ request: Google_Devtools_Artifactregistry_V1beta2_GetPackageRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_GetPackageRequest, Google_Devtools_Artifactregistry_V1beta2_Package>

  func deletePackage(
    _ request: Google_Devtools_Artifactregistry_V1beta2_DeletePackageRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_DeletePackageRequest, Google_Longrunning_Operation>

  func listVersions(
    _ request: Google_Devtools_Artifactregistry_V1beta2_ListVersionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_ListVersionsRequest, Google_Devtools_Artifactregistry_V1beta2_ListVersionsResponse>

  func getVersion(
    _ request: Google_Devtools_Artifactregistry_V1beta2_GetVersionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_GetVersionRequest, Google_Devtools_Artifactregistry_V1beta2_Version>

  func deleteVersion(
    _ request: Google_Devtools_Artifactregistry_V1beta2_DeleteVersionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_DeleteVersionRequest, Google_Longrunning_Operation>

  func listFiles(
    _ request: Google_Devtools_Artifactregistry_V1beta2_ListFilesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_ListFilesRequest, Google_Devtools_Artifactregistry_V1beta2_ListFilesResponse>

  func getFile(
    _ request: Google_Devtools_Artifactregistry_V1beta2_GetFileRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_GetFileRequest, Google_Devtools_Artifactregistry_V1beta2_File>

  func listTags(
    _ request: Google_Devtools_Artifactregistry_V1beta2_ListTagsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_ListTagsRequest, Google_Devtools_Artifactregistry_V1beta2_ListTagsResponse>

  func getTag(
    _ request: Google_Devtools_Artifactregistry_V1beta2_GetTagRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_GetTagRequest, Google_Devtools_Artifactregistry_V1beta2_Tag>

  func createTag(
    _ request: Google_Devtools_Artifactregistry_V1beta2_CreateTagRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_CreateTagRequest, Google_Devtools_Artifactregistry_V1beta2_Tag>

  func updateTag(
    _ request: Google_Devtools_Artifactregistry_V1beta2_UpdateTagRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_UpdateTagRequest, Google_Devtools_Artifactregistry_V1beta2_Tag>

  func deleteTag(
    _ request: Google_Devtools_Artifactregistry_V1beta2_DeleteTagRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_DeleteTagRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func setIamPolicy(
    _ request: Google_Iam_V1_SetIamPolicyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Iam_V1_SetIamPolicyRequest, Google_Iam_V1_Policy>

  func getIamPolicy(
    _ request: Google_Iam_V1_GetIamPolicyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Iam_V1_GetIamPolicyRequest, Google_Iam_V1_Policy>

  func testIamPermissions(
    _ request: Google_Iam_V1_TestIamPermissionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Iam_V1_TestIamPermissionsRequest, Google_Iam_V1_TestIamPermissionsResponse>

  func listDockerImages(
    _ request: Google_Devtools_Artifactregistry_V1beta2_ListDockerImagesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_ListDockerImagesRequest, Google_Devtools_Artifactregistry_V1beta2_ListDockerImagesResponse>

}

extension Google_Devtools_Artifactregistry_V1beta2_ArtifactRegistryClientProtocol {

  /// Lists repositories.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListRepositories.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listRepositories(
    _ request: Google_Devtools_Artifactregistry_V1beta2_ListRepositoriesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_ListRepositoriesRequest, Google_Devtools_Artifactregistry_V1beta2_ListRepositoriesResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/ListRepositories",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a repository.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetRepository.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getRepository(
    _ request: Google_Devtools_Artifactregistry_V1beta2_GetRepositoryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_GetRepositoryRequest, Google_Devtools_Artifactregistry_V1beta2_Repository> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetRepository",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a repository. The returned Operation will finish once the
  /// repository has been created. Its response will be the created Repository.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateRepository.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createRepository(
    _ request: Google_Devtools_Artifactregistry_V1beta2_CreateRepositoryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_CreateRepositoryRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/CreateRepository",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates a repository.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateRepository.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateRepository(
    _ request: Google_Devtools_Artifactregistry_V1beta2_UpdateRepositoryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_UpdateRepositoryRequest, Google_Devtools_Artifactregistry_V1beta2_Repository> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/UpdateRepository",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a repository and all of its contents. The returned Operation will
  /// finish once the repository has been deleted. It will not have any Operation
  /// metadata and will return a google.protobuf.Empty response.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteRepository.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteRepository(
    _ request: Google_Devtools_Artifactregistry_V1beta2_DeleteRepositoryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_DeleteRepositoryRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/DeleteRepository",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists packages.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListPackages.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listPackages(
    _ request: Google_Devtools_Artifactregistry_V1beta2_ListPackagesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_ListPackagesRequest, Google_Devtools_Artifactregistry_V1beta2_ListPackagesResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/ListPackages",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a package.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPackage.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getPackage(
    _ request: Google_Devtools_Artifactregistry_V1beta2_GetPackageRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_GetPackageRequest, Google_Devtools_Artifactregistry_V1beta2_Package> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetPackage",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a package and all of its versions and tags. The returned operation
  /// will complete once the package has been deleted.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeletePackage.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deletePackage(
    _ request: Google_Devtools_Artifactregistry_V1beta2_DeletePackageRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_DeletePackageRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/DeletePackage",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists versions.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListVersions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listVersions(
    _ request: Google_Devtools_Artifactregistry_V1beta2_ListVersionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_ListVersionsRequest, Google_Devtools_Artifactregistry_V1beta2_ListVersionsResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/ListVersions",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a version
  ///
  /// - Parameters:
  ///   - request: Request to send to GetVersion.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getVersion(
    _ request: Google_Devtools_Artifactregistry_V1beta2_GetVersionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_GetVersionRequest, Google_Devtools_Artifactregistry_V1beta2_Version> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetVersion",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a version and all of its content. The returned operation will
  /// complete once the version has been deleted.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteVersion.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteVersion(
    _ request: Google_Devtools_Artifactregistry_V1beta2_DeleteVersionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_DeleteVersionRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/DeleteVersion",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists files.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListFiles.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listFiles(
    _ request: Google_Devtools_Artifactregistry_V1beta2_ListFilesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_ListFilesRequest, Google_Devtools_Artifactregistry_V1beta2_ListFilesResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/ListFiles",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a file.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetFile.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getFile(
    _ request: Google_Devtools_Artifactregistry_V1beta2_GetFileRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_GetFileRequest, Google_Devtools_Artifactregistry_V1beta2_File> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetFile",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists tags.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListTags.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listTags(
    _ request: Google_Devtools_Artifactregistry_V1beta2_ListTagsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_ListTagsRequest, Google_Devtools_Artifactregistry_V1beta2_ListTagsResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/ListTags",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a tag.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTag.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTag(
    _ request: Google_Devtools_Artifactregistry_V1beta2_GetTagRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_GetTagRequest, Google_Devtools_Artifactregistry_V1beta2_Tag> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetTag",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a tag.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTag.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createTag(
    _ request: Google_Devtools_Artifactregistry_V1beta2_CreateTagRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_CreateTagRequest, Google_Devtools_Artifactregistry_V1beta2_Tag> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/CreateTag",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates a tag.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateTag.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateTag(
    _ request: Google_Devtools_Artifactregistry_V1beta2_UpdateTagRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_UpdateTagRequest, Google_Devtools_Artifactregistry_V1beta2_Tag> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/UpdateTag",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a tag.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteTag.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteTag(
    _ request: Google_Devtools_Artifactregistry_V1beta2_DeleteTagRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_DeleteTagRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/DeleteTag",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates the IAM policy for a given resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetIamPolicy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setIamPolicy(
    _ request: Google_Iam_V1_SetIamPolicyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Iam_V1_SetIamPolicyRequest, Google_Iam_V1_Policy> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/SetIamPolicy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets the IAM policy for a given resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetIamPolicy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getIamPolicy(
    _ request: Google_Iam_V1_GetIamPolicyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Iam_V1_GetIamPolicyRequest, Google_Iam_V1_Policy> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetIamPolicy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Tests if the caller has a list of permissions on a resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to TestIamPermissions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func testIamPermissions(
    _ request: Google_Iam_V1_TestIamPermissionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Iam_V1_TestIamPermissionsRequest, Google_Iam_V1_TestIamPermissionsResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/TestIamPermissions",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists docker images.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListDockerImages.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listDockerImages(
    _ request: Google_Devtools_Artifactregistry_V1beta2_ListDockerImagesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Artifactregistry_V1beta2_ListDockerImagesRequest, Google_Devtools_Artifactregistry_V1beta2_ListDockerImagesResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/ListDockerImages",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Devtools_Artifactregistry_V1beta2_ArtifactRegistryClient: Google_Devtools_Artifactregistry_V1beta2_ArtifactRegistryClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.devtools.artifactregistry.v1beta2.ArtifactRegistry service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Devtools_Artifactregistry_V1beta2_ArtifactRegistryProvider: CallHandlerProvider {
  /// Lists repositories.
  func listRepositories(request: Google_Devtools_Artifactregistry_V1beta2_ListRepositoriesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Artifactregistry_V1beta2_ListRepositoriesResponse>
  /// Gets a repository.
  func getRepository(request: Google_Devtools_Artifactregistry_V1beta2_GetRepositoryRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Artifactregistry_V1beta2_Repository>
  /// Creates a repository. The returned Operation will finish once the
  /// repository has been created. Its response will be the created Repository.
  func createRepository(request: Google_Devtools_Artifactregistry_V1beta2_CreateRepositoryRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Updates a repository.
  func updateRepository(request: Google_Devtools_Artifactregistry_V1beta2_UpdateRepositoryRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Artifactregistry_V1beta2_Repository>
  /// Deletes a repository and all of its contents. The returned Operation will
  /// finish once the repository has been deleted. It will not have any Operation
  /// metadata and will return a google.protobuf.Empty response.
  func deleteRepository(request: Google_Devtools_Artifactregistry_V1beta2_DeleteRepositoryRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Lists packages.
  func listPackages(request: Google_Devtools_Artifactregistry_V1beta2_ListPackagesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Artifactregistry_V1beta2_ListPackagesResponse>
  /// Gets a package.
  func getPackage(request: Google_Devtools_Artifactregistry_V1beta2_GetPackageRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Artifactregistry_V1beta2_Package>
  /// Deletes a package and all of its versions and tags. The returned operation
  /// will complete once the package has been deleted.
  func deletePackage(request: Google_Devtools_Artifactregistry_V1beta2_DeletePackageRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Lists versions.
  func listVersions(request: Google_Devtools_Artifactregistry_V1beta2_ListVersionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Artifactregistry_V1beta2_ListVersionsResponse>
  /// Gets a version
  func getVersion(request: Google_Devtools_Artifactregistry_V1beta2_GetVersionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Artifactregistry_V1beta2_Version>
  /// Deletes a version and all of its content. The returned operation will
  /// complete once the version has been deleted.
  func deleteVersion(request: Google_Devtools_Artifactregistry_V1beta2_DeleteVersionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Lists files.
  func listFiles(request: Google_Devtools_Artifactregistry_V1beta2_ListFilesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Artifactregistry_V1beta2_ListFilesResponse>
  /// Gets a file.
  func getFile(request: Google_Devtools_Artifactregistry_V1beta2_GetFileRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Artifactregistry_V1beta2_File>
  /// Lists tags.
  func listTags(request: Google_Devtools_Artifactregistry_V1beta2_ListTagsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Artifactregistry_V1beta2_ListTagsResponse>
  /// Gets a tag.
  func getTag(request: Google_Devtools_Artifactregistry_V1beta2_GetTagRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Artifactregistry_V1beta2_Tag>
  /// Creates a tag.
  func createTag(request: Google_Devtools_Artifactregistry_V1beta2_CreateTagRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Artifactregistry_V1beta2_Tag>
  /// Updates a tag.
  func updateTag(request: Google_Devtools_Artifactregistry_V1beta2_UpdateTagRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Artifactregistry_V1beta2_Tag>
  /// Deletes a tag.
  func deleteTag(request: Google_Devtools_Artifactregistry_V1beta2_DeleteTagRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Updates the IAM policy for a given resource.
  func setIamPolicy(request: Google_Iam_V1_SetIamPolicyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_Policy>
  /// Gets the IAM policy for a given resource.
  func getIamPolicy(request: Google_Iam_V1_GetIamPolicyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_Policy>
  /// Tests if the caller has a list of permissions on a resource.
  func testIamPermissions(request: Google_Iam_V1_TestIamPermissionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_TestIamPermissionsResponse>
  /// Lists docker images.
  func listDockerImages(request: Google_Devtools_Artifactregistry_V1beta2_ListDockerImagesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Artifactregistry_V1beta2_ListDockerImagesResponse>
}

extension Google_Devtools_Artifactregistry_V1beta2_ArtifactRegistryProvider {
  public var serviceName: Substring { return "google.devtools.artifactregistry.v1beta2.ArtifactRegistry" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "ListRepositories":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listRepositories(request: request, context: context)
        }
      }

    case "GetRepository":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getRepository(request: request, context: context)
        }
      }

    case "CreateRepository":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createRepository(request: request, context: context)
        }
      }

    case "UpdateRepository":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateRepository(request: request, context: context)
        }
      }

    case "DeleteRepository":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteRepository(request: request, context: context)
        }
      }

    case "ListPackages":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listPackages(request: request, context: context)
        }
      }

    case "GetPackage":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getPackage(request: request, context: context)
        }
      }

    case "DeletePackage":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deletePackage(request: request, context: context)
        }
      }

    case "ListVersions":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listVersions(request: request, context: context)
        }
      }

    case "GetVersion":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getVersion(request: request, context: context)
        }
      }

    case "DeleteVersion":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteVersion(request: request, context: context)
        }
      }

    case "ListFiles":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listFiles(request: request, context: context)
        }
      }

    case "GetFile":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getFile(request: request, context: context)
        }
      }

    case "ListTags":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listTags(request: request, context: context)
        }
      }

    case "GetTag":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getTag(request: request, context: context)
        }
      }

    case "CreateTag":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createTag(request: request, context: context)
        }
      }

    case "UpdateTag":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateTag(request: request, context: context)
        }
      }

    case "DeleteTag":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteTag(request: request, context: context)
        }
      }

    case "SetIamPolicy":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.setIamPolicy(request: request, context: context)
        }
      }

    case "GetIamPolicy":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getIamPolicy(request: request, context: context)
        }
      }

    case "TestIamPermissions":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.testIamPermissions(request: request, context: context)
        }
      }

    case "ListDockerImages":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listDockerImages(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

