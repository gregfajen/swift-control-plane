//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/devtools/cloudbuild/v1/cloudbuild.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Devtools_Cloudbuild_V1_CloudBuildClient, then call methods of this protocol to make API calls.
public protocol Google_Devtools_Cloudbuild_V1_CloudBuildClientProtocol: GRPCClient {
  func createBuild(
    _ request: Google_Devtools_Cloudbuild_V1_CreateBuildRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_CreateBuildRequest, Google_Longrunning_Operation>

  func getBuild(
    _ request: Google_Devtools_Cloudbuild_V1_GetBuildRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_GetBuildRequest, Google_Devtools_Cloudbuild_V1_Build>

  func listBuilds(
    _ request: Google_Devtools_Cloudbuild_V1_ListBuildsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_ListBuildsRequest, Google_Devtools_Cloudbuild_V1_ListBuildsResponse>

  func cancelBuild(
    _ request: Google_Devtools_Cloudbuild_V1_CancelBuildRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_CancelBuildRequest, Google_Devtools_Cloudbuild_V1_Build>

  func retryBuild(
    _ request: Google_Devtools_Cloudbuild_V1_RetryBuildRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_RetryBuildRequest, Google_Longrunning_Operation>

  func createBuildTrigger(
    _ request: Google_Devtools_Cloudbuild_V1_CreateBuildTriggerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_CreateBuildTriggerRequest, Google_Devtools_Cloudbuild_V1_BuildTrigger>

  func getBuildTrigger(
    _ request: Google_Devtools_Cloudbuild_V1_GetBuildTriggerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_GetBuildTriggerRequest, Google_Devtools_Cloudbuild_V1_BuildTrigger>

  func listBuildTriggers(
    _ request: Google_Devtools_Cloudbuild_V1_ListBuildTriggersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_ListBuildTriggersRequest, Google_Devtools_Cloudbuild_V1_ListBuildTriggersResponse>

  func deleteBuildTrigger(
    _ request: Google_Devtools_Cloudbuild_V1_DeleteBuildTriggerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_DeleteBuildTriggerRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func updateBuildTrigger(
    _ request: Google_Devtools_Cloudbuild_V1_UpdateBuildTriggerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_UpdateBuildTriggerRequest, Google_Devtools_Cloudbuild_V1_BuildTrigger>

  func runBuildTrigger(
    _ request: Google_Devtools_Cloudbuild_V1_RunBuildTriggerRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_RunBuildTriggerRequest, Google_Longrunning_Operation>

  func createWorkerPool(
    _ request: Google_Devtools_Cloudbuild_V1_CreateWorkerPoolRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_CreateWorkerPoolRequest, Google_Devtools_Cloudbuild_V1_WorkerPool>

  func getWorkerPool(
    _ request: Google_Devtools_Cloudbuild_V1_GetWorkerPoolRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_GetWorkerPoolRequest, Google_Devtools_Cloudbuild_V1_WorkerPool>

  func deleteWorkerPool(
    _ request: Google_Devtools_Cloudbuild_V1_DeleteWorkerPoolRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_DeleteWorkerPoolRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func updateWorkerPool(
    _ request: Google_Devtools_Cloudbuild_V1_UpdateWorkerPoolRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_UpdateWorkerPoolRequest, Google_Devtools_Cloudbuild_V1_WorkerPool>

  func listWorkerPools(
    _ request: Google_Devtools_Cloudbuild_V1_ListWorkerPoolsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_ListWorkerPoolsRequest, Google_Devtools_Cloudbuild_V1_ListWorkerPoolsResponse>

}

extension Google_Devtools_Cloudbuild_V1_CloudBuildClientProtocol {

  /// Starts a build with the specified configuration.
  ///
  /// This method returns a long-running `Operation`, which includes the build
  /// ID. Pass the build ID to `GetBuild` to determine the build status (such as
  /// `SUCCESS` or `FAILURE`).
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateBuild.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createBuild(
    _ request: Google_Devtools_Cloudbuild_V1_CreateBuildRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_CreateBuildRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.devtools.cloudbuild.v1.CloudBuild/CreateBuild",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns information about a previously requested build.
  ///
  /// The `Build` that is returned includes its status (such as `SUCCESS`,
  /// `FAILURE`, or `WORKING`), and timing information.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBuild.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getBuild(
    _ request: Google_Devtools_Cloudbuild_V1_GetBuildRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_GetBuildRequest, Google_Devtools_Cloudbuild_V1_Build> {
    return self.makeUnaryCall(
      path: "/google.devtools.cloudbuild.v1.CloudBuild/GetBuild",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists previously requested builds.
  ///
  /// Previously requested builds may still be in-progress, or may have finished
  /// successfully or unsuccessfully.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListBuilds.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listBuilds(
    _ request: Google_Devtools_Cloudbuild_V1_ListBuildsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_ListBuildsRequest, Google_Devtools_Cloudbuild_V1_ListBuildsResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.cloudbuild.v1.CloudBuild/ListBuilds",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Cancels a build in progress.
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelBuild.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func cancelBuild(
    _ request: Google_Devtools_Cloudbuild_V1_CancelBuildRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_CancelBuildRequest, Google_Devtools_Cloudbuild_V1_Build> {
    return self.makeUnaryCall(
      path: "/google.devtools.cloudbuild.v1.CloudBuild/CancelBuild",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a new build based on the specified build.
  ///
  /// This method creates a new build using the original build request, which may
  /// or may not result in an identical build.
  ///
  /// For triggered builds:
  ///
  /// * Triggered builds resolve to a precise revision; therefore a retry of a
  /// triggered build will result in a build that uses the same revision.
  ///
  /// For non-triggered builds that specify `RepoSource`:
  ///
  /// * If the original build built from the tip of a branch, the retried build
  /// will build from the tip of that branch, which may not be the same revision
  /// as the original build.
  /// * If the original build specified a commit sha or revision ID, the retried
  /// build will use the identical source.
  ///
  /// For builds that specify `StorageSource`:
  ///
  /// * If the original build pulled source from Google Cloud Storage without
  /// specifying the generation of the object, the new build will use the current
  /// object, which may be different from the original build source.
  /// * If the original build pulled source from Cloud Storage and specified the
  /// generation of the object, the new build will attempt to use the same
  /// object, which may or may not be available depending on the bucket's
  /// lifecycle management settings.
  ///
  /// - Parameters:
  ///   - request: Request to send to RetryBuild.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func retryBuild(
    _ request: Google_Devtools_Cloudbuild_V1_RetryBuildRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_RetryBuildRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.devtools.cloudbuild.v1.CloudBuild/RetryBuild",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a new `BuildTrigger`.
  ///
  /// This API is experimental.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateBuildTrigger.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createBuildTrigger(
    _ request: Google_Devtools_Cloudbuild_V1_CreateBuildTriggerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_CreateBuildTriggerRequest, Google_Devtools_Cloudbuild_V1_BuildTrigger> {
    return self.makeUnaryCall(
      path: "/google.devtools.cloudbuild.v1.CloudBuild/CreateBuildTrigger",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns information about a `BuildTrigger`.
  ///
  /// This API is experimental.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBuildTrigger.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getBuildTrigger(
    _ request: Google_Devtools_Cloudbuild_V1_GetBuildTriggerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_GetBuildTriggerRequest, Google_Devtools_Cloudbuild_V1_BuildTrigger> {
    return self.makeUnaryCall(
      path: "/google.devtools.cloudbuild.v1.CloudBuild/GetBuildTrigger",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists existing `BuildTrigger`s.
  ///
  /// This API is experimental.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListBuildTriggers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listBuildTriggers(
    _ request: Google_Devtools_Cloudbuild_V1_ListBuildTriggersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_ListBuildTriggersRequest, Google_Devtools_Cloudbuild_V1_ListBuildTriggersResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.cloudbuild.v1.CloudBuild/ListBuildTriggers",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a `BuildTrigger` by its project ID and trigger ID.
  ///
  /// This API is experimental.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteBuildTrigger.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteBuildTrigger(
    _ request: Google_Devtools_Cloudbuild_V1_DeleteBuildTriggerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_DeleteBuildTriggerRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.devtools.cloudbuild.v1.CloudBuild/DeleteBuildTrigger",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates a `BuildTrigger` by its project ID and trigger ID.
  ///
  /// This API is experimental.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateBuildTrigger.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateBuildTrigger(
    _ request: Google_Devtools_Cloudbuild_V1_UpdateBuildTriggerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_UpdateBuildTriggerRequest, Google_Devtools_Cloudbuild_V1_BuildTrigger> {
    return self.makeUnaryCall(
      path: "/google.devtools.cloudbuild.v1.CloudBuild/UpdateBuildTrigger",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Runs a `BuildTrigger` at a particular source revision.
  ///
  /// - Parameters:
  ///   - request: Request to send to RunBuildTrigger.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func runBuildTrigger(
    _ request: Google_Devtools_Cloudbuild_V1_RunBuildTriggerRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_RunBuildTriggerRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.devtools.cloudbuild.v1.CloudBuild/RunBuildTrigger",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a `WorkerPool` to run the builds, and returns the new worker pool.
  ///
  /// This API is experimental.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateWorkerPool.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createWorkerPool(
    _ request: Google_Devtools_Cloudbuild_V1_CreateWorkerPoolRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_CreateWorkerPoolRequest, Google_Devtools_Cloudbuild_V1_WorkerPool> {
    return self.makeUnaryCall(
      path: "/google.devtools.cloudbuild.v1.CloudBuild/CreateWorkerPool",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns information about a `WorkerPool`.
  ///
  /// This API is experimental.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetWorkerPool.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getWorkerPool(
    _ request: Google_Devtools_Cloudbuild_V1_GetWorkerPoolRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_GetWorkerPoolRequest, Google_Devtools_Cloudbuild_V1_WorkerPool> {
    return self.makeUnaryCall(
      path: "/google.devtools.cloudbuild.v1.CloudBuild/GetWorkerPool",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a `WorkerPool` by its project ID and WorkerPool name.
  ///
  /// This API is experimental.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteWorkerPool.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteWorkerPool(
    _ request: Google_Devtools_Cloudbuild_V1_DeleteWorkerPoolRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_DeleteWorkerPoolRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.devtools.cloudbuild.v1.CloudBuild/DeleteWorkerPool",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Update a `WorkerPool`.
  ///
  /// This API is experimental.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateWorkerPool.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateWorkerPool(
    _ request: Google_Devtools_Cloudbuild_V1_UpdateWorkerPoolRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_UpdateWorkerPoolRequest, Google_Devtools_Cloudbuild_V1_WorkerPool> {
    return self.makeUnaryCall(
      path: "/google.devtools.cloudbuild.v1.CloudBuild/UpdateWorkerPool",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// List project's `WorkerPools`.
  ///
  /// This API is experimental.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListWorkerPools.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listWorkerPools(
    _ request: Google_Devtools_Cloudbuild_V1_ListWorkerPoolsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Cloudbuild_V1_ListWorkerPoolsRequest, Google_Devtools_Cloudbuild_V1_ListWorkerPoolsResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.cloudbuild.v1.CloudBuild/ListWorkerPools",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Devtools_Cloudbuild_V1_CloudBuildClient: Google_Devtools_Cloudbuild_V1_CloudBuildClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.devtools.cloudbuild.v1.CloudBuild service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Devtools_Cloudbuild_V1_CloudBuildProvider: CallHandlerProvider {
  /// Starts a build with the specified configuration.
  ///
  /// This method returns a long-running `Operation`, which includes the build
  /// ID. Pass the build ID to `GetBuild` to determine the build status (such as
  /// `SUCCESS` or `FAILURE`).
  func createBuild(request: Google_Devtools_Cloudbuild_V1_CreateBuildRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Returns information about a previously requested build.
  ///
  /// The `Build` that is returned includes its status (such as `SUCCESS`,
  /// `FAILURE`, or `WORKING`), and timing information.
  func getBuild(request: Google_Devtools_Cloudbuild_V1_GetBuildRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Cloudbuild_V1_Build>
  /// Lists previously requested builds.
  ///
  /// Previously requested builds may still be in-progress, or may have finished
  /// successfully or unsuccessfully.
  func listBuilds(request: Google_Devtools_Cloudbuild_V1_ListBuildsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Cloudbuild_V1_ListBuildsResponse>
  /// Cancels a build in progress.
  func cancelBuild(request: Google_Devtools_Cloudbuild_V1_CancelBuildRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Cloudbuild_V1_Build>
  /// Creates a new build based on the specified build.
  ///
  /// This method creates a new build using the original build request, which may
  /// or may not result in an identical build.
  ///
  /// For triggered builds:
  ///
  /// * Triggered builds resolve to a precise revision; therefore a retry of a
  /// triggered build will result in a build that uses the same revision.
  ///
  /// For non-triggered builds that specify `RepoSource`:
  ///
  /// * If the original build built from the tip of a branch, the retried build
  /// will build from the tip of that branch, which may not be the same revision
  /// as the original build.
  /// * If the original build specified a commit sha or revision ID, the retried
  /// build will use the identical source.
  ///
  /// For builds that specify `StorageSource`:
  ///
  /// * If the original build pulled source from Google Cloud Storage without
  /// specifying the generation of the object, the new build will use the current
  /// object, which may be different from the original build source.
  /// * If the original build pulled source from Cloud Storage and specified the
  /// generation of the object, the new build will attempt to use the same
  /// object, which may or may not be available depending on the bucket's
  /// lifecycle management settings.
  func retryBuild(request: Google_Devtools_Cloudbuild_V1_RetryBuildRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Creates a new `BuildTrigger`.
  ///
  /// This API is experimental.
  func createBuildTrigger(request: Google_Devtools_Cloudbuild_V1_CreateBuildTriggerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Cloudbuild_V1_BuildTrigger>
  /// Returns information about a `BuildTrigger`.
  ///
  /// This API is experimental.
  func getBuildTrigger(request: Google_Devtools_Cloudbuild_V1_GetBuildTriggerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Cloudbuild_V1_BuildTrigger>
  /// Lists existing `BuildTrigger`s.
  ///
  /// This API is experimental.
  func listBuildTriggers(request: Google_Devtools_Cloudbuild_V1_ListBuildTriggersRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Cloudbuild_V1_ListBuildTriggersResponse>
  /// Deletes a `BuildTrigger` by its project ID and trigger ID.
  ///
  /// This API is experimental.
  func deleteBuildTrigger(request: Google_Devtools_Cloudbuild_V1_DeleteBuildTriggerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Updates a `BuildTrigger` by its project ID and trigger ID.
  ///
  /// This API is experimental.
  func updateBuildTrigger(request: Google_Devtools_Cloudbuild_V1_UpdateBuildTriggerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Cloudbuild_V1_BuildTrigger>
  /// Runs a `BuildTrigger` at a particular source revision.
  func runBuildTrigger(request: Google_Devtools_Cloudbuild_V1_RunBuildTriggerRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Creates a `WorkerPool` to run the builds, and returns the new worker pool.
  ///
  /// This API is experimental.
  func createWorkerPool(request: Google_Devtools_Cloudbuild_V1_CreateWorkerPoolRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Cloudbuild_V1_WorkerPool>
  /// Returns information about a `WorkerPool`.
  ///
  /// This API is experimental.
  func getWorkerPool(request: Google_Devtools_Cloudbuild_V1_GetWorkerPoolRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Cloudbuild_V1_WorkerPool>
  /// Deletes a `WorkerPool` by its project ID and WorkerPool name.
  ///
  /// This API is experimental.
  func deleteWorkerPool(request: Google_Devtools_Cloudbuild_V1_DeleteWorkerPoolRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Update a `WorkerPool`.
  ///
  /// This API is experimental.
  func updateWorkerPool(request: Google_Devtools_Cloudbuild_V1_UpdateWorkerPoolRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Cloudbuild_V1_WorkerPool>
  /// List project's `WorkerPools`.
  ///
  /// This API is experimental.
  func listWorkerPools(request: Google_Devtools_Cloudbuild_V1_ListWorkerPoolsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Cloudbuild_V1_ListWorkerPoolsResponse>
}

extension Google_Devtools_Cloudbuild_V1_CloudBuildProvider {
  public var serviceName: Substring { return "google.devtools.cloudbuild.v1.CloudBuild" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "CreateBuild":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createBuild(request: request, context: context)
        }
      }

    case "GetBuild":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getBuild(request: request, context: context)
        }
      }

    case "ListBuilds":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listBuilds(request: request, context: context)
        }
      }

    case "CancelBuild":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.cancelBuild(request: request, context: context)
        }
      }

    case "RetryBuild":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.retryBuild(request: request, context: context)
        }
      }

    case "CreateBuildTrigger":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createBuildTrigger(request: request, context: context)
        }
      }

    case "GetBuildTrigger":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getBuildTrigger(request: request, context: context)
        }
      }

    case "ListBuildTriggers":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listBuildTriggers(request: request, context: context)
        }
      }

    case "DeleteBuildTrigger":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteBuildTrigger(request: request, context: context)
        }
      }

    case "UpdateBuildTrigger":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateBuildTrigger(request: request, context: context)
        }
      }

    case "RunBuildTrigger":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.runBuildTrigger(request: request, context: context)
        }
      }

    case "CreateWorkerPool":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createWorkerPool(request: request, context: context)
        }
      }

    case "GetWorkerPool":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getWorkerPool(request: request, context: context)
        }
      }

    case "DeleteWorkerPool":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteWorkerPool(request: request, context: context)
        }
      }

    case "UpdateWorkerPool":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateWorkerPool(request: request, context: context)
        }
      }

    case "ListWorkerPools":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listWorkerPools(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

