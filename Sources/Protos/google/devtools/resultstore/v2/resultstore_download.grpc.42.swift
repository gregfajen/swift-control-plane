//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/devtools/resultstore/v2/resultstore_download.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Devtools_Resultstore_V2_ResultStoreDownloadClient, then call methods of this protocol to make API calls.
public protocol Google_Devtools_Resultstore_V2_ResultStoreDownloadClientProtocol: GRPCClient {
  func getInvocation(
    _ request: Google_Devtools_Resultstore_V2_GetInvocationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_GetInvocationRequest, Google_Devtools_Resultstore_V2_Invocation>

  func searchInvocations(
    _ request: Google_Devtools_Resultstore_V2_SearchInvocationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_SearchInvocationsRequest, Google_Devtools_Resultstore_V2_SearchInvocationsResponse>

  func getInvocationDownloadMetadata(
    _ request: Google_Devtools_Resultstore_V2_GetInvocationDownloadMetadataRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_GetInvocationDownloadMetadataRequest, Google_Devtools_Resultstore_V2_DownloadMetadata>

  func getConfiguration(
    _ request: Google_Devtools_Resultstore_V2_GetConfigurationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_GetConfigurationRequest, Google_Devtools_Resultstore_V2_Configuration>

  func listConfigurations(
    _ request: Google_Devtools_Resultstore_V2_ListConfigurationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_ListConfigurationsRequest, Google_Devtools_Resultstore_V2_ListConfigurationsResponse>

  func getTarget(
    _ request: Google_Devtools_Resultstore_V2_GetTargetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_GetTargetRequest, Google_Devtools_Resultstore_V2_Target>

  func listTargets(
    _ request: Google_Devtools_Resultstore_V2_ListTargetsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_ListTargetsRequest, Google_Devtools_Resultstore_V2_ListTargetsResponse>

  func getConfiguredTarget(
    _ request: Google_Devtools_Resultstore_V2_GetConfiguredTargetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_GetConfiguredTargetRequest, Google_Devtools_Resultstore_V2_ConfiguredTarget>

  func listConfiguredTargets(
    _ request: Google_Devtools_Resultstore_V2_ListConfiguredTargetsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_ListConfiguredTargetsRequest, Google_Devtools_Resultstore_V2_ListConfiguredTargetsResponse>

  func getAction(
    _ request: Google_Devtools_Resultstore_V2_GetActionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_GetActionRequest, Google_Devtools_Resultstore_V2_Action>

  func listActions(
    _ request: Google_Devtools_Resultstore_V2_ListActionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_ListActionsRequest, Google_Devtools_Resultstore_V2_ListActionsResponse>

  func getFileSet(
    _ request: Google_Devtools_Resultstore_V2_GetFileSetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_GetFileSetRequest, Google_Devtools_Resultstore_V2_FileSet>

  func listFileSets(
    _ request: Google_Devtools_Resultstore_V2_ListFileSetsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_ListFileSetsRequest, Google_Devtools_Resultstore_V2_ListFileSetsResponse>

  func traverseFileSets(
    _ request: Google_Devtools_Resultstore_V2_TraverseFileSetsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_TraverseFileSetsRequest, Google_Devtools_Resultstore_V2_TraverseFileSetsResponse>

}

extension Google_Devtools_Resultstore_V2_ResultStoreDownloadClientProtocol {

  /// Retrieves the invocation with the given name.
  ///
  /// An error will be reported in the following cases:
  /// - If the invocation is not found.
  /// - If the given invocation name is badly formatted.
  /// - If no field mask was given.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetInvocation.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getInvocation(
    _ request: Google_Devtools_Resultstore_V2_GetInvocationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_GetInvocationRequest, Google_Devtools_Resultstore_V2_Invocation> {
    return self.makeUnaryCall(
      path: "/google.devtools.resultstore.v2.ResultStoreDownload/GetInvocation",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Searches for invocations matching the given query parameters. Results will
  /// be ordered by timing.start_time with most recent first, but total ordering
  /// of results is not guaranteed when difference in timestamps is very small.
  /// Results may be stale.
  ///
  ///
  /// An error will be reported in the following cases:
  /// - If a query string is not provided
  /// - If no field mask was given.
  ///
  /// - Parameters:
  ///   - request: Request to send to SearchInvocations.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func searchInvocations(
    _ request: Google_Devtools_Resultstore_V2_SearchInvocationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_SearchInvocationsRequest, Google_Devtools_Resultstore_V2_SearchInvocationsResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.resultstore.v2.ResultStoreDownload/SearchInvocations",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves the metadata for an invocation with the given name.
  ///
  /// An error will be reported in the following cases:
  /// - If the invocation is not found.
  /// - If the given invocation name is badly formatted.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetInvocationDownloadMetadata.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getInvocationDownloadMetadata(
    _ request: Google_Devtools_Resultstore_V2_GetInvocationDownloadMetadataRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_GetInvocationDownloadMetadataRequest, Google_Devtools_Resultstore_V2_DownloadMetadata> {
    return self.makeUnaryCall(
      path: "/google.devtools.resultstore.v2.ResultStoreDownload/GetInvocationDownloadMetadata",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves the configuration with the given name.
  ///
  /// An error will be reported in the following cases:
  /// - If the configuration or its parent invocation is not found.
  /// - If the given configuration name is badly formatted.
  /// - If no field mask was given.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetConfiguration.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getConfiguration(
    _ request: Google_Devtools_Resultstore_V2_GetConfigurationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_GetConfigurationRequest, Google_Devtools_Resultstore_V2_Configuration> {
    return self.makeUnaryCall(
      path: "/google.devtools.resultstore.v2.ResultStoreDownload/GetConfiguration",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves all configurations for a parent invocation.
  /// This might be limited by user or server,
  /// in which case a continuation token is provided.
  /// The order in which results are returned is undefined, but stable.
  ///
  /// An error will be reported in the following cases:
  /// - If the parent invocation is not found.
  /// - If the given parent invocation name is badly formatted.
  /// - If no field mask was given.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListConfigurations.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listConfigurations(
    _ request: Google_Devtools_Resultstore_V2_ListConfigurationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_ListConfigurationsRequest, Google_Devtools_Resultstore_V2_ListConfigurationsResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.resultstore.v2.ResultStoreDownload/ListConfigurations",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves the target with the given name.
  ///
  /// An error will be reported in the following cases:
  /// - If the target or its parent invocation is not found.
  /// - If the given target name is badly formatted.
  /// - If no field mask was given.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTarget.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTarget(
    _ request: Google_Devtools_Resultstore_V2_GetTargetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_GetTargetRequest, Google_Devtools_Resultstore_V2_Target> {
    return self.makeUnaryCall(
      path: "/google.devtools.resultstore.v2.ResultStoreDownload/GetTarget",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves all targets for a parent invocation.  This might be limited by
  /// user or server, in which case a continuation token is provided.
  /// The order in which results are returned is undefined, but stable.
  ///
  /// An error will be reported in the following cases:
  /// - If the parent is not found.
  /// - If the given parent name is badly formatted.
  /// - If no field mask was given.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListTargets.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listTargets(
    _ request: Google_Devtools_Resultstore_V2_ListTargetsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_ListTargetsRequest, Google_Devtools_Resultstore_V2_ListTargetsResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.resultstore.v2.ResultStoreDownload/ListTargets",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves the configured target with the given name.
  ///
  /// An error will be reported in the following cases:
  /// - If the configured target is not found.
  /// - If the given name is badly formatted.
  /// - If no field mask was given.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetConfiguredTarget.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getConfiguredTarget(
    _ request: Google_Devtools_Resultstore_V2_GetConfiguredTargetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_GetConfiguredTargetRequest, Google_Devtools_Resultstore_V2_ConfiguredTarget> {
    return self.makeUnaryCall(
      path: "/google.devtools.resultstore.v2.ResultStoreDownload/GetConfiguredTarget",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves all configured targets for a parent invocation/target.
  /// This might be limited by user or server, in which case a continuation
  /// token is provided.  Supports '-' for targetId meaning all targets.
  /// The order in which results are returned is undefined, but stable.
  ///
  /// An error will be reported in the following cases:
  /// - If the parent is not found.
  /// - If the given parent name is badly formatted.
  /// - If no field mask was given.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListConfiguredTargets.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listConfiguredTargets(
    _ request: Google_Devtools_Resultstore_V2_ListConfiguredTargetsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_ListConfiguredTargetsRequest, Google_Devtools_Resultstore_V2_ListConfiguredTargetsResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.resultstore.v2.ResultStoreDownload/ListConfiguredTargets",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves the action with the given name.
  ///
  /// An error will be reported in the following cases:
  /// - If the action is not found.
  /// - If the given name is badly formatted.
  /// - If no field mask was given.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAction.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAction(
    _ request: Google_Devtools_Resultstore_V2_GetActionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_GetActionRequest, Google_Devtools_Resultstore_V2_Action> {
    return self.makeUnaryCall(
      path: "/google.devtools.resultstore.v2.ResultStoreDownload/GetAction",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves all actions for a parent invocation/target/configuration.
  /// This might be limited by user or server, in which case a continuation
  /// token is provided.  Supports '-' for configurationId to mean all
  /// actions for all configurations for a target, or '-' for targetId and
  /// configurationId to mean all actions for all configurations and all targets.
  /// Does not support targetId '-' with a specified configuration.
  /// The order in which results are returned is undefined, but stable.
  ///
  /// An error will be reported in the following cases:
  /// - If the parent is not found.
  /// - If the given parent name is badly formatted.
  /// - If no field mask was given.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListActions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listActions(
    _ request: Google_Devtools_Resultstore_V2_ListActionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_ListActionsRequest, Google_Devtools_Resultstore_V2_ListActionsResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.resultstore.v2.ResultStoreDownload/ListActions",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves the file set with the given name.
  ///
  /// An error will be reported in the following cases:
  /// - If the file set or its parent invocation is not found.
  /// - If the given file set name is badly formatted.
  /// - If no field mask was given.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetFileSet.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getFileSet(
    _ request: Google_Devtools_Resultstore_V2_GetFileSetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_GetFileSetRequest, Google_Devtools_Resultstore_V2_FileSet> {
    return self.makeUnaryCall(
      path: "/google.devtools.resultstore.v2.ResultStoreDownload/GetFileSet",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves all file sets for a parent invocation.
  /// This might be limited by user or server,
  /// in which case a continuation token is provided.
  /// The order in which results are returned is undefined, but stable.
  ///
  /// An error will be reported in the following cases:
  /// - If the parent invocation is not found.
  /// - If the given parent invocation name is badly formatted.
  /// - If no field mask was given.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListFileSets.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listFileSets(
    _ request: Google_Devtools_Resultstore_V2_ListFileSetsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_ListFileSetsRequest, Google_Devtools_Resultstore_V2_ListFileSetsResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.resultstore.v2.ResultStoreDownload/ListFileSets",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns the transitive closure of FileSets. This might be limited by user
  /// or server, in which case a continuation token is provided.
  /// The order in which results are returned is undefined, and unstable.
  ///
  /// An error will be reported in the following cases:
  /// - If page_token is too large to continue the calculation.
  /// - If the resource is not found.
  /// - If the given resource name is badly formatted.
  /// - If no field mask was given.
  ///
  /// - Parameters:
  ///   - request: Request to send to TraverseFileSets.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func traverseFileSets(
    _ request: Google_Devtools_Resultstore_V2_TraverseFileSetsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Devtools_Resultstore_V2_TraverseFileSetsRequest, Google_Devtools_Resultstore_V2_TraverseFileSetsResponse> {
    return self.makeUnaryCall(
      path: "/google.devtools.resultstore.v2.ResultStoreDownload/TraverseFileSets",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Devtools_Resultstore_V2_ResultStoreDownloadClient: Google_Devtools_Resultstore_V2_ResultStoreDownloadClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.devtools.resultstore.v2.ResultStoreDownload service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Devtools_Resultstore_V2_ResultStoreDownloadProvider: CallHandlerProvider {
  /// Retrieves the invocation with the given name.
  ///
  /// An error will be reported in the following cases:
  /// - If the invocation is not found.
  /// - If the given invocation name is badly formatted.
  /// - If no field mask was given.
  func getInvocation(request: Google_Devtools_Resultstore_V2_GetInvocationRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Resultstore_V2_Invocation>
  /// Searches for invocations matching the given query parameters. Results will
  /// be ordered by timing.start_time with most recent first, but total ordering
  /// of results is not guaranteed when difference in timestamps is very small.
  /// Results may be stale.
  ///
  ///
  /// An error will be reported in the following cases:
  /// - If a query string is not provided
  /// - If no field mask was given.
  func searchInvocations(request: Google_Devtools_Resultstore_V2_SearchInvocationsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Resultstore_V2_SearchInvocationsResponse>
  /// Retrieves the metadata for an invocation with the given name.
  ///
  /// An error will be reported in the following cases:
  /// - If the invocation is not found.
  /// - If the given invocation name is badly formatted.
  func getInvocationDownloadMetadata(request: Google_Devtools_Resultstore_V2_GetInvocationDownloadMetadataRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Resultstore_V2_DownloadMetadata>
  /// Retrieves the configuration with the given name.
  ///
  /// An error will be reported in the following cases:
  /// - If the configuration or its parent invocation is not found.
  /// - If the given configuration name is badly formatted.
  /// - If no field mask was given.
  func getConfiguration(request: Google_Devtools_Resultstore_V2_GetConfigurationRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Resultstore_V2_Configuration>
  /// Retrieves all configurations for a parent invocation.
  /// This might be limited by user or server,
  /// in which case a continuation token is provided.
  /// The order in which results are returned is undefined, but stable.
  ///
  /// An error will be reported in the following cases:
  /// - If the parent invocation is not found.
  /// - If the given parent invocation name is badly formatted.
  /// - If no field mask was given.
  func listConfigurations(request: Google_Devtools_Resultstore_V2_ListConfigurationsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Resultstore_V2_ListConfigurationsResponse>
  /// Retrieves the target with the given name.
  ///
  /// An error will be reported in the following cases:
  /// - If the target or its parent invocation is not found.
  /// - If the given target name is badly formatted.
  /// - If no field mask was given.
  func getTarget(request: Google_Devtools_Resultstore_V2_GetTargetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Resultstore_V2_Target>
  /// Retrieves all targets for a parent invocation.  This might be limited by
  /// user or server, in which case a continuation token is provided.
  /// The order in which results are returned is undefined, but stable.
  ///
  /// An error will be reported in the following cases:
  /// - If the parent is not found.
  /// - If the given parent name is badly formatted.
  /// - If no field mask was given.
  func listTargets(request: Google_Devtools_Resultstore_V2_ListTargetsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Resultstore_V2_ListTargetsResponse>
  /// Retrieves the configured target with the given name.
  ///
  /// An error will be reported in the following cases:
  /// - If the configured target is not found.
  /// - If the given name is badly formatted.
  /// - If no field mask was given.
  func getConfiguredTarget(request: Google_Devtools_Resultstore_V2_GetConfiguredTargetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Resultstore_V2_ConfiguredTarget>
  /// Retrieves all configured targets for a parent invocation/target.
  /// This might be limited by user or server, in which case a continuation
  /// token is provided.  Supports '-' for targetId meaning all targets.
  /// The order in which results are returned is undefined, but stable.
  ///
  /// An error will be reported in the following cases:
  /// - If the parent is not found.
  /// - If the given parent name is badly formatted.
  /// - If no field mask was given.
  func listConfiguredTargets(request: Google_Devtools_Resultstore_V2_ListConfiguredTargetsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Resultstore_V2_ListConfiguredTargetsResponse>
  /// Retrieves the action with the given name.
  ///
  /// An error will be reported in the following cases:
  /// - If the action is not found.
  /// - If the given name is badly formatted.
  /// - If no field mask was given.
  func getAction(request: Google_Devtools_Resultstore_V2_GetActionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Resultstore_V2_Action>
  /// Retrieves all actions for a parent invocation/target/configuration.
  /// This might be limited by user or server, in which case a continuation
  /// token is provided.  Supports '-' for configurationId to mean all
  /// actions for all configurations for a target, or '-' for targetId and
  /// configurationId to mean all actions for all configurations and all targets.
  /// Does not support targetId '-' with a specified configuration.
  /// The order in which results are returned is undefined, but stable.
  ///
  /// An error will be reported in the following cases:
  /// - If the parent is not found.
  /// - If the given parent name is badly formatted.
  /// - If no field mask was given.
  func listActions(request: Google_Devtools_Resultstore_V2_ListActionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Resultstore_V2_ListActionsResponse>
  /// Retrieves the file set with the given name.
  ///
  /// An error will be reported in the following cases:
  /// - If the file set or its parent invocation is not found.
  /// - If the given file set name is badly formatted.
  /// - If no field mask was given.
  func getFileSet(request: Google_Devtools_Resultstore_V2_GetFileSetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Resultstore_V2_FileSet>
  /// Retrieves all file sets for a parent invocation.
  /// This might be limited by user or server,
  /// in which case a continuation token is provided.
  /// The order in which results are returned is undefined, but stable.
  ///
  /// An error will be reported in the following cases:
  /// - If the parent invocation is not found.
  /// - If the given parent invocation name is badly formatted.
  /// - If no field mask was given.
  func listFileSets(request: Google_Devtools_Resultstore_V2_ListFileSetsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Resultstore_V2_ListFileSetsResponse>
  /// Returns the transitive closure of FileSets. This might be limited by user
  /// or server, in which case a continuation token is provided.
  /// The order in which results are returned is undefined, and unstable.
  ///
  /// An error will be reported in the following cases:
  /// - If page_token is too large to continue the calculation.
  /// - If the resource is not found.
  /// - If the given resource name is badly formatted.
  /// - If no field mask was given.
  func traverseFileSets(request: Google_Devtools_Resultstore_V2_TraverseFileSetsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Devtools_Resultstore_V2_TraverseFileSetsResponse>
}

extension Google_Devtools_Resultstore_V2_ResultStoreDownloadProvider {
  public var serviceName: Substring { return "google.devtools.resultstore.v2.ResultStoreDownload" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "GetInvocation":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getInvocation(request: request, context: context)
        }
      }

    case "SearchInvocations":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.searchInvocations(request: request, context: context)
        }
      }

    case "GetInvocationDownloadMetadata":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getInvocationDownloadMetadata(request: request, context: context)
        }
      }

    case "GetConfiguration":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getConfiguration(request: request, context: context)
        }
      }

    case "ListConfigurations":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listConfigurations(request: request, context: context)
        }
      }

    case "GetTarget":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getTarget(request: request, context: context)
        }
      }

    case "ListTargets":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listTargets(request: request, context: context)
        }
      }

    case "GetConfiguredTarget":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getConfiguredTarget(request: request, context: context)
        }
      }

    case "ListConfiguredTargets":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listConfiguredTargets(request: request, context: context)
        }
      }

    case "GetAction":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getAction(request: request, context: context)
        }
      }

    case "ListActions":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listActions(request: request, context: context)
        }
      }

    case "GetFileSet":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getFileSet(request: request, context: context)
        }
      }

    case "ListFileSets":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listFileSets(request: request, context: context)
        }
      }

    case "TraverseFileSets":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.traverseFileSets(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

