//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/support/v1alpha1/cloud_support.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Support_V1alpha1_CloudSupportClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Support_V1alpha1_CloudSupportClientProtocol: GRPCClient {
  func getSupportAccount(
    _ request: Google_Cloud_Support_V1alpha1_GetSupportAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_GetSupportAccountRequest, Google_Cloud_Support_Common_SupportAccount>

  func listSupportAccounts(
    _ request: Google_Cloud_Support_V1alpha1_ListSupportAccountsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_ListSupportAccountsRequest, Google_Cloud_Support_V1alpha1_ListSupportAccountsResponse>

  func getCase(
    _ request: Google_Cloud_Support_V1alpha1_GetCaseRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_GetCaseRequest, Google_Cloud_Support_Common_Case>

  func listCases(
    _ request: Google_Cloud_Support_V1alpha1_ListCasesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_ListCasesRequest, Google_Cloud_Support_V1alpha1_ListCasesResponse>

  func listComments(
    _ request: Google_Cloud_Support_V1alpha1_ListCommentsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_ListCommentsRequest, Google_Cloud_Support_V1alpha1_ListCommentsResponse>

  func createCase(
    _ request: Google_Cloud_Support_V1alpha1_CreateCaseRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_CreateCaseRequest, Google_Cloud_Support_Common_Case>

  func updateCase(
    _ request: Google_Cloud_Support_V1alpha1_UpdateCaseRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_UpdateCaseRequest, Google_Cloud_Support_Common_Case>

  func createComment(
    _ request: Google_Cloud_Support_V1alpha1_CreateCommentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_CreateCommentRequest, Google_Cloud_Support_Common_Comment>

  func getIssueTaxonomy(
    _ request: Google_Cloud_Support_V1alpha1_GetIssueTaxonomyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_GetIssueTaxonomyRequest, Google_Cloud_Support_Common_IssueTaxonomy>

}

extension Google_Cloud_Support_V1alpha1_CloudSupportClientProtocol {

  /// Retrieves the support account details given an account identifier.
  /// The authenticated user calling this method must be the account owner.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSupportAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getSupportAccount(
    _ request: Google_Cloud_Support_V1alpha1_GetSupportAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_GetSupportAccountRequest, Google_Cloud_Support_Common_SupportAccount> {
    return self.makeUnaryCall(
      path: "/google.cloud.support.v1alpha1.CloudSupport/GetSupportAccount",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves the list of accounts the current authenticated user has access
  /// to.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListSupportAccounts.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listSupportAccounts(
    _ request: Google_Cloud_Support_V1alpha1_ListSupportAccountsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_ListSupportAccountsRequest, Google_Cloud_Support_V1alpha1_ListSupportAccountsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.support.v1alpha1.CloudSupport/ListSupportAccounts",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves the details for a support case. The current authenticated user
  /// calling this method must have permissions to view this case.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCase.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getCase(
    _ request: Google_Cloud_Support_V1alpha1_GetCaseRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_GetCaseRequest, Google_Cloud_Support_Common_Case> {
    return self.makeUnaryCall(
      path: "/google.cloud.support.v1alpha1.CloudSupport/GetCase",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves the list of support cases associated with an account. The current
  /// authenticated user must have the permission to list and view these cases.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListCases.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listCases(
    _ request: Google_Cloud_Support_V1alpha1_ListCasesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_ListCasesRequest, Google_Cloud_Support_V1alpha1_ListCasesResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.support.v1alpha1.CloudSupport/ListCases",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists all comments from a case.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListComments.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listComments(
    _ request: Google_Cloud_Support_V1alpha1_ListCommentsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_ListCommentsRequest, Google_Cloud_Support_V1alpha1_ListCommentsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.support.v1alpha1.CloudSupport/ListComments",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a case and associates it with a
  /// [SupportAccount][google.cloud.support.v1alpha2.SupportAcccount]. The
  /// authenticated user attempting this action must have permissions to create a
  /// `Case` under that [SupportAccount].
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateCase.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createCase(
    _ request: Google_Cloud_Support_V1alpha1_CreateCaseRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_CreateCaseRequest, Google_Cloud_Support_Common_Case> {
    return self.makeUnaryCall(
      path: "/google.cloud.support.v1alpha1.CloudSupport/CreateCase",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates a support case. Only a small set of details (priority, subject and
  /// cc_address) can be update after a case is created.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateCase.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateCase(
    _ request: Google_Cloud_Support_V1alpha1_UpdateCaseRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_UpdateCaseRequest, Google_Cloud_Support_Common_Case> {
    return self.makeUnaryCall(
      path: "/google.cloud.support.v1alpha1.CloudSupport/UpdateCase",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Adds a new comment to a case.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateComment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createComment(
    _ request: Google_Cloud_Support_V1alpha1_CreateCommentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_CreateCommentRequest, Google_Cloud_Support_Common_Comment> {
    return self.makeUnaryCall(
      path: "/google.cloud.support.v1alpha1.CloudSupport/CreateComment",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves the taxonomy of product categories and components to be used
  /// while creating a support case.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetIssueTaxonomy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getIssueTaxonomy(
    _ request: Google_Cloud_Support_V1alpha1_GetIssueTaxonomyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Support_V1alpha1_GetIssueTaxonomyRequest, Google_Cloud_Support_Common_IssueTaxonomy> {
    return self.makeUnaryCall(
      path: "/google.cloud.support.v1alpha1.CloudSupport/GetIssueTaxonomy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Support_V1alpha1_CloudSupportClient: Google_Cloud_Support_V1alpha1_CloudSupportClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.support.v1alpha1.CloudSupport service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Support_V1alpha1_CloudSupportProvider: CallHandlerProvider {
  /// Retrieves the support account details given an account identifier.
  /// The authenticated user calling this method must be the account owner.
  func getSupportAccount(request: Google_Cloud_Support_V1alpha1_GetSupportAccountRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Support_Common_SupportAccount>
  /// Retrieves the list of accounts the current authenticated user has access
  /// to.
  func listSupportAccounts(request: Google_Cloud_Support_V1alpha1_ListSupportAccountsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Support_V1alpha1_ListSupportAccountsResponse>
  /// Retrieves the details for a support case. The current authenticated user
  /// calling this method must have permissions to view this case.
  func getCase(request: Google_Cloud_Support_V1alpha1_GetCaseRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Support_Common_Case>
  /// Retrieves the list of support cases associated with an account. The current
  /// authenticated user must have the permission to list and view these cases.
  func listCases(request: Google_Cloud_Support_V1alpha1_ListCasesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Support_V1alpha1_ListCasesResponse>
  /// Lists all comments from a case.
  func listComments(request: Google_Cloud_Support_V1alpha1_ListCommentsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Support_V1alpha1_ListCommentsResponse>
  /// Creates a case and associates it with a
  /// [SupportAccount][google.cloud.support.v1alpha2.SupportAcccount]. The
  /// authenticated user attempting this action must have permissions to create a
  /// `Case` under that [SupportAccount].
  func createCase(request: Google_Cloud_Support_V1alpha1_CreateCaseRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Support_Common_Case>
  /// Updates a support case. Only a small set of details (priority, subject and
  /// cc_address) can be update after a case is created.
  func updateCase(request: Google_Cloud_Support_V1alpha1_UpdateCaseRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Support_Common_Case>
  /// Adds a new comment to a case.
  func createComment(request: Google_Cloud_Support_V1alpha1_CreateCommentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Support_Common_Comment>
  /// Retrieves the taxonomy of product categories and components to be used
  /// while creating a support case.
  func getIssueTaxonomy(request: Google_Cloud_Support_V1alpha1_GetIssueTaxonomyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Support_Common_IssueTaxonomy>
}

extension Google_Cloud_Support_V1alpha1_CloudSupportProvider {
  public var serviceName: Substring { return "google.cloud.support.v1alpha1.CloudSupport" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "GetSupportAccount":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getSupportAccount(request: request, context: context)
        }
      }

    case "ListSupportAccounts":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listSupportAccounts(request: request, context: context)
        }
      }

    case "GetCase":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getCase(request: request, context: context)
        }
      }

    case "ListCases":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listCases(request: request, context: context)
        }
      }

    case "ListComments":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listComments(request: request, context: context)
        }
      }

    case "CreateCase":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createCase(request: request, context: context)
        }
      }

    case "UpdateCase":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateCase(request: request, context: context)
        }
      }

    case "CreateComment":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createComment(request: request, context: context)
        }
      }

    case "GetIssueTaxonomy":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getIssueTaxonomy(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

