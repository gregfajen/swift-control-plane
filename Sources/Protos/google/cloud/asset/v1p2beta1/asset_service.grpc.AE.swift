//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/asset/v1p2beta1/asset_service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Asset_V1p2beta1_AssetServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Asset_V1p2beta1_AssetServiceClientProtocol: GRPCClient {
  func createFeed(
    _ request: Google_Cloud_Asset_V1p2beta1_CreateFeedRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Asset_V1p2beta1_CreateFeedRequest, Google_Cloud_Asset_V1p2beta1_Feed>

  func getFeed(
    _ request: Google_Cloud_Asset_V1p2beta1_GetFeedRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Asset_V1p2beta1_GetFeedRequest, Google_Cloud_Asset_V1p2beta1_Feed>

  func listFeeds(
    _ request: Google_Cloud_Asset_V1p2beta1_ListFeedsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Asset_V1p2beta1_ListFeedsRequest, Google_Cloud_Asset_V1p2beta1_ListFeedsResponse>

  func updateFeed(
    _ request: Google_Cloud_Asset_V1p2beta1_UpdateFeedRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Asset_V1p2beta1_UpdateFeedRequest, Google_Cloud_Asset_V1p2beta1_Feed>

  func deleteFeed(
    _ request: Google_Cloud_Asset_V1p2beta1_DeleteFeedRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Asset_V1p2beta1_DeleteFeedRequest, SwiftProtobuf.Google_Protobuf_Empty>

}

extension Google_Cloud_Asset_V1p2beta1_AssetServiceClientProtocol {

  /// Creates a feed in a parent project/folder/organization to listen to its
  /// asset updates.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateFeed.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createFeed(
    _ request: Google_Cloud_Asset_V1p2beta1_CreateFeedRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Asset_V1p2beta1_CreateFeedRequest, Google_Cloud_Asset_V1p2beta1_Feed> {
    return self.makeUnaryCall(
      path: "/google.cloud.asset.v1p2beta1.AssetService/CreateFeed",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets details about an asset feed.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetFeed.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getFeed(
    _ request: Google_Cloud_Asset_V1p2beta1_GetFeedRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Asset_V1p2beta1_GetFeedRequest, Google_Cloud_Asset_V1p2beta1_Feed> {
    return self.makeUnaryCall(
      path: "/google.cloud.asset.v1p2beta1.AssetService/GetFeed",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists all asset feeds in a parent project/folder/organization.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListFeeds.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listFeeds(
    _ request: Google_Cloud_Asset_V1p2beta1_ListFeedsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Asset_V1p2beta1_ListFeedsRequest, Google_Cloud_Asset_V1p2beta1_ListFeedsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.asset.v1p2beta1.AssetService/ListFeeds",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates an asset feed configuration.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateFeed.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateFeed(
    _ request: Google_Cloud_Asset_V1p2beta1_UpdateFeedRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Asset_V1p2beta1_UpdateFeedRequest, Google_Cloud_Asset_V1p2beta1_Feed> {
    return self.makeUnaryCall(
      path: "/google.cloud.asset.v1p2beta1.AssetService/UpdateFeed",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes an asset feed.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteFeed.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteFeed(
    _ request: Google_Cloud_Asset_V1p2beta1_DeleteFeedRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Asset_V1p2beta1_DeleteFeedRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.asset.v1p2beta1.AssetService/DeleteFeed",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Asset_V1p2beta1_AssetServiceClient: Google_Cloud_Asset_V1p2beta1_AssetServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.asset.v1p2beta1.AssetService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Asset_V1p2beta1_AssetServiceProvider: CallHandlerProvider {
  /// Creates a feed in a parent project/folder/organization to listen to its
  /// asset updates.
  func createFeed(request: Google_Cloud_Asset_V1p2beta1_CreateFeedRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Asset_V1p2beta1_Feed>
  /// Gets details about an asset feed.
  func getFeed(request: Google_Cloud_Asset_V1p2beta1_GetFeedRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Asset_V1p2beta1_Feed>
  /// Lists all asset feeds in a parent project/folder/organization.
  func listFeeds(request: Google_Cloud_Asset_V1p2beta1_ListFeedsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Asset_V1p2beta1_ListFeedsResponse>
  /// Updates an asset feed configuration.
  func updateFeed(request: Google_Cloud_Asset_V1p2beta1_UpdateFeedRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Asset_V1p2beta1_Feed>
  /// Deletes an asset feed.
  func deleteFeed(request: Google_Cloud_Asset_V1p2beta1_DeleteFeedRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
}

extension Google_Cloud_Asset_V1p2beta1_AssetServiceProvider {
  public var serviceName: Substring { return "google.cloud.asset.v1p2beta1.AssetService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "CreateFeed":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createFeed(request: request, context: context)
        }
      }

    case "GetFeed":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getFeed(request: request, context: context)
        }
      }

    case "ListFeeds":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listFeeds(request: request, context: context)
        }
      }

    case "UpdateFeed":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateFeed(request: request, context: context)
        }
      }

    case "DeleteFeed":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteFeed(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

