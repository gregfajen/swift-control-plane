//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/asset/v1beta1/asset_service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Asset_V1beta1_AssetServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Asset_V1beta1_AssetServiceClientProtocol: GRPCClient {
  func exportAssets(
    _ request: Google_Cloud_Asset_V1beta1_ExportAssetsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Asset_V1beta1_ExportAssetsRequest, Google_Longrunning_Operation>

  func batchGetAssetsHistory(
    _ request: Google_Cloud_Asset_V1beta1_BatchGetAssetsHistoryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Asset_V1beta1_BatchGetAssetsHistoryRequest, Google_Cloud_Asset_V1beta1_BatchGetAssetsHistoryResponse>

}

extension Google_Cloud_Asset_V1beta1_AssetServiceClientProtocol {

  /// Exports assets with time and resource types to a given Cloud Storage
  /// location. The output format is newline-delimited JSON.
  /// This API implements the
  /// [google.longrunning.Operation][google.longrunning.Operation] API allowing
  /// you to keep track of the export.
  ///
  /// - Parameters:
  ///   - request: Request to send to ExportAssets.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func exportAssets(
    _ request: Google_Cloud_Asset_V1beta1_ExportAssetsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Asset_V1beta1_ExportAssetsRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.asset.v1beta1.AssetService/ExportAssets",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Batch gets the update history of assets that overlap a time window.
  /// For RESOURCE content, this API outputs history with asset in both
  /// non-delete or deleted status.
  /// For IAM_POLICY content, this API outputs history when the asset and its
  /// attached IAM POLICY both exist. This can create gaps in the output history.
  /// If a specified asset does not exist, this API returns an INVALID_ARGUMENT
  /// error.
  ///
  /// - Parameters:
  ///   - request: Request to send to BatchGetAssetsHistory.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func batchGetAssetsHistory(
    _ request: Google_Cloud_Asset_V1beta1_BatchGetAssetsHistoryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Asset_V1beta1_BatchGetAssetsHistoryRequest, Google_Cloud_Asset_V1beta1_BatchGetAssetsHistoryResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.asset.v1beta1.AssetService/BatchGetAssetsHistory",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Asset_V1beta1_AssetServiceClient: Google_Cloud_Asset_V1beta1_AssetServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.asset.v1beta1.AssetService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Asset_V1beta1_AssetServiceProvider: CallHandlerProvider {
  /// Exports assets with time and resource types to a given Cloud Storage
  /// location. The output format is newline-delimited JSON.
  /// This API implements the
  /// [google.longrunning.Operation][google.longrunning.Operation] API allowing
  /// you to keep track of the export.
  func exportAssets(request: Google_Cloud_Asset_V1beta1_ExportAssetsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Batch gets the update history of assets that overlap a time window.
  /// For RESOURCE content, this API outputs history with asset in both
  /// non-delete or deleted status.
  /// For IAM_POLICY content, this API outputs history when the asset and its
  /// attached IAM POLICY both exist. This can create gaps in the output history.
  /// If a specified asset does not exist, this API returns an INVALID_ARGUMENT
  /// error.
  func batchGetAssetsHistory(request: Google_Cloud_Asset_V1beta1_BatchGetAssetsHistoryRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Asset_V1beta1_BatchGetAssetsHistoryResponse>
}

extension Google_Cloud_Asset_V1beta1_AssetServiceProvider {
  public var serviceName: Substring { return "google.cloud.asset.v1beta1.AssetService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "ExportAssets":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.exportAssets(request: request, context: context)
        }
      }

    case "BatchGetAssetsHistory":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.batchGetAssetsHistory(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

