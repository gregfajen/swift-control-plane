// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/asset/v1p5beta1/asset_service.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Asset content type.
public enum Google_Cloud_Asset_V1p5beta1_ContentType: SwiftProtobuf.Enum {
  public typealias RawValue = Int

  /// Unspecified content type.
  case unspecified // = 0

  /// Resource metadata.
  case resource // = 1

  /// The actual IAM policy set on a resource.
  case iamPolicy // = 2

  /// The Cloud Organization Policy set on an asset.
  case orgPolicy // = 4

  /// The Cloud Access context mananger Policy set on an asset.
  case accessPolicy // = 5
  case UNRECOGNIZED(Int)

  public init() {
    self = .unspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unspecified
    case 1: self = .resource
    case 2: self = .iamPolicy
    case 4: self = .orgPolicy
    case 5: self = .accessPolicy
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unspecified: return 0
    case .resource: return 1
    case .iamPolicy: return 2
    case .orgPolicy: return 4
    case .accessPolicy: return 5
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Google_Cloud_Asset_V1p5beta1_ContentType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Google_Cloud_Asset_V1p5beta1_ContentType] = [
    .unspecified,
    .resource,
    .iamPolicy,
    .orgPolicy,
    .accessPolicy,
  ]
}

#endif  // swift(>=4.2)

/// ListAssets request.
public struct Google_Cloud_Asset_V1p5beta1_ListAssetsRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Required. Name of the organization or project the assets belong to. Format:
  /// "organizations/[organization-number]" (such as "organizations/123"),
  /// "projects/[project-number]" (such as "projects/my-project-id"), or
  /// "projects/[project-id]" (such as "projects/12345").
  public var parent: String = String()

  /// Timestamp to take an asset snapshot. This can only be set to a timestamp
  /// between 2018-10-02 UTC (inclusive) and the current time. If not specified,
  /// the current time will be used. Due to delays in resource data collection
  /// and indexing, there is a volatile window during which running the same
  /// query may get different results.
  public var readTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _readTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_readTime = newValue}
  }
  /// Returns true if `readTime` has been explicitly set.
  public var hasReadTime: Bool {return self._readTime != nil}
  /// Clears the value of `readTime`. Subsequent reads from it will return its default value.
  public mutating func clearReadTime() {self._readTime = nil}

  /// A list of asset types of which to take a snapshot for. For  example:
  /// "compute.googleapis.com/Disk". If specified, only matching assets will be
  /// returned. See [Introduction to Cloud Asset
  /// Inventory](https://cloud.google.com/resource-manager/docs/cloud-asset-inventory/overview)
  /// for all supported asset types.
  public var assetTypes: [String] = []

  /// Asset content type. If not specified, no content but the asset name will
  /// be returned.
  public var contentType: Google_Cloud_Asset_V1p5beta1_ContentType = .unspecified

  /// The maximum number of assets to be returned in a single response. Default
  /// is 100, minimum is 1, and maximum is 1000.
  public var pageSize: Int32 = 0

  /// The `next_page_token` returned from the previous `ListAssetsResponse`, or
  /// unspecified for the first `ListAssetsRequest`. It is a continuation of a
  /// prior `ListAssets` call, and the API should return the next page of assets.
  public var pageToken: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _readTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
}

/// ListAssets response.
public struct Google_Cloud_Asset_V1p5beta1_ListAssetsResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Time the snapshot was taken.
  public var readTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _readTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_readTime = newValue}
  }
  /// Returns true if `readTime` has been explicitly set.
  public var hasReadTime: Bool {return self._readTime != nil}
  /// Clears the value of `readTime`. Subsequent reads from it will return its default value.
  public mutating func clearReadTime() {self._readTime = nil}

  /// Assets.
  public var assets: [Google_Cloud_Asset_V1p5beta1_Asset] = []

  /// Token to retrieve the next page of results. Set to empty if there are no
  /// remaining results.
  public var nextPageToken: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _readTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.asset.v1p5beta1"

extension Google_Cloud_Asset_V1p5beta1_ContentType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "CONTENT_TYPE_UNSPECIFIED"),
    1: .same(proto: "RESOURCE"),
    2: .same(proto: "IAM_POLICY"),
    4: .same(proto: "ORG_POLICY"),
    5: .same(proto: "ACCESS_POLICY"),
  ]
}

extension Google_Cloud_Asset_V1p5beta1_ListAssetsRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ListAssetsRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "parent"),
    2: .standard(proto: "read_time"),
    3: .standard(proto: "asset_types"),
    4: .standard(proto: "content_type"),
    5: .standard(proto: "page_size"),
    6: .standard(proto: "page_token"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.parent) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._readTime) }()
      case 3: try { try decoder.decodeRepeatedStringField(value: &self.assetTypes) }()
      case 4: try { try decoder.decodeSingularEnumField(value: &self.contentType) }()
      case 5: try { try decoder.decodeSingularInt32Field(value: &self.pageSize) }()
      case 6: try { try decoder.decodeSingularStringField(value: &self.pageToken) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.parent.isEmpty {
      try visitor.visitSingularStringField(value: self.parent, fieldNumber: 1)
    }
    if let v = self._readTime {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if !self.assetTypes.isEmpty {
      try visitor.visitRepeatedStringField(value: self.assetTypes, fieldNumber: 3)
    }
    if self.contentType != .unspecified {
      try visitor.visitSingularEnumField(value: self.contentType, fieldNumber: 4)
    }
    if self.pageSize != 0 {
      try visitor.visitSingularInt32Field(value: self.pageSize, fieldNumber: 5)
    }
    if !self.pageToken.isEmpty {
      try visitor.visitSingularStringField(value: self.pageToken, fieldNumber: 6)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Asset_V1p5beta1_ListAssetsRequest, rhs: Google_Cloud_Asset_V1p5beta1_ListAssetsRequest) -> Bool {
    if lhs.parent != rhs.parent {return false}
    if lhs._readTime != rhs._readTime {return false}
    if lhs.assetTypes != rhs.assetTypes {return false}
    if lhs.contentType != rhs.contentType {return false}
    if lhs.pageSize != rhs.pageSize {return false}
    if lhs.pageToken != rhs.pageToken {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Asset_V1p5beta1_ListAssetsResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ListAssetsResponse"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "read_time"),
    2: .same(proto: "assets"),
    3: .standard(proto: "next_page_token"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._readTime) }()
      case 2: try { try decoder.decodeRepeatedMessageField(value: &self.assets) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.nextPageToken) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._readTime {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if !self.assets.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.assets, fieldNumber: 2)
    }
    if !self.nextPageToken.isEmpty {
      try visitor.visitSingularStringField(value: self.nextPageToken, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Asset_V1p5beta1_ListAssetsResponse, rhs: Google_Cloud_Asset_V1p5beta1_ListAssetsResponse) -> Bool {
    if lhs._readTime != rhs._readTime {return false}
    if lhs.assets != rhs.assets {return false}
    if lhs.nextPageToken != rhs.nextPageToken {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
