//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/notebooks/v1beta1/service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Notebooks_V1beta1_NotebookServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Notebooks_V1beta1_NotebookServiceClientProtocol: GRPCClient {
  func listInstances(
    _ request: Google_Cloud_Notebooks_V1beta1_ListInstancesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_ListInstancesRequest, Google_Cloud_Notebooks_V1beta1_ListInstancesResponse>

  func getInstance(
    _ request: Google_Cloud_Notebooks_V1beta1_GetInstanceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_GetInstanceRequest, Google_Cloud_Notebooks_V1beta1_Instance>

  func createInstance(
    _ request: Google_Cloud_Notebooks_V1beta1_CreateInstanceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_CreateInstanceRequest, Google_Longrunning_Operation>

  func registerInstance(
    _ request: Google_Cloud_Notebooks_V1beta1_RegisterInstanceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_RegisterInstanceRequest, Google_Longrunning_Operation>

  func setInstanceAccelerator(
    _ request: Google_Cloud_Notebooks_V1beta1_SetInstanceAcceleratorRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_SetInstanceAcceleratorRequest, Google_Longrunning_Operation>

  func setInstanceMachineType(
    _ request: Google_Cloud_Notebooks_V1beta1_SetInstanceMachineTypeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_SetInstanceMachineTypeRequest, Google_Longrunning_Operation>

  func setInstanceLabels(
    _ request: Google_Cloud_Notebooks_V1beta1_SetInstanceLabelsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_SetInstanceLabelsRequest, Google_Longrunning_Operation>

  func deleteInstance(
    _ request: Google_Cloud_Notebooks_V1beta1_DeleteInstanceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_DeleteInstanceRequest, Google_Longrunning_Operation>

  func startInstance(
    _ request: Google_Cloud_Notebooks_V1beta1_StartInstanceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_StartInstanceRequest, Google_Longrunning_Operation>

  func stopInstance(
    _ request: Google_Cloud_Notebooks_V1beta1_StopInstanceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_StopInstanceRequest, Google_Longrunning_Operation>

  func resetInstance(
    _ request: Google_Cloud_Notebooks_V1beta1_ResetInstanceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_ResetInstanceRequest, Google_Longrunning_Operation>

  func reportInstanceInfo(
    _ request: Google_Cloud_Notebooks_V1beta1_ReportInstanceInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_ReportInstanceInfoRequest, Google_Longrunning_Operation>

  func isInstanceUpgradeable(
    _ request: Google_Cloud_Notebooks_V1beta1_IsInstanceUpgradeableRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_IsInstanceUpgradeableRequest, Google_Cloud_Notebooks_V1beta1_IsInstanceUpgradeableResponse>

  func upgradeInstance(
    _ request: Google_Cloud_Notebooks_V1beta1_UpgradeInstanceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_UpgradeInstanceRequest, Google_Longrunning_Operation>

  func upgradeInstanceInternal(
    _ request: Google_Cloud_Notebooks_V1beta1_UpgradeInstanceInternalRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_UpgradeInstanceInternalRequest, Google_Longrunning_Operation>

  func listEnvironments(
    _ request: Google_Cloud_Notebooks_V1beta1_ListEnvironmentsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_ListEnvironmentsRequest, Google_Cloud_Notebooks_V1beta1_ListEnvironmentsResponse>

  func getEnvironment(
    _ request: Google_Cloud_Notebooks_V1beta1_GetEnvironmentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_GetEnvironmentRequest, Google_Cloud_Notebooks_V1beta1_Environment>

  func createEnvironment(
    _ request: Google_Cloud_Notebooks_V1beta1_CreateEnvironmentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_CreateEnvironmentRequest, Google_Longrunning_Operation>

  func deleteEnvironment(
    _ request: Google_Cloud_Notebooks_V1beta1_DeleteEnvironmentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_DeleteEnvironmentRequest, Google_Longrunning_Operation>

}

extension Google_Cloud_Notebooks_V1beta1_NotebookServiceClientProtocol {

  /// Lists instances in a given project and location.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListInstances.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listInstances(
    _ request: Google_Cloud_Notebooks_V1beta1_ListInstancesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_ListInstancesRequest, Google_Cloud_Notebooks_V1beta1_ListInstancesResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/ListInstances",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets details of a single Instance.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetInstance.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getInstance(
    _ request: Google_Cloud_Notebooks_V1beta1_GetInstanceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_GetInstanceRequest, Google_Cloud_Notebooks_V1beta1_Instance> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/GetInstance",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a new Instance in a given project and location.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateInstance.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createInstance(
    _ request: Google_Cloud_Notebooks_V1beta1_CreateInstanceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_CreateInstanceRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/CreateInstance",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Registers an existing legacy notebook instance to the Notebooks API server.
  /// Legacy instances are instances created with the legacy Compute Engine
  /// calls. They are not manageable by the Notebooks API out of the box. This
  /// call makes these instances manageable by the Notebooks API.
  ///
  /// - Parameters:
  ///   - request: Request to send to RegisterInstance.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func registerInstance(
    _ request: Google_Cloud_Notebooks_V1beta1_RegisterInstanceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_RegisterInstanceRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/RegisterInstance",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates the guest accelerators of a single Instance.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetInstanceAccelerator.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setInstanceAccelerator(
    _ request: Google_Cloud_Notebooks_V1beta1_SetInstanceAcceleratorRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_SetInstanceAcceleratorRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/SetInstanceAccelerator",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates the machine type of a single Instance.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetInstanceMachineType.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setInstanceMachineType(
    _ request: Google_Cloud_Notebooks_V1beta1_SetInstanceMachineTypeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_SetInstanceMachineTypeRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/SetInstanceMachineType",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates the labels of an Instance.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetInstanceLabels.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setInstanceLabels(
    _ request: Google_Cloud_Notebooks_V1beta1_SetInstanceLabelsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_SetInstanceLabelsRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/SetInstanceLabels",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a single Instance.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteInstance.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteInstance(
    _ request: Google_Cloud_Notebooks_V1beta1_DeleteInstanceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_DeleteInstanceRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/DeleteInstance",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Starts a notebook instance.
  ///
  /// - Parameters:
  ///   - request: Request to send to StartInstance.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func startInstance(
    _ request: Google_Cloud_Notebooks_V1beta1_StartInstanceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_StartInstanceRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/StartInstance",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Stops a notebook instance.
  ///
  /// - Parameters:
  ///   - request: Request to send to StopInstance.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func stopInstance(
    _ request: Google_Cloud_Notebooks_V1beta1_StopInstanceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_StopInstanceRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/StopInstance",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Resets a notebook instance.
  ///
  /// - Parameters:
  ///   - request: Request to send to ResetInstance.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func resetInstance(
    _ request: Google_Cloud_Notebooks_V1beta1_ResetInstanceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_ResetInstanceRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/ResetInstance",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Allows notebook instances to
  /// report their latest instance information to the Notebooks
  /// API server. The server will merge the reported information to
  /// the instance metadata store. Do not use this method directly.
  ///
  /// - Parameters:
  ///   - request: Request to send to ReportInstanceInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func reportInstanceInfo(
    _ request: Google_Cloud_Notebooks_V1beta1_ReportInstanceInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_ReportInstanceInfoRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/ReportInstanceInfo",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Check if a notebook instance is upgradable.
  ///
  /// - Parameters:
  ///   - request: Request to send to IsInstanceUpgradeable.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func isInstanceUpgradeable(
    _ request: Google_Cloud_Notebooks_V1beta1_IsInstanceUpgradeableRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_IsInstanceUpgradeableRequest, Google_Cloud_Notebooks_V1beta1_IsInstanceUpgradeableResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/IsInstanceUpgradeable",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Upgrades a notebook instance to the latest version.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpgradeInstance.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func upgradeInstance(
    _ request: Google_Cloud_Notebooks_V1beta1_UpgradeInstanceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_UpgradeInstanceRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/UpgradeInstance",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Allows notebook instances to
  /// call this endpoint to upgrade themselves. Do not use this method directly.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpgradeInstanceInternal.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func upgradeInstanceInternal(
    _ request: Google_Cloud_Notebooks_V1beta1_UpgradeInstanceInternalRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_UpgradeInstanceInternalRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/UpgradeInstanceInternal",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists environments in a project.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListEnvironments.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listEnvironments(
    _ request: Google_Cloud_Notebooks_V1beta1_ListEnvironmentsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_ListEnvironmentsRequest, Google_Cloud_Notebooks_V1beta1_ListEnvironmentsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/ListEnvironments",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets details of a single Environment.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetEnvironment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getEnvironment(
    _ request: Google_Cloud_Notebooks_V1beta1_GetEnvironmentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_GetEnvironmentRequest, Google_Cloud_Notebooks_V1beta1_Environment> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/GetEnvironment",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a new Environment.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateEnvironment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createEnvironment(
    _ request: Google_Cloud_Notebooks_V1beta1_CreateEnvironmentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_CreateEnvironmentRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/CreateEnvironment",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a single Environment.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteEnvironment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteEnvironment(
    _ request: Google_Cloud_Notebooks_V1beta1_DeleteEnvironmentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Notebooks_V1beta1_DeleteEnvironmentRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.notebooks.v1beta1.NotebookService/DeleteEnvironment",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Notebooks_V1beta1_NotebookServiceClient: Google_Cloud_Notebooks_V1beta1_NotebookServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.notebooks.v1beta1.NotebookService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Notebooks_V1beta1_NotebookServiceProvider: CallHandlerProvider {
  /// Lists instances in a given project and location.
  func listInstances(request: Google_Cloud_Notebooks_V1beta1_ListInstancesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Notebooks_V1beta1_ListInstancesResponse>
  /// Gets details of a single Instance.
  func getInstance(request: Google_Cloud_Notebooks_V1beta1_GetInstanceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Notebooks_V1beta1_Instance>
  /// Creates a new Instance in a given project and location.
  func createInstance(request: Google_Cloud_Notebooks_V1beta1_CreateInstanceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Registers an existing legacy notebook instance to the Notebooks API server.
  /// Legacy instances are instances created with the legacy Compute Engine
  /// calls. They are not manageable by the Notebooks API out of the box. This
  /// call makes these instances manageable by the Notebooks API.
  func registerInstance(request: Google_Cloud_Notebooks_V1beta1_RegisterInstanceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Updates the guest accelerators of a single Instance.
  func setInstanceAccelerator(request: Google_Cloud_Notebooks_V1beta1_SetInstanceAcceleratorRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Updates the machine type of a single Instance.
  func setInstanceMachineType(request: Google_Cloud_Notebooks_V1beta1_SetInstanceMachineTypeRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Updates the labels of an Instance.
  func setInstanceLabels(request: Google_Cloud_Notebooks_V1beta1_SetInstanceLabelsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Deletes a single Instance.
  func deleteInstance(request: Google_Cloud_Notebooks_V1beta1_DeleteInstanceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Starts a notebook instance.
  func startInstance(request: Google_Cloud_Notebooks_V1beta1_StartInstanceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Stops a notebook instance.
  func stopInstance(request: Google_Cloud_Notebooks_V1beta1_StopInstanceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Resets a notebook instance.
  func resetInstance(request: Google_Cloud_Notebooks_V1beta1_ResetInstanceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Allows notebook instances to
  /// report their latest instance information to the Notebooks
  /// API server. The server will merge the reported information to
  /// the instance metadata store. Do not use this method directly.
  func reportInstanceInfo(request: Google_Cloud_Notebooks_V1beta1_ReportInstanceInfoRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Check if a notebook instance is upgradable.
  func isInstanceUpgradeable(request: Google_Cloud_Notebooks_V1beta1_IsInstanceUpgradeableRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Notebooks_V1beta1_IsInstanceUpgradeableResponse>
  /// Upgrades a notebook instance to the latest version.
  func upgradeInstance(request: Google_Cloud_Notebooks_V1beta1_UpgradeInstanceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Allows notebook instances to
  /// call this endpoint to upgrade themselves. Do not use this method directly.
  func upgradeInstanceInternal(request: Google_Cloud_Notebooks_V1beta1_UpgradeInstanceInternalRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Lists environments in a project.
  func listEnvironments(request: Google_Cloud_Notebooks_V1beta1_ListEnvironmentsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Notebooks_V1beta1_ListEnvironmentsResponse>
  /// Gets details of a single Environment.
  func getEnvironment(request: Google_Cloud_Notebooks_V1beta1_GetEnvironmentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Notebooks_V1beta1_Environment>
  /// Creates a new Environment.
  func createEnvironment(request: Google_Cloud_Notebooks_V1beta1_CreateEnvironmentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Deletes a single Environment.
  func deleteEnvironment(request: Google_Cloud_Notebooks_V1beta1_DeleteEnvironmentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
}

extension Google_Cloud_Notebooks_V1beta1_NotebookServiceProvider {
  public var serviceName: Substring { return "google.cloud.notebooks.v1beta1.NotebookService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "ListInstances":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listInstances(request: request, context: context)
        }
      }

    case "GetInstance":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getInstance(request: request, context: context)
        }
      }

    case "CreateInstance":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createInstance(request: request, context: context)
        }
      }

    case "RegisterInstance":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.registerInstance(request: request, context: context)
        }
      }

    case "SetInstanceAccelerator":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.setInstanceAccelerator(request: request, context: context)
        }
      }

    case "SetInstanceMachineType":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.setInstanceMachineType(request: request, context: context)
        }
      }

    case "SetInstanceLabels":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.setInstanceLabels(request: request, context: context)
        }
      }

    case "DeleteInstance":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteInstance(request: request, context: context)
        }
      }

    case "StartInstance":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.startInstance(request: request, context: context)
        }
      }

    case "StopInstance":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.stopInstance(request: request, context: context)
        }
      }

    case "ResetInstance":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.resetInstance(request: request, context: context)
        }
      }

    case "ReportInstanceInfo":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.reportInstanceInfo(request: request, context: context)
        }
      }

    case "IsInstanceUpgradeable":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.isInstanceUpgradeable(request: request, context: context)
        }
      }

    case "UpgradeInstance":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.upgradeInstance(request: request, context: context)
        }
      }

    case "UpgradeInstanceInternal":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.upgradeInstanceInternal(request: request, context: context)
        }
      }

    case "ListEnvironments":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listEnvironments(request: request, context: context)
        }
      }

    case "GetEnvironment":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getEnvironment(request: request, context: context)
        }
      }

    case "CreateEnvironment":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createEnvironment(request: request, context: context)
        }
      }

    case "DeleteEnvironment":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteEnvironment(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

