//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/dialogflow/v2beta1/knowledge_base.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Dialogflow_V2beta1_KnowledgeBasesClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Dialogflow_V2beta1_KnowledgeBasesClientProtocol: GRPCClient {
  func listKnowledgeBases(
    _ request: Google_Cloud_Dialogflow_V2beta1_ListKnowledgeBasesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_ListKnowledgeBasesRequest, Google_Cloud_Dialogflow_V2beta1_ListKnowledgeBasesResponse>

  func getKnowledgeBase(
    _ request: Google_Cloud_Dialogflow_V2beta1_GetKnowledgeBaseRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_GetKnowledgeBaseRequest, Google_Cloud_Dialogflow_V2beta1_KnowledgeBase>

  func createKnowledgeBase(
    _ request: Google_Cloud_Dialogflow_V2beta1_CreateKnowledgeBaseRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_CreateKnowledgeBaseRequest, Google_Cloud_Dialogflow_V2beta1_KnowledgeBase>

  func deleteKnowledgeBase(
    _ request: Google_Cloud_Dialogflow_V2beta1_DeleteKnowledgeBaseRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_DeleteKnowledgeBaseRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func updateKnowledgeBase(
    _ request: Google_Cloud_Dialogflow_V2beta1_UpdateKnowledgeBaseRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_UpdateKnowledgeBaseRequest, Google_Cloud_Dialogflow_V2beta1_KnowledgeBase>

}

extension Google_Cloud_Dialogflow_V2beta1_KnowledgeBasesClientProtocol {

  /// Returns the list of all knowledge bases of the specified agent.
  ///
  /// Note: The `projects.agent.knowledgeBases` resource is deprecated;
  /// only use `projects.knowledgeBases`.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListKnowledgeBases.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listKnowledgeBases(
    _ request: Google_Cloud_Dialogflow_V2beta1_ListKnowledgeBasesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_ListKnowledgeBasesRequest, Google_Cloud_Dialogflow_V2beta1_ListKnowledgeBasesResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2beta1.KnowledgeBases/ListKnowledgeBases",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves the specified knowledge base.
  ///
  /// Note: The `projects.agent.knowledgeBases` resource is deprecated;
  /// only use `projects.knowledgeBases`.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetKnowledgeBase.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getKnowledgeBase(
    _ request: Google_Cloud_Dialogflow_V2beta1_GetKnowledgeBaseRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_GetKnowledgeBaseRequest, Google_Cloud_Dialogflow_V2beta1_KnowledgeBase> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2beta1.KnowledgeBases/GetKnowledgeBase",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a knowledge base.
  ///
  /// Note: The `projects.agent.knowledgeBases` resource is deprecated;
  /// only use `projects.knowledgeBases`.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateKnowledgeBase.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createKnowledgeBase(
    _ request: Google_Cloud_Dialogflow_V2beta1_CreateKnowledgeBaseRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_CreateKnowledgeBaseRequest, Google_Cloud_Dialogflow_V2beta1_KnowledgeBase> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2beta1.KnowledgeBases/CreateKnowledgeBase",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes the specified knowledge base.
  ///
  /// Note: The `projects.agent.knowledgeBases` resource is deprecated;
  /// only use `projects.knowledgeBases`.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteKnowledgeBase.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteKnowledgeBase(
    _ request: Google_Cloud_Dialogflow_V2beta1_DeleteKnowledgeBaseRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_DeleteKnowledgeBaseRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2beta1.KnowledgeBases/DeleteKnowledgeBase",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates the specified knowledge base.
  ///
  /// Note: The `projects.agent.knowledgeBases` resource is deprecated;
  /// only use `projects.knowledgeBases`.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateKnowledgeBase.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateKnowledgeBase(
    _ request: Google_Cloud_Dialogflow_V2beta1_UpdateKnowledgeBaseRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_UpdateKnowledgeBaseRequest, Google_Cloud_Dialogflow_V2beta1_KnowledgeBase> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2beta1.KnowledgeBases/UpdateKnowledgeBase",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Dialogflow_V2beta1_KnowledgeBasesClient: Google_Cloud_Dialogflow_V2beta1_KnowledgeBasesClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.dialogflow.v2beta1.KnowledgeBases service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Dialogflow_V2beta1_KnowledgeBasesProvider: CallHandlerProvider {
  /// Returns the list of all knowledge bases of the specified agent.
  ///
  /// Note: The `projects.agent.knowledgeBases` resource is deprecated;
  /// only use `projects.knowledgeBases`.
  func listKnowledgeBases(request: Google_Cloud_Dialogflow_V2beta1_ListKnowledgeBasesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_V2beta1_ListKnowledgeBasesResponse>
  /// Retrieves the specified knowledge base.
  ///
  /// Note: The `projects.agent.knowledgeBases` resource is deprecated;
  /// only use `projects.knowledgeBases`.
  func getKnowledgeBase(request: Google_Cloud_Dialogflow_V2beta1_GetKnowledgeBaseRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_V2beta1_KnowledgeBase>
  /// Creates a knowledge base.
  ///
  /// Note: The `projects.agent.knowledgeBases` resource is deprecated;
  /// only use `projects.knowledgeBases`.
  func createKnowledgeBase(request: Google_Cloud_Dialogflow_V2beta1_CreateKnowledgeBaseRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_V2beta1_KnowledgeBase>
  /// Deletes the specified knowledge base.
  ///
  /// Note: The `projects.agent.knowledgeBases` resource is deprecated;
  /// only use `projects.knowledgeBases`.
  func deleteKnowledgeBase(request: Google_Cloud_Dialogflow_V2beta1_DeleteKnowledgeBaseRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Updates the specified knowledge base.
  ///
  /// Note: The `projects.agent.knowledgeBases` resource is deprecated;
  /// only use `projects.knowledgeBases`.
  func updateKnowledgeBase(request: Google_Cloud_Dialogflow_V2beta1_UpdateKnowledgeBaseRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_V2beta1_KnowledgeBase>
}

extension Google_Cloud_Dialogflow_V2beta1_KnowledgeBasesProvider {
  public var serviceName: Substring { return "google.cloud.dialogflow.v2beta1.KnowledgeBases" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "ListKnowledgeBases":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listKnowledgeBases(request: request, context: context)
        }
      }

    case "GetKnowledgeBase":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getKnowledgeBase(request: request, context: context)
        }
      }

    case "CreateKnowledgeBase":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createKnowledgeBase(request: request, context: context)
        }
      }

    case "DeleteKnowledgeBase":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteKnowledgeBase(request: request, context: context)
        }
      }

    case "UpdateKnowledgeBase":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateKnowledgeBase(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

