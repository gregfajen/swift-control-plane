// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/dialogflow/v2beta1/webhook.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// The request message for a webhook call.
public struct Google_Cloud_Dialogflow_V2beta1_WebhookRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// The unique identifier of detectIntent request session.
  /// Can be used to identify end-user inside webhook implementation.
  /// Supported formats:
  /// - `projects/<Project ID>/agent/sessions/<Session ID>,
  /// - `projects/<Project ID>/locations/<Location ID>/agent/sessions/<Session
  ///   ID>`,
  /// - `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
  ///   ID>/sessions/<Session ID>`,
  /// - `projects/<Project ID>/locations/<Location
  ///   ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session
  ///   ID>`,
  public var session: String = String()

  /// The unique identifier of the response. Contains the same value as
  /// `[Streaming]DetectIntentResponse.response_id`.
  public var responseID: String = String()

  /// The result of the conversational query or event processing. Contains the
  /// same value as `[Streaming]DetectIntentResponse.query_result`.
  public var queryResult: Google_Cloud_Dialogflow_V2beta1_QueryResult {
    get {return _queryResult ?? Google_Cloud_Dialogflow_V2beta1_QueryResult()}
    set {_queryResult = newValue}
  }
  /// Returns true if `queryResult` has been explicitly set.
  public var hasQueryResult: Bool {return self._queryResult != nil}
  /// Clears the value of `queryResult`. Subsequent reads from it will return its default value.
  public mutating func clearQueryResult() {self._queryResult = nil}

  /// Alternative query results from KnowledgeService.
  public var alternativeQueryResults: [Google_Cloud_Dialogflow_V2beta1_QueryResult] = []

  /// Optional. The contents of the original request that was passed to
  /// `[Streaming]DetectIntent` call.
  public var originalDetectIntentRequest: Google_Cloud_Dialogflow_V2beta1_OriginalDetectIntentRequest {
    get {return _originalDetectIntentRequest ?? Google_Cloud_Dialogflow_V2beta1_OriginalDetectIntentRequest()}
    set {_originalDetectIntentRequest = newValue}
  }
  /// Returns true if `originalDetectIntentRequest` has been explicitly set.
  public var hasOriginalDetectIntentRequest: Bool {return self._originalDetectIntentRequest != nil}
  /// Clears the value of `originalDetectIntentRequest`. Subsequent reads from it will return its default value.
  public mutating func clearOriginalDetectIntentRequest() {self._originalDetectIntentRequest = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _queryResult: Google_Cloud_Dialogflow_V2beta1_QueryResult? = nil
  fileprivate var _originalDetectIntentRequest: Google_Cloud_Dialogflow_V2beta1_OriginalDetectIntentRequest? = nil
}

/// The response message for a webhook call.
///
/// This response is validated by the Dialogflow server. If validation fails,
/// an error will be returned in the [QueryResult.diagnostic_info][google.cloud.dialogflow.v2beta1.QueryResult.diagnostic_info] field.
/// Setting JSON fields to an empty value with the wrong type is a common error.
/// To avoid this error:
///
/// - Use `""` for empty strings
/// - Use `{}` or `null` for empty objects
/// - Use `[]` or `null` for empty arrays
///
/// For more information, see the
/// [Protocol Buffers Language
/// Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).
public struct Google_Cloud_Dialogflow_V2beta1_WebhookResponse {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Optional. The text response message intended for the end-user.
  /// It is recommended to use `fulfillment_messages.text.text[0]` instead.
  /// When provided, Dialogflow uses this field to populate
  /// [QueryResult.fulfillment_text][google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_text] sent to the integration or API caller.
  public var fulfillmentText: String = String()

  /// Optional. The rich response messages intended for the end-user.
  /// When provided, Dialogflow uses this field to populate
  /// [QueryResult.fulfillment_messages][google.cloud.dialogflow.v2beta1.QueryResult.fulfillment_messages] sent to the integration or API caller.
  public var fulfillmentMessages: [Google_Cloud_Dialogflow_V2beta1_Intent.Message] = []

  /// Optional. A custom field used to identify the webhook source.
  /// Arbitrary strings are supported.
  /// When provided, Dialogflow uses this field to populate
  /// [QueryResult.webhook_source][google.cloud.dialogflow.v2beta1.QueryResult.webhook_source] sent to the integration or API caller.
  public var source: String = String()

  /// Optional. This field can be used to pass custom data from your webhook to the
  /// integration or API caller. Arbitrary JSON objects are supported.
  /// When provided, Dialogflow uses this field to populate
  /// [QueryResult.webhook_payload][google.cloud.dialogflow.v2beta1.QueryResult.webhook_payload] sent to the integration or API caller.
  /// This field is also used by the
  /// [Google Assistant
  /// integration](https://cloud.google.com/dialogflow/docs/integrations/aog)
  /// for rich response messages.
  /// See the format definition at [Google Assistant Dialogflow webhook
  /// format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
  public var payload: SwiftProtobuf.Google_Protobuf_Struct {
    get {return _payload ?? SwiftProtobuf.Google_Protobuf_Struct()}
    set {_payload = newValue}
  }
  /// Returns true if `payload` has been explicitly set.
  public var hasPayload: Bool {return self._payload != nil}
  /// Clears the value of `payload`. Subsequent reads from it will return its default value.
  public mutating func clearPayload() {self._payload = nil}

  /// Optional. The collection of output contexts that will overwrite currently
  /// active contexts for the session and reset their lifespans.
  /// When provided, Dialogflow uses this field to populate
  /// [QueryResult.output_contexts][google.cloud.dialogflow.v2beta1.QueryResult.output_contexts] sent to the integration or API caller.
  public var outputContexts: [Google_Cloud_Dialogflow_V2beta1_Context] = []

  /// Optional. Invokes the supplied events.
  /// When this field is set, Dialogflow ignores the `fulfillment_text`,
  /// `fulfillment_messages`, and `payload` fields.
  public var followupEventInput: Google_Cloud_Dialogflow_V2beta1_EventInput {
    get {return _followupEventInput ?? Google_Cloud_Dialogflow_V2beta1_EventInput()}
    set {_followupEventInput = newValue}
  }
  /// Returns true if `followupEventInput` has been explicitly set.
  public var hasFollowupEventInput: Bool {return self._followupEventInput != nil}
  /// Clears the value of `followupEventInput`. Subsequent reads from it will return its default value.
  public mutating func clearFollowupEventInput() {self._followupEventInput = nil}

  /// Optional. Indicates that this intent ends an interaction. Some integrations
  /// (e.g., Actions on Google or Dialogflow phone gateway) use this information
  /// to close interaction with an end user. Default is false.
  public var endInteraction: Bool = false

  /// Optional. Additional session entity types to replace or extend developer
  /// entity types with. The entity synonyms apply to all languages and persist
  /// for the session. Setting this data from a webhook overwrites
  /// the session entity types that have been set using `detectIntent`,
  /// `streamingDetectIntent` or [SessionEntityType][google.cloud.dialogflow.v2beta1.SessionEntityType] management methods.
  public var sessionEntityTypes: [Google_Cloud_Dialogflow_V2beta1_SessionEntityType] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _payload: SwiftProtobuf.Google_Protobuf_Struct? = nil
  fileprivate var _followupEventInput: Google_Cloud_Dialogflow_V2beta1_EventInput? = nil
}

/// Represents the contents of the original request that was passed to
/// the `[Streaming]DetectIntent` call.
public struct Google_Cloud_Dialogflow_V2beta1_OriginalDetectIntentRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// The source of this request, e.g., `google`, `facebook`, `slack`. It is set
  /// by Dialogflow-owned servers.
  public var source: String = String()

  /// Optional. The version of the protocol used for this request.
  /// This field is AoG-specific.
  public var version: String = String()

  /// Optional. This field is set to the value of the `QueryParameters.payload`
  /// field passed in the request. Some integrations that query a Dialogflow
  /// agent may provide additional information in the payload.
  ///
  /// In particular, for the Dialogflow Phone Gateway integration, this field has
  /// the form:
  /// <pre>{
  ///  "telephony": {
  ///    "caller_id": "+18558363987"
  ///  }
  /// }</pre>
  /// Note: The caller ID field (`caller_id`) will be redacted for Trial
  /// Edition agents and populated with the caller ID in [E.164
  /// format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition agents.
  public var payload: SwiftProtobuf.Google_Protobuf_Struct {
    get {return _payload ?? SwiftProtobuf.Google_Protobuf_Struct()}
    set {_payload = newValue}
  }
  /// Returns true if `payload` has been explicitly set.
  public var hasPayload: Bool {return self._payload != nil}
  /// Clears the value of `payload`. Subsequent reads from it will return its default value.
  public mutating func clearPayload() {self._payload = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _payload: SwiftProtobuf.Google_Protobuf_Struct? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.dialogflow.v2beta1"

extension Google_Cloud_Dialogflow_V2beta1_WebhookRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".WebhookRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    4: .same(proto: "session"),
    1: .standard(proto: "response_id"),
    2: .standard(proto: "query_result"),
    5: .standard(proto: "alternative_query_results"),
    3: .standard(proto: "original_detect_intent_request"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.responseID) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._queryResult) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._originalDetectIntentRequest) }()
      case 4: try { try decoder.decodeSingularStringField(value: &self.session) }()
      case 5: try { try decoder.decodeRepeatedMessageField(value: &self.alternativeQueryResults) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.responseID.isEmpty {
      try visitor.visitSingularStringField(value: self.responseID, fieldNumber: 1)
    }
    if let v = self._queryResult {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if let v = self._originalDetectIntentRequest {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    }
    if !self.session.isEmpty {
      try visitor.visitSingularStringField(value: self.session, fieldNumber: 4)
    }
    if !self.alternativeQueryResults.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.alternativeQueryResults, fieldNumber: 5)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Dialogflow_V2beta1_WebhookRequest, rhs: Google_Cloud_Dialogflow_V2beta1_WebhookRequest) -> Bool {
    if lhs.session != rhs.session {return false}
    if lhs.responseID != rhs.responseID {return false}
    if lhs._queryResult != rhs._queryResult {return false}
    if lhs.alternativeQueryResults != rhs.alternativeQueryResults {return false}
    if lhs._originalDetectIntentRequest != rhs._originalDetectIntentRequest {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Dialogflow_V2beta1_WebhookResponse: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".WebhookResponse"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "fulfillment_text"),
    2: .standard(proto: "fulfillment_messages"),
    3: .same(proto: "source"),
    4: .same(proto: "payload"),
    5: .standard(proto: "output_contexts"),
    6: .standard(proto: "followup_event_input"),
    8: .standard(proto: "end_interaction"),
    10: .standard(proto: "session_entity_types"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.fulfillmentText) }()
      case 2: try { try decoder.decodeRepeatedMessageField(value: &self.fulfillmentMessages) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.source) }()
      case 4: try { try decoder.decodeSingularMessageField(value: &self._payload) }()
      case 5: try { try decoder.decodeRepeatedMessageField(value: &self.outputContexts) }()
      case 6: try { try decoder.decodeSingularMessageField(value: &self._followupEventInput) }()
      case 8: try { try decoder.decodeSingularBoolField(value: &self.endInteraction) }()
      case 10: try { try decoder.decodeRepeatedMessageField(value: &self.sessionEntityTypes) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.fulfillmentText.isEmpty {
      try visitor.visitSingularStringField(value: self.fulfillmentText, fieldNumber: 1)
    }
    if !self.fulfillmentMessages.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.fulfillmentMessages, fieldNumber: 2)
    }
    if !self.source.isEmpty {
      try visitor.visitSingularStringField(value: self.source, fieldNumber: 3)
    }
    if let v = self._payload {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    if !self.outputContexts.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.outputContexts, fieldNumber: 5)
    }
    if let v = self._followupEventInput {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
    }
    if self.endInteraction != false {
      try visitor.visitSingularBoolField(value: self.endInteraction, fieldNumber: 8)
    }
    if !self.sessionEntityTypes.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.sessionEntityTypes, fieldNumber: 10)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Dialogflow_V2beta1_WebhookResponse, rhs: Google_Cloud_Dialogflow_V2beta1_WebhookResponse) -> Bool {
    if lhs.fulfillmentText != rhs.fulfillmentText {return false}
    if lhs.fulfillmentMessages != rhs.fulfillmentMessages {return false}
    if lhs.source != rhs.source {return false}
    if lhs._payload != rhs._payload {return false}
    if lhs.outputContexts != rhs.outputContexts {return false}
    if lhs._followupEventInput != rhs._followupEventInput {return false}
    if lhs.endInteraction != rhs.endInteraction {return false}
    if lhs.sessionEntityTypes != rhs.sessionEntityTypes {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Dialogflow_V2beta1_OriginalDetectIntentRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".OriginalDetectIntentRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "source"),
    2: .same(proto: "version"),
    3: .same(proto: "payload"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.source) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.version) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._payload) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.source.isEmpty {
      try visitor.visitSingularStringField(value: self.source, fieldNumber: 1)
    }
    if !self.version.isEmpty {
      try visitor.visitSingularStringField(value: self.version, fieldNumber: 2)
    }
    if let v = self._payload {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Dialogflow_V2beta1_OriginalDetectIntentRequest, rhs: Google_Cloud_Dialogflow_V2beta1_OriginalDetectIntentRequest) -> Bool {
    if lhs.source != rhs.source {return false}
    if lhs.version != rhs.version {return false}
    if lhs._payload != rhs._payload {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
