//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/dialogflow/v2beta1/agent.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Dialogflow_V2beta1_AgentsClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Dialogflow_V2beta1_AgentsClientProtocol: GRPCClient {
  func getAgent(
    _ request: Google_Cloud_Dialogflow_V2beta1_GetAgentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_GetAgentRequest, Google_Cloud_Dialogflow_V2beta1_Agent>

  func setAgent(
    _ request: Google_Cloud_Dialogflow_V2beta1_SetAgentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_SetAgentRequest, Google_Cloud_Dialogflow_V2beta1_Agent>

  func deleteAgent(
    _ request: Google_Cloud_Dialogflow_V2beta1_DeleteAgentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_DeleteAgentRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func searchAgents(
    _ request: Google_Cloud_Dialogflow_V2beta1_SearchAgentsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_SearchAgentsRequest, Google_Cloud_Dialogflow_V2beta1_SearchAgentsResponse>

  func trainAgent(
    _ request: Google_Cloud_Dialogflow_V2beta1_TrainAgentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_TrainAgentRequest, Google_Longrunning_Operation>

  func exportAgent(
    _ request: Google_Cloud_Dialogflow_V2beta1_ExportAgentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_ExportAgentRequest, Google_Longrunning_Operation>

  func importAgent(
    _ request: Google_Cloud_Dialogflow_V2beta1_ImportAgentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_ImportAgentRequest, Google_Longrunning_Operation>

  func restoreAgent(
    _ request: Google_Cloud_Dialogflow_V2beta1_RestoreAgentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_RestoreAgentRequest, Google_Longrunning_Operation>

  func getValidationResult(
    _ request: Google_Cloud_Dialogflow_V2beta1_GetValidationResultRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_GetValidationResultRequest, Google_Cloud_Dialogflow_V2beta1_ValidationResult>

}

extension Google_Cloud_Dialogflow_V2beta1_AgentsClientProtocol {

  /// Retrieves the specified agent.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAgent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAgent(
    _ request: Google_Cloud_Dialogflow_V2beta1_GetAgentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_GetAgentRequest, Google_Cloud_Dialogflow_V2beta1_Agent> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2beta1.Agents/GetAgent",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates/updates the specified agent.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetAgent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setAgent(
    _ request: Google_Cloud_Dialogflow_V2beta1_SetAgentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_SetAgentRequest, Google_Cloud_Dialogflow_V2beta1_Agent> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2beta1.Agents/SetAgent",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes the specified agent.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAgent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteAgent(
    _ request: Google_Cloud_Dialogflow_V2beta1_DeleteAgentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_DeleteAgentRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2beta1.Agents/DeleteAgent",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns the list of agents.
  /// Since there is at most one conversational agent per project, this method is
  /// useful primarily for listing all agents across projects the caller has
  /// access to. One can achieve that with a wildcard project collection id "-".
  /// Refer to [List
  /// Sub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
  ///
  /// - Parameters:
  ///   - request: Request to send to SearchAgents.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func searchAgents(
    _ request: Google_Cloud_Dialogflow_V2beta1_SearchAgentsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_SearchAgentsRequest, Google_Cloud_Dialogflow_V2beta1_SearchAgentsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2beta1.Agents/SearchAgents",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Trains the specified agent.
  ///
  ///
  /// Operation <response: [google.protobuf.Empty][google.protobuf.Empty]>
  ///
  /// - Parameters:
  ///   - request: Request to send to TrainAgent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func trainAgent(
    _ request: Google_Cloud_Dialogflow_V2beta1_TrainAgentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_TrainAgentRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2beta1.Agents/TrainAgent",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Exports the specified agent to a ZIP file.
  ///
  ///
  /// Operation <response: [ExportAgentResponse][google.cloud.dialogflow.v2beta1.ExportAgentResponse]>
  ///
  /// - Parameters:
  ///   - request: Request to send to ExportAgent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func exportAgent(
    _ request: Google_Cloud_Dialogflow_V2beta1_ExportAgentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_ExportAgentRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2beta1.Agents/ExportAgent",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Imports the specified agent from a ZIP file.
  ///
  /// Uploads new intents and entity types without deleting the existing ones.
  /// Intents and entity types with the same name are replaced with the new
  /// versions from [ImportAgentRequest][google.cloud.dialogflow.v2beta1.ImportAgentRequest]. After the import, the imported draft
  /// agent will be trained automatically (unless disabled in agent settings).
  /// However, once the import is done, training may not be completed yet. Please
  /// call [TrainAgent][google.cloud.dialogflow.v2beta1.Agents.TrainAgent] and wait for the operation it returns in order to train
  /// explicitly.
  ///
  ///
  /// Operation <response: [google.protobuf.Empty][google.protobuf.Empty]>
  /// An operation which tracks when importing is complete. It only tracks
  /// when the draft agent is updated not when it is done training.
  ///
  /// - Parameters:
  ///   - request: Request to send to ImportAgent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func importAgent(
    _ request: Google_Cloud_Dialogflow_V2beta1_ImportAgentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_ImportAgentRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2beta1.Agents/ImportAgent",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Restores the specified agent from a ZIP file.
  ///
  /// Replaces the current agent version with a new one. All the intents and
  /// entity types in the older version are deleted. After the restore, the
  /// restored draft agent will be trained automatically (unless disabled in
  /// agent settings). However, once the restore is done, training may not be
  /// completed yet. Please call [TrainAgent][google.cloud.dialogflow.v2beta1.Agents.TrainAgent] and wait for the operation it
  /// returns in order to train explicitly.
  ///
  ///
  /// Operation <response: [google.protobuf.Empty][google.protobuf.Empty]>
  /// An operation which tracks when restoring is complete. It only tracks
  /// when the draft agent is updated not when it is done training.
  ///
  /// - Parameters:
  ///   - request: Request to send to RestoreAgent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func restoreAgent(
    _ request: Google_Cloud_Dialogflow_V2beta1_RestoreAgentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_RestoreAgentRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2beta1.Agents/RestoreAgent",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets agent validation result. Agent validation is performed during
  /// training time and is updated automatically when training is completed.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetValidationResult.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getValidationResult(
    _ request: Google_Cloud_Dialogflow_V2beta1_GetValidationResultRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2beta1_GetValidationResultRequest, Google_Cloud_Dialogflow_V2beta1_ValidationResult> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2beta1.Agents/GetValidationResult",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Dialogflow_V2beta1_AgentsClient: Google_Cloud_Dialogflow_V2beta1_AgentsClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.dialogflow.v2beta1.Agents service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Dialogflow_V2beta1_AgentsProvider: CallHandlerProvider {
  /// Retrieves the specified agent.
  func getAgent(request: Google_Cloud_Dialogflow_V2beta1_GetAgentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_V2beta1_Agent>
  /// Creates/updates the specified agent.
  func setAgent(request: Google_Cloud_Dialogflow_V2beta1_SetAgentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_V2beta1_Agent>
  /// Deletes the specified agent.
  func deleteAgent(request: Google_Cloud_Dialogflow_V2beta1_DeleteAgentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Returns the list of agents.
  /// Since there is at most one conversational agent per project, this method is
  /// useful primarily for listing all agents across projects the caller has
  /// access to. One can achieve that with a wildcard project collection id "-".
  /// Refer to [List
  /// Sub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
  func searchAgents(request: Google_Cloud_Dialogflow_V2beta1_SearchAgentsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_V2beta1_SearchAgentsResponse>
  /// Trains the specified agent.
  ///
  ///
  /// Operation <response: [google.protobuf.Empty][google.protobuf.Empty]>
  func trainAgent(request: Google_Cloud_Dialogflow_V2beta1_TrainAgentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Exports the specified agent to a ZIP file.
  ///
  ///
  /// Operation <response: [ExportAgentResponse][google.cloud.dialogflow.v2beta1.ExportAgentResponse]>
  func exportAgent(request: Google_Cloud_Dialogflow_V2beta1_ExportAgentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Imports the specified agent from a ZIP file.
  ///
  /// Uploads new intents and entity types without deleting the existing ones.
  /// Intents and entity types with the same name are replaced with the new
  /// versions from [ImportAgentRequest][google.cloud.dialogflow.v2beta1.ImportAgentRequest]. After the import, the imported draft
  /// agent will be trained automatically (unless disabled in agent settings).
  /// However, once the import is done, training may not be completed yet. Please
  /// call [TrainAgent][google.cloud.dialogflow.v2beta1.Agents.TrainAgent] and wait for the operation it returns in order to train
  /// explicitly.
  ///
  ///
  /// Operation <response: [google.protobuf.Empty][google.protobuf.Empty]>
  /// An operation which tracks when importing is complete. It only tracks
  /// when the draft agent is updated not when it is done training.
  func importAgent(request: Google_Cloud_Dialogflow_V2beta1_ImportAgentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Restores the specified agent from a ZIP file.
  ///
  /// Replaces the current agent version with a new one. All the intents and
  /// entity types in the older version are deleted. After the restore, the
  /// restored draft agent will be trained automatically (unless disabled in
  /// agent settings). However, once the restore is done, training may not be
  /// completed yet. Please call [TrainAgent][google.cloud.dialogflow.v2beta1.Agents.TrainAgent] and wait for the operation it
  /// returns in order to train explicitly.
  ///
  ///
  /// Operation <response: [google.protobuf.Empty][google.protobuf.Empty]>
  /// An operation which tracks when restoring is complete. It only tracks
  /// when the draft agent is updated not when it is done training.
  func restoreAgent(request: Google_Cloud_Dialogflow_V2beta1_RestoreAgentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Gets agent validation result. Agent validation is performed during
  /// training time and is updated automatically when training is completed.
  func getValidationResult(request: Google_Cloud_Dialogflow_V2beta1_GetValidationResultRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_V2beta1_ValidationResult>
}

extension Google_Cloud_Dialogflow_V2beta1_AgentsProvider {
  public var serviceName: Substring { return "google.cloud.dialogflow.v2beta1.Agents" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "GetAgent":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getAgent(request: request, context: context)
        }
      }

    case "SetAgent":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.setAgent(request: request, context: context)
        }
      }

    case "DeleteAgent":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteAgent(request: request, context: context)
        }
      }

    case "SearchAgents":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.searchAgents(request: request, context: context)
        }
      }

    case "TrainAgent":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.trainAgent(request: request, context: context)
        }
      }

    case "ExportAgent":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.exportAgent(request: request, context: context)
        }
      }

    case "ImportAgent":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.importAgent(request: request, context: context)
        }
      }

    case "RestoreAgent":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.restoreAgent(request: request, context: context)
        }
      }

    case "GetValidationResult":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getValidationResult(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

