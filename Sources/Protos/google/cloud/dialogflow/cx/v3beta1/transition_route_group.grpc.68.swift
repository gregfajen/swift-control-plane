//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/dialogflow/cx/v3beta1/transition_route_group.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Dialogflow_Cx_V3beta1_TransitionRouteGroupsClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Dialogflow_Cx_V3beta1_TransitionRouteGroupsClientProtocol: GRPCClient {
  func listTransitionRouteGroups(
    _ request: Google_Cloud_Dialogflow_Cx_V3beta1_ListTransitionRouteGroupsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3beta1_ListTransitionRouteGroupsRequest, Google_Cloud_Dialogflow_Cx_V3beta1_ListTransitionRouteGroupsResponse>

  func getTransitionRouteGroup(
    _ request: Google_Cloud_Dialogflow_Cx_V3beta1_GetTransitionRouteGroupRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3beta1_GetTransitionRouteGroupRequest, Google_Cloud_Dialogflow_Cx_V3beta1_TransitionRouteGroup>

  func createTransitionRouteGroup(
    _ request: Google_Cloud_Dialogflow_Cx_V3beta1_CreateTransitionRouteGroupRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3beta1_CreateTransitionRouteGroupRequest, Google_Cloud_Dialogflow_Cx_V3beta1_TransitionRouteGroup>

  func updateTransitionRouteGroup(
    _ request: Google_Cloud_Dialogflow_Cx_V3beta1_UpdateTransitionRouteGroupRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3beta1_UpdateTransitionRouteGroupRequest, Google_Cloud_Dialogflow_Cx_V3beta1_TransitionRouteGroup>

  func deleteTransitionRouteGroup(
    _ request: Google_Cloud_Dialogflow_Cx_V3beta1_DeleteTransitionRouteGroupRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3beta1_DeleteTransitionRouteGroupRequest, SwiftProtobuf.Google_Protobuf_Empty>

}

extension Google_Cloud_Dialogflow_Cx_V3beta1_TransitionRouteGroupsClientProtocol {

  /// Returns the list of all transition route groups in the specified flow.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListTransitionRouteGroups.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listTransitionRouteGroups(
    _ request: Google_Cloud_Dialogflow_Cx_V3beta1_ListTransitionRouteGroupsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3beta1_ListTransitionRouteGroupsRequest, Google_Cloud_Dialogflow_Cx_V3beta1_ListTransitionRouteGroupsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.cx.v3beta1.TransitionRouteGroups/ListTransitionRouteGroups",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves the specified [TransitionRouteGroup][google.cloud.dialogflow.cx.v3beta1.TransitionRouteGroup].
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTransitionRouteGroup.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTransitionRouteGroup(
    _ request: Google_Cloud_Dialogflow_Cx_V3beta1_GetTransitionRouteGroupRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3beta1_GetTransitionRouteGroupRequest, Google_Cloud_Dialogflow_Cx_V3beta1_TransitionRouteGroup> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.cx.v3beta1.TransitionRouteGroups/GetTransitionRouteGroup",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates an [TransitionRouteGroup][google.cloud.dialogflow.cx.v3beta1.TransitionRouteGroup] in the specified flow.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTransitionRouteGroup.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createTransitionRouteGroup(
    _ request: Google_Cloud_Dialogflow_Cx_V3beta1_CreateTransitionRouteGroupRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3beta1_CreateTransitionRouteGroupRequest, Google_Cloud_Dialogflow_Cx_V3beta1_TransitionRouteGroup> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.cx.v3beta1.TransitionRouteGroups/CreateTransitionRouteGroup",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates the specified [TransitionRouteGroup][google.cloud.dialogflow.cx.v3beta1.TransitionRouteGroup].
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateTransitionRouteGroup.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateTransitionRouteGroup(
    _ request: Google_Cloud_Dialogflow_Cx_V3beta1_UpdateTransitionRouteGroupRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3beta1_UpdateTransitionRouteGroupRequest, Google_Cloud_Dialogflow_Cx_V3beta1_TransitionRouteGroup> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.cx.v3beta1.TransitionRouteGroups/UpdateTransitionRouteGroup",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes the specified [TransitionRouteGroup][google.cloud.dialogflow.cx.v3beta1.TransitionRouteGroup].
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteTransitionRouteGroup.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteTransitionRouteGroup(
    _ request: Google_Cloud_Dialogflow_Cx_V3beta1_DeleteTransitionRouteGroupRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3beta1_DeleteTransitionRouteGroupRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.cx.v3beta1.TransitionRouteGroups/DeleteTransitionRouteGroup",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Dialogflow_Cx_V3beta1_TransitionRouteGroupsClient: Google_Cloud_Dialogflow_Cx_V3beta1_TransitionRouteGroupsClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.dialogflow.cx.v3beta1.TransitionRouteGroups service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Dialogflow_Cx_V3beta1_TransitionRouteGroupsProvider: CallHandlerProvider {
  /// Returns the list of all transition route groups in the specified flow.
  func listTransitionRouteGroups(request: Google_Cloud_Dialogflow_Cx_V3beta1_ListTransitionRouteGroupsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_Cx_V3beta1_ListTransitionRouteGroupsResponse>
  /// Retrieves the specified [TransitionRouteGroup][google.cloud.dialogflow.cx.v3beta1.TransitionRouteGroup].
  func getTransitionRouteGroup(request: Google_Cloud_Dialogflow_Cx_V3beta1_GetTransitionRouteGroupRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_Cx_V3beta1_TransitionRouteGroup>
  /// Creates an [TransitionRouteGroup][google.cloud.dialogflow.cx.v3beta1.TransitionRouteGroup] in the specified flow.
  func createTransitionRouteGroup(request: Google_Cloud_Dialogflow_Cx_V3beta1_CreateTransitionRouteGroupRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_Cx_V3beta1_TransitionRouteGroup>
  /// Updates the specified [TransitionRouteGroup][google.cloud.dialogflow.cx.v3beta1.TransitionRouteGroup].
  func updateTransitionRouteGroup(request: Google_Cloud_Dialogflow_Cx_V3beta1_UpdateTransitionRouteGroupRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_Cx_V3beta1_TransitionRouteGroup>
  /// Deletes the specified [TransitionRouteGroup][google.cloud.dialogflow.cx.v3beta1.TransitionRouteGroup].
  func deleteTransitionRouteGroup(request: Google_Cloud_Dialogflow_Cx_V3beta1_DeleteTransitionRouteGroupRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
}

extension Google_Cloud_Dialogflow_Cx_V3beta1_TransitionRouteGroupsProvider {
  public var serviceName: Substring { return "google.cloud.dialogflow.cx.v3beta1.TransitionRouteGroups" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "ListTransitionRouteGroups":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listTransitionRouteGroups(request: request, context: context)
        }
      }

    case "GetTransitionRouteGroup":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getTransitionRouteGroup(request: request, context: context)
        }
      }

    case "CreateTransitionRouteGroup":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createTransitionRouteGroup(request: request, context: context)
        }
      }

    case "UpdateTransitionRouteGroup":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateTransitionRouteGroup(request: request, context: context)
        }
      }

    case "DeleteTransitionRouteGroup":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteTransitionRouteGroup(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

