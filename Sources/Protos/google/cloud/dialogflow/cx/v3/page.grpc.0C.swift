//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/dialogflow/cx/v3/page.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Dialogflow_Cx_V3_PagesClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Dialogflow_Cx_V3_PagesClientProtocol: GRPCClient {
  func listPages(
    _ request: Google_Cloud_Dialogflow_Cx_V3_ListPagesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_ListPagesRequest, Google_Cloud_Dialogflow_Cx_V3_ListPagesResponse>

  func getPage(
    _ request: Google_Cloud_Dialogflow_Cx_V3_GetPageRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_GetPageRequest, Google_Cloud_Dialogflow_Cx_V3_Page>

  func createPage(
    _ request: Google_Cloud_Dialogflow_Cx_V3_CreatePageRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_CreatePageRequest, Google_Cloud_Dialogflow_Cx_V3_Page>

  func updatePage(
    _ request: Google_Cloud_Dialogflow_Cx_V3_UpdatePageRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_UpdatePageRequest, Google_Cloud_Dialogflow_Cx_V3_Page>

  func deletePage(
    _ request: Google_Cloud_Dialogflow_Cx_V3_DeletePageRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_DeletePageRequest, SwiftProtobuf.Google_Protobuf_Empty>

}

extension Google_Cloud_Dialogflow_Cx_V3_PagesClientProtocol {

  /// Returns the list of all pages in the specified flow.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListPages.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listPages(
    _ request: Google_Cloud_Dialogflow_Cx_V3_ListPagesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_ListPagesRequest, Google_Cloud_Dialogflow_Cx_V3_ListPagesResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.cx.v3.Pages/ListPages",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves the specified page.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPage.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getPage(
    _ request: Google_Cloud_Dialogflow_Cx_V3_GetPageRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_GetPageRequest, Google_Cloud_Dialogflow_Cx_V3_Page> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.cx.v3.Pages/GetPage",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a page in the specified flow.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreatePage.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createPage(
    _ request: Google_Cloud_Dialogflow_Cx_V3_CreatePageRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_CreatePageRequest, Google_Cloud_Dialogflow_Cx_V3_Page> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.cx.v3.Pages/CreatePage",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates the specified page.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdatePage.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updatePage(
    _ request: Google_Cloud_Dialogflow_Cx_V3_UpdatePageRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_UpdatePageRequest, Google_Cloud_Dialogflow_Cx_V3_Page> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.cx.v3.Pages/UpdatePage",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes the specified page.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeletePage.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deletePage(
    _ request: Google_Cloud_Dialogflow_Cx_V3_DeletePageRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_DeletePageRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.cx.v3.Pages/DeletePage",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Dialogflow_Cx_V3_PagesClient: Google_Cloud_Dialogflow_Cx_V3_PagesClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.dialogflow.cx.v3.Pages service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Dialogflow_Cx_V3_PagesProvider: CallHandlerProvider {
  /// Returns the list of all pages in the specified flow.
  func listPages(request: Google_Cloud_Dialogflow_Cx_V3_ListPagesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_Cx_V3_ListPagesResponse>
  /// Retrieves the specified page.
  func getPage(request: Google_Cloud_Dialogflow_Cx_V3_GetPageRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_Cx_V3_Page>
  /// Creates a page in the specified flow.
  func createPage(request: Google_Cloud_Dialogflow_Cx_V3_CreatePageRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_Cx_V3_Page>
  /// Updates the specified page.
  func updatePage(request: Google_Cloud_Dialogflow_Cx_V3_UpdatePageRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_Cx_V3_Page>
  /// Deletes the specified page.
  func deletePage(request: Google_Cloud_Dialogflow_Cx_V3_DeletePageRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
}

extension Google_Cloud_Dialogflow_Cx_V3_PagesProvider {
  public var serviceName: Substring { return "google.cloud.dialogflow.cx.v3.Pages" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "ListPages":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listPages(request: request, context: context)
        }
      }

    case "GetPage":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getPage(request: request, context: context)
        }
      }

    case "CreatePage":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createPage(request: request, context: context)
        }
      }

    case "UpdatePage":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updatePage(request: request, context: context)
        }
      }

    case "DeletePage":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deletePage(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

