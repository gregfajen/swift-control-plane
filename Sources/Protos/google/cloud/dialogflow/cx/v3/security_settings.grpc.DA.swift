//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/dialogflow/cx/v3/security_settings.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Dialogflow_Cx_V3_SecuritySettingsServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Dialogflow_Cx_V3_SecuritySettingsServiceClientProtocol: GRPCClient {
  func createSecuritySettings(
    _ request: Google_Cloud_Dialogflow_Cx_V3_CreateSecuritySettingsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_CreateSecuritySettingsRequest, Google_Cloud_Dialogflow_Cx_V3_SecuritySettings>

  func getSecuritySettings(
    _ request: Google_Cloud_Dialogflow_Cx_V3_GetSecuritySettingsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_GetSecuritySettingsRequest, Google_Cloud_Dialogflow_Cx_V3_SecuritySettings>

  func updateSecuritySettings(
    _ request: Google_Cloud_Dialogflow_Cx_V3_UpdateSecuritySettingsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_UpdateSecuritySettingsRequest, Google_Cloud_Dialogflow_Cx_V3_SecuritySettings>

  func listSecuritySettings(
    _ request: Google_Cloud_Dialogflow_Cx_V3_ListSecuritySettingsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_ListSecuritySettingsRequest, Google_Cloud_Dialogflow_Cx_V3_ListSecuritySettingsResponse>

  func deleteSecuritySettings(
    _ request: Google_Cloud_Dialogflow_Cx_V3_DeleteSecuritySettingsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_DeleteSecuritySettingsRequest, SwiftProtobuf.Google_Protobuf_Empty>

}

extension Google_Cloud_Dialogflow_Cx_V3_SecuritySettingsServiceClientProtocol {

  /// Create security settings in the specified location.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateSecuritySettings.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createSecuritySettings(
    _ request: Google_Cloud_Dialogflow_Cx_V3_CreateSecuritySettingsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_CreateSecuritySettingsRequest, Google_Cloud_Dialogflow_Cx_V3_SecuritySettings> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.cx.v3.SecuritySettingsService/CreateSecuritySettings",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves the specified [SecuritySettings][google.cloud.dialogflow.cx.v3.SecuritySettings].
  /// The returned settings may be stale by up to 1 minute.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSecuritySettings.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getSecuritySettings(
    _ request: Google_Cloud_Dialogflow_Cx_V3_GetSecuritySettingsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_GetSecuritySettingsRequest, Google_Cloud_Dialogflow_Cx_V3_SecuritySettings> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.cx.v3.SecuritySettingsService/GetSecuritySettings",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates the specified [SecuritySettings][google.cloud.dialogflow.cx.v3.SecuritySettings].
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateSecuritySettings.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateSecuritySettings(
    _ request: Google_Cloud_Dialogflow_Cx_V3_UpdateSecuritySettingsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_UpdateSecuritySettingsRequest, Google_Cloud_Dialogflow_Cx_V3_SecuritySettings> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.cx.v3.SecuritySettingsService/UpdateSecuritySettings",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns the list of all security settings in the specified location.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListSecuritySettings.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listSecuritySettings(
    _ request: Google_Cloud_Dialogflow_Cx_V3_ListSecuritySettingsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_ListSecuritySettingsRequest, Google_Cloud_Dialogflow_Cx_V3_ListSecuritySettingsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.cx.v3.SecuritySettingsService/ListSecuritySettings",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes the specified [SecuritySettings][google.cloud.dialogflow.cx.v3.SecuritySettings].
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteSecuritySettings.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteSecuritySettings(
    _ request: Google_Cloud_Dialogflow_Cx_V3_DeleteSecuritySettingsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_Cx_V3_DeleteSecuritySettingsRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.cx.v3.SecuritySettingsService/DeleteSecuritySettings",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Dialogflow_Cx_V3_SecuritySettingsServiceClient: Google_Cloud_Dialogflow_Cx_V3_SecuritySettingsServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.dialogflow.cx.v3.SecuritySettingsService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Dialogflow_Cx_V3_SecuritySettingsServiceProvider: CallHandlerProvider {
  /// Create security settings in the specified location.
  func createSecuritySettings(request: Google_Cloud_Dialogflow_Cx_V3_CreateSecuritySettingsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_Cx_V3_SecuritySettings>
  /// Retrieves the specified [SecuritySettings][google.cloud.dialogflow.cx.v3.SecuritySettings].
  /// The returned settings may be stale by up to 1 minute.
  func getSecuritySettings(request: Google_Cloud_Dialogflow_Cx_V3_GetSecuritySettingsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_Cx_V3_SecuritySettings>
  /// Updates the specified [SecuritySettings][google.cloud.dialogflow.cx.v3.SecuritySettings].
  func updateSecuritySettings(request: Google_Cloud_Dialogflow_Cx_V3_UpdateSecuritySettingsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_Cx_V3_SecuritySettings>
  /// Returns the list of all security settings in the specified location.
  func listSecuritySettings(request: Google_Cloud_Dialogflow_Cx_V3_ListSecuritySettingsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_Cx_V3_ListSecuritySettingsResponse>
  /// Deletes the specified [SecuritySettings][google.cloud.dialogflow.cx.v3.SecuritySettings].
  func deleteSecuritySettings(request: Google_Cloud_Dialogflow_Cx_V3_DeleteSecuritySettingsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
}

extension Google_Cloud_Dialogflow_Cx_V3_SecuritySettingsServiceProvider {
  public var serviceName: Substring { return "google.cloud.dialogflow.cx.v3.SecuritySettingsService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "CreateSecuritySettings":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createSecuritySettings(request: request, context: context)
        }
      }

    case "GetSecuritySettings":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getSecuritySettings(request: request, context: context)
        }
      }

    case "UpdateSecuritySettings":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateSecuritySettings(request: request, context: context)
        }
      }

    case "ListSecuritySettings":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listSecuritySettings(request: request, context: context)
        }
      }

    case "DeleteSecuritySettings":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteSecuritySettings(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

