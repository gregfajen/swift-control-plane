// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/dialogflow/v2/validation_result.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Represents a single validation error.
public struct Google_Cloud_Dialogflow_V2_ValidationError {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// The severity of the error.
  public var severity: Google_Cloud_Dialogflow_V2_ValidationError.Severity = .unspecified

  /// The names of the entries that the error is associated with.
  /// Format:
  ///
  /// - "projects/<Project ID>/agent", if the error is associated with the entire
  /// agent.
  /// - "projects/<Project ID>/agent/intents/<Intent ID>", if the error is
  /// associated with certain intents.
  /// - "projects/<Project
  /// ID>/agent/intents/<Intent Id>/trainingPhrases/<Training Phrase ID>", if the
  /// error is associated with certain intent training phrases.
  /// - "projects/<Project ID>/agent/intents/<Intent Id>/parameters/<Parameter
  /// ID>", if the error is associated with certain intent parameters.
  /// - "projects/<Project ID>/agent/entities/<Entity ID>", if the error is
  /// associated with certain entities.
  public var entries: [String] = []

  /// The detailed error messsage.
  public var errorMessage: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// Represents a level of severity.
  public enum Severity: SwiftProtobuf.Enum {
    public typealias RawValue = Int

    /// Not specified. This value should never be used.
    case unspecified // = 0

    /// The agent doesn't follow Dialogflow best practicies.
    case info // = 1

    /// The agent may not behave as expected.
    case warning // = 2

    /// The agent may experience partial failures.
    case error // = 3

    /// The agent may completely fail.
    case critical // = 4
    case UNRECOGNIZED(Int)

    public init() {
      self = .unspecified
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unspecified
      case 1: self = .info
      case 2: self = .warning
      case 3: self = .error
      case 4: self = .critical
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unspecified: return 0
      case .info: return 1
      case .warning: return 2
      case .error: return 3
      case .critical: return 4
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}
}

#if swift(>=4.2)

extension Google_Cloud_Dialogflow_V2_ValidationError.Severity: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Google_Cloud_Dialogflow_V2_ValidationError.Severity] = [
    .unspecified,
    .info,
    .warning,
    .error,
    .critical,
  ]
}

#endif  // swift(>=4.2)

/// Represents the output of agent validation.
public struct Google_Cloud_Dialogflow_V2_ValidationResult {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Contains all validation errors.
  public var validationErrors: [Google_Cloud_Dialogflow_V2_ValidationError] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.dialogflow.v2"

extension Google_Cloud_Dialogflow_V2_ValidationError: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ValidationError"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "severity"),
    3: .same(proto: "entries"),
    4: .standard(proto: "error_message"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularEnumField(value: &self.severity) }()
      case 3: try { try decoder.decodeRepeatedStringField(value: &self.entries) }()
      case 4: try { try decoder.decodeSingularStringField(value: &self.errorMessage) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.severity != .unspecified {
      try visitor.visitSingularEnumField(value: self.severity, fieldNumber: 1)
    }
    if !self.entries.isEmpty {
      try visitor.visitRepeatedStringField(value: self.entries, fieldNumber: 3)
    }
    if !self.errorMessage.isEmpty {
      try visitor.visitSingularStringField(value: self.errorMessage, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Dialogflow_V2_ValidationError, rhs: Google_Cloud_Dialogflow_V2_ValidationError) -> Bool {
    if lhs.severity != rhs.severity {return false}
    if lhs.entries != rhs.entries {return false}
    if lhs.errorMessage != rhs.errorMessage {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Dialogflow_V2_ValidationError.Severity: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "SEVERITY_UNSPECIFIED"),
    1: .same(proto: "INFO"),
    2: .same(proto: "WARNING"),
    3: .same(proto: "ERROR"),
    4: .same(proto: "CRITICAL"),
  ]
}

extension Google_Cloud_Dialogflow_V2_ValidationResult: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ValidationResult"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "validation_errors"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedMessageField(value: &self.validationErrors) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.validationErrors.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.validationErrors, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Dialogflow_V2_ValidationResult, rhs: Google_Cloud_Dialogflow_V2_ValidationResult) -> Bool {
    if lhs.validationErrors != rhs.validationErrors {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
