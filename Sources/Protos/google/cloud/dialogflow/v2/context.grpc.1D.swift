//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/dialogflow/v2/context.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Dialogflow_V2_ContextsClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Dialogflow_V2_ContextsClientProtocol: GRPCClient {
  func listContexts(
    _ request: Google_Cloud_Dialogflow_V2_ListContextsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2_ListContextsRequest, Google_Cloud_Dialogflow_V2_ListContextsResponse>

  func getContext(
    _ request: Google_Cloud_Dialogflow_V2_GetContextRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2_GetContextRequest, Google_Cloud_Dialogflow_V2_Context>

  func createContext(
    _ request: Google_Cloud_Dialogflow_V2_CreateContextRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2_CreateContextRequest, Google_Cloud_Dialogflow_V2_Context>

  func updateContext(
    _ request: Google_Cloud_Dialogflow_V2_UpdateContextRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2_UpdateContextRequest, Google_Cloud_Dialogflow_V2_Context>

  func deleteContext(
    _ request: Google_Cloud_Dialogflow_V2_DeleteContextRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2_DeleteContextRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteAllContexts(
    _ request: Google_Cloud_Dialogflow_V2_DeleteAllContextsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2_DeleteAllContextsRequest, SwiftProtobuf.Google_Protobuf_Empty>

}

extension Google_Cloud_Dialogflow_V2_ContextsClientProtocol {

  /// Returns the list of all contexts in the specified session.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListContexts.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listContexts(
    _ request: Google_Cloud_Dialogflow_V2_ListContextsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2_ListContextsRequest, Google_Cloud_Dialogflow_V2_ListContextsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2.Contexts/ListContexts",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves the specified context.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetContext.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getContext(
    _ request: Google_Cloud_Dialogflow_V2_GetContextRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2_GetContextRequest, Google_Cloud_Dialogflow_V2_Context> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2.Contexts/GetContext",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a context.
  ///
  /// If the specified context already exists, overrides the context.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateContext.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createContext(
    _ request: Google_Cloud_Dialogflow_V2_CreateContextRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2_CreateContextRequest, Google_Cloud_Dialogflow_V2_Context> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2.Contexts/CreateContext",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates the specified context.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateContext.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateContext(
    _ request: Google_Cloud_Dialogflow_V2_UpdateContextRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2_UpdateContextRequest, Google_Cloud_Dialogflow_V2_Context> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2.Contexts/UpdateContext",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes the specified context.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteContext.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteContext(
    _ request: Google_Cloud_Dialogflow_V2_DeleteContextRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2_DeleteContextRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2.Contexts/DeleteContext",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes all active contexts in the specified session.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteAllContexts.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteAllContexts(
    _ request: Google_Cloud_Dialogflow_V2_DeleteAllContextsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Dialogflow_V2_DeleteAllContextsRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.dialogflow.v2.Contexts/DeleteAllContexts",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Dialogflow_V2_ContextsClient: Google_Cloud_Dialogflow_V2_ContextsClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.dialogflow.v2.Contexts service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Dialogflow_V2_ContextsProvider: CallHandlerProvider {
  /// Returns the list of all contexts in the specified session.
  func listContexts(request: Google_Cloud_Dialogflow_V2_ListContextsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_V2_ListContextsResponse>
  /// Retrieves the specified context.
  func getContext(request: Google_Cloud_Dialogflow_V2_GetContextRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_V2_Context>
  /// Creates a context.
  ///
  /// If the specified context already exists, overrides the context.
  func createContext(request: Google_Cloud_Dialogflow_V2_CreateContextRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_V2_Context>
  /// Updates the specified context.
  func updateContext(request: Google_Cloud_Dialogflow_V2_UpdateContextRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Dialogflow_V2_Context>
  /// Deletes the specified context.
  func deleteContext(request: Google_Cloud_Dialogflow_V2_DeleteContextRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Deletes all active contexts in the specified session.
  func deleteAllContexts(request: Google_Cloud_Dialogflow_V2_DeleteAllContextsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
}

extension Google_Cloud_Dialogflow_V2_ContextsProvider {
  public var serviceName: Substring { return "google.cloud.dialogflow.v2.Contexts" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "ListContexts":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listContexts(request: request, context: context)
        }
      }

    case "GetContext":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getContext(request: request, context: context)
        }
      }

    case "CreateContext":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createContext(request: request, context: context)
        }
      }

    case "UpdateContext":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateContext(request: request, context: context)
        }
      }

    case "DeleteContext":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteContext(request: request, context: context)
        }
      }

    case "DeleteAllContexts":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteAllContexts(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

