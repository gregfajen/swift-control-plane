//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/oslogin/v1alpha/oslogin.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Oslogin_V1alpha_OsLoginServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Oslogin_V1alpha_OsLoginServiceClientProtocol: GRPCClient {
  func deletePosixAccount(
    _ request: Google_Cloud_Oslogin_V1alpha_DeletePosixAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Oslogin_V1alpha_DeletePosixAccountRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteSshPublicKey(
    _ request: Google_Cloud_Oslogin_V1alpha_DeleteSshPublicKeyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Oslogin_V1alpha_DeleteSshPublicKeyRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getLoginProfile(
    _ request: Google_Cloud_Oslogin_V1alpha_GetLoginProfileRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Oslogin_V1alpha_GetLoginProfileRequest, Google_Cloud_Oslogin_V1alpha_LoginProfile>

  func getSshPublicKey(
    _ request: Google_Cloud_Oslogin_V1alpha_GetSshPublicKeyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Oslogin_V1alpha_GetSshPublicKeyRequest, Google_Cloud_Oslogin_Common_SshPublicKey>

  func importSshPublicKey(
    _ request: Google_Cloud_Oslogin_V1alpha_ImportSshPublicKeyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Oslogin_V1alpha_ImportSshPublicKeyRequest, Google_Cloud_Oslogin_V1alpha_ImportSshPublicKeyResponse>

  func updateSshPublicKey(
    _ request: Google_Cloud_Oslogin_V1alpha_UpdateSshPublicKeyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Oslogin_V1alpha_UpdateSshPublicKeyRequest, Google_Cloud_Oslogin_Common_SshPublicKey>

}

extension Google_Cloud_Oslogin_V1alpha_OsLoginServiceClientProtocol {

  /// Deletes a POSIX account.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeletePosixAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deletePosixAccount(
    _ request: Google_Cloud_Oslogin_V1alpha_DeletePosixAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Oslogin_V1alpha_DeletePosixAccountRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.oslogin.v1alpha.OsLoginService/DeletePosixAccount",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes an SSH public key.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteSshPublicKey.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteSshPublicKey(
    _ request: Google_Cloud_Oslogin_V1alpha_DeleteSshPublicKeyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Oslogin_V1alpha_DeleteSshPublicKeyRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.oslogin.v1alpha.OsLoginService/DeleteSshPublicKey",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves the profile information used for logging in to a virtual machine
  /// on Google Compute Engine.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetLoginProfile.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getLoginProfile(
    _ request: Google_Cloud_Oslogin_V1alpha_GetLoginProfileRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Oslogin_V1alpha_GetLoginProfileRequest, Google_Cloud_Oslogin_V1alpha_LoginProfile> {
    return self.makeUnaryCall(
      path: "/google.cloud.oslogin.v1alpha.OsLoginService/GetLoginProfile",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves an SSH public key.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSshPublicKey.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getSshPublicKey(
    _ request: Google_Cloud_Oslogin_V1alpha_GetSshPublicKeyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Oslogin_V1alpha_GetSshPublicKeyRequest, Google_Cloud_Oslogin_Common_SshPublicKey> {
    return self.makeUnaryCall(
      path: "/google.cloud.oslogin.v1alpha.OsLoginService/GetSshPublicKey",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Adds an SSH public key and returns the profile information. Default POSIX
  /// account information is set when no username and UID exist as part of the
  /// login profile.
  ///
  /// - Parameters:
  ///   - request: Request to send to ImportSshPublicKey.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func importSshPublicKey(
    _ request: Google_Cloud_Oslogin_V1alpha_ImportSshPublicKeyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Oslogin_V1alpha_ImportSshPublicKeyRequest, Google_Cloud_Oslogin_V1alpha_ImportSshPublicKeyResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.oslogin.v1alpha.OsLoginService/ImportSshPublicKey",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates an SSH public key and returns the profile information. This method
  /// supports patch semantics.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateSshPublicKey.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateSshPublicKey(
    _ request: Google_Cloud_Oslogin_V1alpha_UpdateSshPublicKeyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Oslogin_V1alpha_UpdateSshPublicKeyRequest, Google_Cloud_Oslogin_Common_SshPublicKey> {
    return self.makeUnaryCall(
      path: "/google.cloud.oslogin.v1alpha.OsLoginService/UpdateSshPublicKey",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Oslogin_V1alpha_OsLoginServiceClient: Google_Cloud_Oslogin_V1alpha_OsLoginServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.oslogin.v1alpha.OsLoginService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Oslogin_V1alpha_OsLoginServiceProvider: CallHandlerProvider {
  /// Deletes a POSIX account.
  func deletePosixAccount(request: Google_Cloud_Oslogin_V1alpha_DeletePosixAccountRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Deletes an SSH public key.
  func deleteSshPublicKey(request: Google_Cloud_Oslogin_V1alpha_DeleteSshPublicKeyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Retrieves the profile information used for logging in to a virtual machine
  /// on Google Compute Engine.
  func getLoginProfile(request: Google_Cloud_Oslogin_V1alpha_GetLoginProfileRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Oslogin_V1alpha_LoginProfile>
  /// Retrieves an SSH public key.
  func getSshPublicKey(request: Google_Cloud_Oslogin_V1alpha_GetSshPublicKeyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Oslogin_Common_SshPublicKey>
  /// Adds an SSH public key and returns the profile information. Default POSIX
  /// account information is set when no username and UID exist as part of the
  /// login profile.
  func importSshPublicKey(request: Google_Cloud_Oslogin_V1alpha_ImportSshPublicKeyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Oslogin_V1alpha_ImportSshPublicKeyResponse>
  /// Updates an SSH public key and returns the profile information. This method
  /// supports patch semantics.
  func updateSshPublicKey(request: Google_Cloud_Oslogin_V1alpha_UpdateSshPublicKeyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Oslogin_Common_SshPublicKey>
}

extension Google_Cloud_Oslogin_V1alpha_OsLoginServiceProvider {
  public var serviceName: Substring { return "google.cloud.oslogin.v1alpha.OsLoginService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "DeletePosixAccount":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deletePosixAccount(request: request, context: context)
        }
      }

    case "DeleteSshPublicKey":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteSshPublicKey(request: request, context: context)
        }
      }

    case "GetLoginProfile":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getLoginProfile(request: request, context: context)
        }
      }

    case "GetSshPublicKey":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getSshPublicKey(request: request, context: context)
        }
      }

    case "ImportSshPublicKey":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.importSshPublicKey(request: request, context: context)
        }
      }

    case "UpdateSshPublicKey":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateSshPublicKey(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

