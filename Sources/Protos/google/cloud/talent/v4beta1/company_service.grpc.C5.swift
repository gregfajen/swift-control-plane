//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/talent/v4beta1/company_service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Talent_V4beta1_CompanyServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Talent_V4beta1_CompanyServiceClientProtocol: GRPCClient {
  func createCompany(
    _ request: Google_Cloud_Talent_V4beta1_CreateCompanyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Talent_V4beta1_CreateCompanyRequest, Google_Cloud_Talent_V4beta1_Company>

  func getCompany(
    _ request: Google_Cloud_Talent_V4beta1_GetCompanyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Talent_V4beta1_GetCompanyRequest, Google_Cloud_Talent_V4beta1_Company>

  func updateCompany(
    _ request: Google_Cloud_Talent_V4beta1_UpdateCompanyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Talent_V4beta1_UpdateCompanyRequest, Google_Cloud_Talent_V4beta1_Company>

  func deleteCompany(
    _ request: Google_Cloud_Talent_V4beta1_DeleteCompanyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Talent_V4beta1_DeleteCompanyRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func listCompanies(
    _ request: Google_Cloud_Talent_V4beta1_ListCompaniesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Talent_V4beta1_ListCompaniesRequest, Google_Cloud_Talent_V4beta1_ListCompaniesResponse>

}

extension Google_Cloud_Talent_V4beta1_CompanyServiceClientProtocol {

  /// Creates a new company entity.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateCompany.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createCompany(
    _ request: Google_Cloud_Talent_V4beta1_CreateCompanyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Talent_V4beta1_CreateCompanyRequest, Google_Cloud_Talent_V4beta1_Company> {
    return self.makeUnaryCall(
      path: "/google.cloud.talent.v4beta1.CompanyService/CreateCompany",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Retrieves specified company.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCompany.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getCompany(
    _ request: Google_Cloud_Talent_V4beta1_GetCompanyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Talent_V4beta1_GetCompanyRequest, Google_Cloud_Talent_V4beta1_Company> {
    return self.makeUnaryCall(
      path: "/google.cloud.talent.v4beta1.CompanyService/GetCompany",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates specified company.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateCompany.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateCompany(
    _ request: Google_Cloud_Talent_V4beta1_UpdateCompanyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Talent_V4beta1_UpdateCompanyRequest, Google_Cloud_Talent_V4beta1_Company> {
    return self.makeUnaryCall(
      path: "/google.cloud.talent.v4beta1.CompanyService/UpdateCompany",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes specified company.
  /// Prerequisite: The company has no jobs associated with it.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteCompany.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteCompany(
    _ request: Google_Cloud_Talent_V4beta1_DeleteCompanyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Talent_V4beta1_DeleteCompanyRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.talent.v4beta1.CompanyService/DeleteCompany",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists all companies associated with the project.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListCompanies.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listCompanies(
    _ request: Google_Cloud_Talent_V4beta1_ListCompaniesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Talent_V4beta1_ListCompaniesRequest, Google_Cloud_Talent_V4beta1_ListCompaniesResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.talent.v4beta1.CompanyService/ListCompanies",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Talent_V4beta1_CompanyServiceClient: Google_Cloud_Talent_V4beta1_CompanyServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.talent.v4beta1.CompanyService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Talent_V4beta1_CompanyServiceProvider: CallHandlerProvider {
  /// Creates a new company entity.
  func createCompany(request: Google_Cloud_Talent_V4beta1_CreateCompanyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Talent_V4beta1_Company>
  /// Retrieves specified company.
  func getCompany(request: Google_Cloud_Talent_V4beta1_GetCompanyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Talent_V4beta1_Company>
  /// Updates specified company.
  func updateCompany(request: Google_Cloud_Talent_V4beta1_UpdateCompanyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Talent_V4beta1_Company>
  /// Deletes specified company.
  /// Prerequisite: The company has no jobs associated with it.
  func deleteCompany(request: Google_Cloud_Talent_V4beta1_DeleteCompanyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Lists all companies associated with the project.
  func listCompanies(request: Google_Cloud_Talent_V4beta1_ListCompaniesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Talent_V4beta1_ListCompaniesResponse>
}

extension Google_Cloud_Talent_V4beta1_CompanyServiceProvider {
  public var serviceName: Substring { return "google.cloud.talent.v4beta1.CompanyService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "CreateCompany":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createCompany(request: request, context: context)
        }
      }

    case "GetCompany":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getCompany(request: request, context: context)
        }
      }

    case "UpdateCompany":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateCompany(request: request, context: context)
        }
      }

    case "DeleteCompany":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteCompany(request: request, context: context)
        }
      }

    case "ListCompanies":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listCompanies(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

