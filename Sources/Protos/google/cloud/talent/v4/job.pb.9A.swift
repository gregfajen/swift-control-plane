// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/talent/v4/job.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// A Job resource represents a job posting (also referred to as a "job listing"
/// or "job requisition"). A job belongs to a [Company][google.cloud.talent.v4.Company], which is the hiring
/// entity responsible for the job.
public struct Google_Cloud_Talent_V4_Job {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Required during job update.
  ///
  /// The resource name for the job. This is generated by the service when a
  /// job is created.
  ///
  /// The format is
  /// "projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}". For
  /// example, "projects/foo/tenants/bar/jobs/baz".
  ///
  /// Use of this field in job queries and API calls is preferred over the use of
  /// [requisition_id][google.cloud.talent.v4.Job.requisition_id] since this value is unique.
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  /// Required. The resource name of the company listing the job.
  ///
  /// The format is
  /// "projects/{project_id}/tenants/{tenant_id}/companies/{company_id}". For
  /// example, "projects/foo/tenants/bar/companies/baz".
  public var company: String {
    get {return _storage._company}
    set {_uniqueStorage()._company = newValue}
  }

  /// Required. The requisition ID, also referred to as the posting ID, is assigned by the
  /// client to identify a job. This field is intended to be used by clients
  /// for client identification and tracking of postings. A job isn't allowed
  /// to be created if there is another job with the same [company][google.cloud.talent.v4.Job.name],
  /// [language_code][google.cloud.talent.v4.Job.language_code] and [requisition_id][google.cloud.talent.v4.Job.requisition_id].
  ///
  /// The maximum number of allowed characters is 255.
  public var requisitionID: String {
    get {return _storage._requisitionID}
    set {_uniqueStorage()._requisitionID = newValue}
  }

  /// Required. The title of the job, such as "Software Engineer"
  ///
  /// The maximum number of allowed characters is 500.
  public var title: String {
    get {return _storage._title}
    set {_uniqueStorage()._title = newValue}
  }

  /// Required. The description of the job, which typically includes a multi-paragraph
  /// description of the company and related information. Separate fields are
  /// provided on the job object for [responsibilities][google.cloud.talent.v4.Job.responsibilities],
  /// [qualifications][google.cloud.talent.v4.Job.qualifications], and other job characteristics. Use of
  /// these separate job fields is recommended.
  ///
  /// This field accepts and sanitizes HTML input, and also accepts
  /// bold, italic, ordered list, and unordered list markup tags.
  ///
  /// The maximum number of allowed characters is 100,000.
  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  /// Strongly recommended for the best service experience.
  ///
  /// Location(s) where the employer is looking to hire for this job posting.
  ///
  /// Specifying the full street address(es) of the hiring location enables
  /// better API results, especially job searches by commute time.
  ///
  /// At most 50 locations are allowed for best search performance. If a job has
  /// more locations, it is suggested to split it into multiple jobs with unique
  /// [requisition_id][google.cloud.talent.v4.Job.requisition_id]s (e.g. 'ReqA' becomes 'ReqA-1', 'ReqA-2', and so on.) as
  /// multiple jobs with the same [company][google.cloud.talent.v4.Job.company], [language_code][google.cloud.talent.v4.Job.language_code] and
  /// [requisition_id][google.cloud.talent.v4.Job.requisition_id] are not allowed. If the original [requisition_id][google.cloud.talent.v4.Job.requisition_id] must
  /// be preserved, a custom field should be used for storage. It is also
  /// suggested to group the locations that close to each other in the same job
  /// for better search experience.
  ///
  /// The maximum number of allowed characters is 500.
  public var addresses: [String] {
    get {return _storage._addresses}
    set {_uniqueStorage()._addresses = newValue}
  }

  /// Job application information.
  public var applicationInfo: Google_Cloud_Talent_V4_Job.ApplicationInfo {
    get {return _storage._applicationInfo ?? Google_Cloud_Talent_V4_Job.ApplicationInfo()}
    set {_uniqueStorage()._applicationInfo = newValue}
  }
  /// Returns true if `applicationInfo` has been explicitly set.
  public var hasApplicationInfo: Bool {return _storage._applicationInfo != nil}
  /// Clears the value of `applicationInfo`. Subsequent reads from it will return its default value.
  public mutating func clearApplicationInfo() {_uniqueStorage()._applicationInfo = nil}

  /// The benefits included with the job.
  public var jobBenefits: [Google_Cloud_Talent_V4_JobBenefit] {
    get {return _storage._jobBenefits}
    set {_uniqueStorage()._jobBenefits = newValue}
  }

  /// Job compensation information (a.k.a. "pay rate") i.e., the compensation
  /// that will paid to the employee.
  public var compensationInfo: Google_Cloud_Talent_V4_CompensationInfo {
    get {return _storage._compensationInfo ?? Google_Cloud_Talent_V4_CompensationInfo()}
    set {_uniqueStorage()._compensationInfo = newValue}
  }
  /// Returns true if `compensationInfo` has been explicitly set.
  public var hasCompensationInfo: Bool {return _storage._compensationInfo != nil}
  /// Clears the value of `compensationInfo`. Subsequent reads from it will return its default value.
  public mutating func clearCompensationInfo() {_uniqueStorage()._compensationInfo = nil}

  /// A map of fields to hold both filterable and non-filterable custom job
  /// attributes that are not covered by the provided structured fields.
  ///
  /// The keys of the map are strings up to 64 bytes and must match the
  /// pattern: [a-zA-Z][a-zA-Z0-9_]*. For example, key0LikeThis or
  /// KEY_1_LIKE_THIS.
  ///
  /// At most 100 filterable and at most 100 unfilterable keys are supported.
  /// For filterable `string_values`, across all keys at most 200 values are
  /// allowed, with each string no more than 255 characters. For unfilterable
  /// `string_values`, the maximum total size of `string_values` across all keys
  /// is 50KB.
  public var customAttributes: Dictionary<String,Google_Cloud_Talent_V4_CustomAttribute> {
    get {return _storage._customAttributes}
    set {_uniqueStorage()._customAttributes = newValue}
  }

  /// The desired education degrees for the job, such as Bachelors, Masters.
  public var degreeTypes: [Google_Cloud_Talent_V4_DegreeType] {
    get {return _storage._degreeTypes}
    set {_uniqueStorage()._degreeTypes = newValue}
  }

  /// The department or functional area within the company with the open
  /// position.
  ///
  /// The maximum number of allowed characters is 255.
  public var department: String {
    get {return _storage._department}
    set {_uniqueStorage()._department = newValue}
  }

  /// The employment type(s) of a job, for example,
  /// [full time][google.cloud.talent.v4.EmploymentType.FULL_TIME] or
  /// [part time][google.cloud.talent.v4.EmploymentType.PART_TIME].
  public var employmentTypes: [Google_Cloud_Talent_V4_EmploymentType] {
    get {return _storage._employmentTypes}
    set {_uniqueStorage()._employmentTypes = newValue}
  }

  /// A description of bonus, commission, and other compensation
  /// incentives associated with the job not including salary or pay.
  ///
  /// The maximum number of allowed characters is 10,000.
  public var incentives: String {
    get {return _storage._incentives}
    set {_uniqueStorage()._incentives = newValue}
  }

  /// The language of the posting. This field is distinct from
  /// any requirements for fluency that are associated with the job.
  ///
  /// Language codes must be in BCP-47 format, such as "en-US" or "sr-Latn".
  /// For more information, see
  /// [Tags for Identifying Languages](https://tools.ietf.org/html/bcp47){:
  /// class="external" target="_blank" }.
  ///
  /// If this field is unspecified and [Job.description][google.cloud.talent.v4.Job.description] is present, detected
  /// language code based on [Job.description][google.cloud.talent.v4.Job.description] is assigned, otherwise
  /// defaults to 'en_US'.
  public var languageCode: String {
    get {return _storage._languageCode}
    set {_uniqueStorage()._languageCode = newValue}
  }

  /// The experience level associated with the job, such as "Entry Level".
  public var jobLevel: Google_Cloud_Talent_V4_JobLevel {
    get {return _storage._jobLevel}
    set {_uniqueStorage()._jobLevel = newValue}
  }

  /// A promotion value of the job, as determined by the client.
  /// The value determines the sort order of the jobs returned when searching for
  /// jobs using the featured jobs search call, with higher promotional values
  /// being returned first and ties being resolved by relevance sort. Only the
  /// jobs with a promotionValue >0 are returned in a FEATURED_JOB_SEARCH.
  ///
  /// Default value is 0, and negative values are treated as 0.
  public var promotionValue: Int32 {
    get {return _storage._promotionValue}
    set {_uniqueStorage()._promotionValue = newValue}
  }

  /// A description of the qualifications required to perform the
  /// job. The use of this field is recommended
  /// as an alternative to using the more general [description][google.cloud.talent.v4.Job.description] field.
  ///
  /// This field accepts and sanitizes HTML input, and also accepts
  /// bold, italic, ordered list, and unordered list markup tags.
  ///
  /// The maximum number of allowed characters is 10,000.
  public var qualifications: String {
    get {return _storage._qualifications}
    set {_uniqueStorage()._qualifications = newValue}
  }

  /// A description of job responsibilities. The use of this field is
  /// recommended as an alternative to using the more general [description][google.cloud.talent.v4.Job.description]
  /// field.
  ///
  /// This field accepts and sanitizes HTML input, and also accepts
  /// bold, italic, ordered list, and unordered list markup tags.
  ///
  /// The maximum number of allowed characters is 10,000.
  public var responsibilities: String {
    get {return _storage._responsibilities}
    set {_uniqueStorage()._responsibilities = newValue}
  }

  /// The job [PostingRegion][google.cloud.talent.v4.PostingRegion] (for example, state, country) throughout
  /// which the job is available. If this field is set, a [LocationFilter][google.cloud.talent.v4.LocationFilter]
  /// in a search query within the job region finds this job posting if an
  /// exact location match isn't specified. If this field is set to
  /// [PostingRegion.NATION][google.cloud.talent.v4.PostingRegion.NATION] or [PostingRegion.ADMINISTRATIVE_AREA][google.cloud.talent.v4.PostingRegion.ADMINISTRATIVE_AREA],
  /// setting job [Job.addresses][google.cloud.talent.v4.Job.addresses] to the same location level as this field
  /// is strongly recommended.
  public var postingRegion: Google_Cloud_Talent_V4_PostingRegion {
    get {return _storage._postingRegion}
    set {_uniqueStorage()._postingRegion = newValue}
  }

  /// Deprecated. The job is only visible to the owner.
  ///
  /// The visibility of the job.
  ///
  /// Defaults to [Visibility.ACCOUNT_ONLY][google.cloud.talent.v4.Visibility.ACCOUNT_ONLY] if not specified.
  public var visibility: Google_Cloud_Talent_V4_Visibility {
    get {return _storage._visibility}
    set {_uniqueStorage()._visibility = newValue}
  }

  /// The start timestamp of the job in UTC time zone. Typically this field
  /// is used for contracting engagements. Invalid timestamps are ignored.
  public var jobStartTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._jobStartTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._jobStartTime = newValue}
  }
  /// Returns true if `jobStartTime` has been explicitly set.
  public var hasJobStartTime: Bool {return _storage._jobStartTime != nil}
  /// Clears the value of `jobStartTime`. Subsequent reads from it will return its default value.
  public mutating func clearJobStartTime() {_uniqueStorage()._jobStartTime = nil}

  /// The end timestamp of the job. Typically this field is used for contracting
  /// engagements. Invalid timestamps are ignored.
  public var jobEndTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._jobEndTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._jobEndTime = newValue}
  }
  /// Returns true if `jobEndTime` has been explicitly set.
  public var hasJobEndTime: Bool {return _storage._jobEndTime != nil}
  /// Clears the value of `jobEndTime`. Subsequent reads from it will return its default value.
  public mutating func clearJobEndTime() {_uniqueStorage()._jobEndTime = nil}

  /// The timestamp this job posting was most recently published. The default
  /// value is the time the request arrives at the server. Invalid timestamps are
  /// ignored.
  public var postingPublishTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._postingPublishTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._postingPublishTime = newValue}
  }
  /// Returns true if `postingPublishTime` has been explicitly set.
  public var hasPostingPublishTime: Bool {return _storage._postingPublishTime != nil}
  /// Clears the value of `postingPublishTime`. Subsequent reads from it will return its default value.
  public mutating func clearPostingPublishTime() {_uniqueStorage()._postingPublishTime = nil}

  /// Strongly recommended for the best service experience.
  ///
  /// The expiration timestamp of the job. After this timestamp, the
  /// job is marked as expired, and it no longer appears in search results. The
  /// expired job can't be listed by the [ListJobs][google.cloud.talent.v4.JobService.ListJobs] API,
  /// but it can be retrieved with the [GetJob][google.cloud.talent.v4.JobService.GetJob] API or
  /// updated with the [UpdateJob][google.cloud.talent.v4.JobService.UpdateJob] API or deleted with
  /// the [DeleteJob][google.cloud.talent.v4.JobService.DeleteJob] API. An expired job can
  /// be updated and opened again by using a future expiration timestamp.
  /// Updating an expired job fails if there is another existing open job with
  /// same [company][google.cloud.talent.v4.Job.company], [language_code][google.cloud.talent.v4.Job.language_code] and [requisition_id][google.cloud.talent.v4.Job.requisition_id].
  ///
  /// The expired jobs are retained in our system for 90 days. However, the
  /// overall expired job count cannot exceed 3 times the maximum number of
  /// open jobs over previous 7 days. If this threshold is exceeded,
  /// expired jobs are cleaned out in order of earliest expire time.
  /// Expired jobs are no longer accessible after they are cleaned
  /// out.
  ///
  /// Invalid timestamps are ignored, and treated as expire time not provided.
  ///
  /// If the timestamp is before the instant request is made, the job
  /// is treated as expired immediately on creation. This kind of job can
  /// not be updated. And when creating a job with past timestamp, the
  /// [posting_publish_time][google.cloud.talent.v4.Job.posting_publish_time] must be set before
  /// [posting_expire_time][google.cloud.talent.v4.Job.posting_expire_time]. The purpose of this feature is
  /// to allow other objects, such as [Application][], to refer a job
  /// that didn't exist in the system prior to becoming expired. If you
  /// want to modify a job that was expired on creation,
  /// delete it and create a new one.
  ///
  /// If this value isn't provided at the time of job creation or is invalid,
  /// the job posting expires after 30 days from the job's creation time. For
  /// example, if the job was created on 2017/01/01 13:00AM UTC with an
  /// unspecified expiration date, the job expires after 2017/01/31 13:00AM UTC.
  ///
  /// If this value isn't provided on job update, it depends on the field masks
  /// set by [UpdateJobRequest.update_mask][google.cloud.talent.v4.UpdateJobRequest.update_mask]. If the field masks include
  /// [job_end_time][google.cloud.talent.v4.Job.job_end_time], or the masks are empty meaning that every field is
  /// updated, the job posting expires after 30 days from the job's last
  /// update time. Otherwise the expiration date isn't updated.
  public var postingExpireTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._postingExpireTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._postingExpireTime = newValue}
  }
  /// Returns true if `postingExpireTime` has been explicitly set.
  public var hasPostingExpireTime: Bool {return _storage._postingExpireTime != nil}
  /// Clears the value of `postingExpireTime`. Subsequent reads from it will return its default value.
  public mutating func clearPostingExpireTime() {_uniqueStorage()._postingExpireTime = nil}

  /// Output only. The timestamp when this job posting was created.
  public var postingCreateTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._postingCreateTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._postingCreateTime = newValue}
  }
  /// Returns true if `postingCreateTime` has been explicitly set.
  public var hasPostingCreateTime: Bool {return _storage._postingCreateTime != nil}
  /// Clears the value of `postingCreateTime`. Subsequent reads from it will return its default value.
  public mutating func clearPostingCreateTime() {_uniqueStorage()._postingCreateTime = nil}

  /// Output only. The timestamp when this job posting was last updated.
  public var postingUpdateTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._postingUpdateTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._postingUpdateTime = newValue}
  }
  /// Returns true if `postingUpdateTime` has been explicitly set.
  public var hasPostingUpdateTime: Bool {return _storage._postingUpdateTime != nil}
  /// Clears the value of `postingUpdateTime`. Subsequent reads from it will return its default value.
  public mutating func clearPostingUpdateTime() {_uniqueStorage()._postingUpdateTime = nil}

  /// Output only. Display name of the company listing the job.
  public var companyDisplayName: String {
    get {return _storage._companyDisplayName}
    set {_uniqueStorage()._companyDisplayName = newValue}
  }

  /// Output only. Derived details about the job posting.
  public var derivedInfo: Google_Cloud_Talent_V4_Job.DerivedInfo {
    get {return _storage._derivedInfo ?? Google_Cloud_Talent_V4_Job.DerivedInfo()}
    set {_uniqueStorage()._derivedInfo = newValue}
  }
  /// Returns true if `derivedInfo` has been explicitly set.
  public var hasDerivedInfo: Bool {return _storage._derivedInfo != nil}
  /// Clears the value of `derivedInfo`. Subsequent reads from it will return its default value.
  public mutating func clearDerivedInfo() {_uniqueStorage()._derivedInfo = nil}

  /// Options for job processing.
  public var processingOptions: Google_Cloud_Talent_V4_Job.ProcessingOptions {
    get {return _storage._processingOptions ?? Google_Cloud_Talent_V4_Job.ProcessingOptions()}
    set {_uniqueStorage()._processingOptions = newValue}
  }
  /// Returns true if `processingOptions` has been explicitly set.
  public var hasProcessingOptions: Bool {return _storage._processingOptions != nil}
  /// Clears the value of `processingOptions`. Subsequent reads from it will return its default value.
  public mutating func clearProcessingOptions() {_uniqueStorage()._processingOptions = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// Application related details of a job posting.
  public struct ApplicationInfo {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// Use this field to specify email address(es) to which resumes or
    /// applications can be sent.
    ///
    /// The maximum number of allowed characters for each entry is 255.
    public var emails: [String] = []

    /// Use this field to provide instructions, such as "Mail your application
    /// to ...", that a candidate can follow to apply for the job.
    ///
    /// This field accepts and sanitizes HTML input, and also accepts
    /// bold, italic, ordered list, and unordered list markup tags.
    ///
    /// The maximum number of allowed characters is 3,000.
    public var instruction: String = String()

    /// Use this URI field to direct an applicant to a website, for example to
    /// link to an online application form.
    ///
    /// The maximum number of allowed characters for each entry is 2,000.
    public var uris: [String] = []

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  /// Derived details about the job posting.
  public struct DerivedInfo {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// Structured locations of the job, resolved from [Job.addresses][google.cloud.talent.v4.Job.addresses].
    ///
    /// [locations][google.cloud.talent.v4.Job.DerivedInfo.locations] are exactly matched to [Job.addresses][google.cloud.talent.v4.Job.addresses] in the same
    /// order.
    public var locations: [Google_Cloud_Talent_V4_Location] = []

    /// Job categories derived from [Job.title][google.cloud.talent.v4.Job.title] and [Job.description][google.cloud.talent.v4.Job.description].
    public var jobCategories: [Google_Cloud_Talent_V4_JobCategory] = []

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  /// Options for job processing.
  public struct ProcessingOptions {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// If set to `true`, the service does not attempt to resolve a
    /// more precise address for the job.
    public var disableStreetAddressResolution: Bool = false

    /// Option for job HTML content sanitization. Applied fields are:
    ///
    /// * description
    /// * applicationInfo.instruction
    /// * incentives
    /// * qualifications
    /// * responsibilities
    ///
    /// HTML tags in these fields may be stripped if sanitiazation isn't
    /// disabled.
    ///
    /// Defaults to [HtmlSanitization.SIMPLE_FORMATTING_ONLY][google.cloud.talent.v4.HtmlSanitization.SIMPLE_FORMATTING_ONLY].
    public var htmlSanitization: Google_Cloud_Talent_V4_HtmlSanitization = .unspecified

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.talent.v4"

extension Google_Cloud_Talent_V4_Job: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Job"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .same(proto: "company"),
    3: .standard(proto: "requisition_id"),
    4: .same(proto: "title"),
    5: .same(proto: "description"),
    6: .same(proto: "addresses"),
    7: .standard(proto: "application_info"),
    8: .standard(proto: "job_benefits"),
    9: .standard(proto: "compensation_info"),
    10: .standard(proto: "custom_attributes"),
    11: .standard(proto: "degree_types"),
    12: .same(proto: "department"),
    13: .standard(proto: "employment_types"),
    14: .same(proto: "incentives"),
    15: .standard(proto: "language_code"),
    16: .standard(proto: "job_level"),
    17: .standard(proto: "promotion_value"),
    18: .same(proto: "qualifications"),
    19: .same(proto: "responsibilities"),
    20: .standard(proto: "posting_region"),
    21: .same(proto: "visibility"),
    22: .standard(proto: "job_start_time"),
    23: .standard(proto: "job_end_time"),
    24: .standard(proto: "posting_publish_time"),
    25: .standard(proto: "posting_expire_time"),
    26: .standard(proto: "posting_create_time"),
    27: .standard(proto: "posting_update_time"),
    28: .standard(proto: "company_display_name"),
    29: .standard(proto: "derived_info"),
    30: .standard(proto: "processing_options"),
  ]

  fileprivate class _StorageClass {
    var _name: String = String()
    var _company: String = String()
    var _requisitionID: String = String()
    var _title: String = String()
    var _description_p: String = String()
    var _addresses: [String] = []
    var _applicationInfo: Google_Cloud_Talent_V4_Job.ApplicationInfo? = nil
    var _jobBenefits: [Google_Cloud_Talent_V4_JobBenefit] = []
    var _compensationInfo: Google_Cloud_Talent_V4_CompensationInfo? = nil
    var _customAttributes: Dictionary<String,Google_Cloud_Talent_V4_CustomAttribute> = [:]
    var _degreeTypes: [Google_Cloud_Talent_V4_DegreeType] = []
    var _department: String = String()
    var _employmentTypes: [Google_Cloud_Talent_V4_EmploymentType] = []
    var _incentives: String = String()
    var _languageCode: String = String()
    var _jobLevel: Google_Cloud_Talent_V4_JobLevel = .unspecified
    var _promotionValue: Int32 = 0
    var _qualifications: String = String()
    var _responsibilities: String = String()
    var _postingRegion: Google_Cloud_Talent_V4_PostingRegion = .unspecified
    var _visibility: Google_Cloud_Talent_V4_Visibility = .unspecified
    var _jobStartTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _jobEndTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _postingPublishTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _postingExpireTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _postingCreateTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _postingUpdateTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _companyDisplayName: String = String()
    var _derivedInfo: Google_Cloud_Talent_V4_Job.DerivedInfo? = nil
    var _processingOptions: Google_Cloud_Talent_V4_Job.ProcessingOptions? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _name = source._name
      _company = source._company
      _requisitionID = source._requisitionID
      _title = source._title
      _description_p = source._description_p
      _addresses = source._addresses
      _applicationInfo = source._applicationInfo
      _jobBenefits = source._jobBenefits
      _compensationInfo = source._compensationInfo
      _customAttributes = source._customAttributes
      _degreeTypes = source._degreeTypes
      _department = source._department
      _employmentTypes = source._employmentTypes
      _incentives = source._incentives
      _languageCode = source._languageCode
      _jobLevel = source._jobLevel
      _promotionValue = source._promotionValue
      _qualifications = source._qualifications
      _responsibilities = source._responsibilities
      _postingRegion = source._postingRegion
      _visibility = source._visibility
      _jobStartTime = source._jobStartTime
      _jobEndTime = source._jobEndTime
      _postingPublishTime = source._postingPublishTime
      _postingExpireTime = source._postingExpireTime
      _postingCreateTime = source._postingCreateTime
      _postingUpdateTime = source._postingUpdateTime
      _companyDisplayName = source._companyDisplayName
      _derivedInfo = source._derivedInfo
      _processingOptions = source._processingOptions
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularStringField(value: &_storage._name) }()
        case 2: try { try decoder.decodeSingularStringField(value: &_storage._company) }()
        case 3: try { try decoder.decodeSingularStringField(value: &_storage._requisitionID) }()
        case 4: try { try decoder.decodeSingularStringField(value: &_storage._title) }()
        case 5: try { try decoder.decodeSingularStringField(value: &_storage._description_p) }()
        case 6: try { try decoder.decodeRepeatedStringField(value: &_storage._addresses) }()
        case 7: try { try decoder.decodeSingularMessageField(value: &_storage._applicationInfo) }()
        case 8: try { try decoder.decodeRepeatedEnumField(value: &_storage._jobBenefits) }()
        case 9: try { try decoder.decodeSingularMessageField(value: &_storage._compensationInfo) }()
        case 10: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Google_Cloud_Talent_V4_CustomAttribute>.self, value: &_storage._customAttributes) }()
        case 11: try { try decoder.decodeRepeatedEnumField(value: &_storage._degreeTypes) }()
        case 12: try { try decoder.decodeSingularStringField(value: &_storage._department) }()
        case 13: try { try decoder.decodeRepeatedEnumField(value: &_storage._employmentTypes) }()
        case 14: try { try decoder.decodeSingularStringField(value: &_storage._incentives) }()
        case 15: try { try decoder.decodeSingularStringField(value: &_storage._languageCode) }()
        case 16: try { try decoder.decodeSingularEnumField(value: &_storage._jobLevel) }()
        case 17: try { try decoder.decodeSingularInt32Field(value: &_storage._promotionValue) }()
        case 18: try { try decoder.decodeSingularStringField(value: &_storage._qualifications) }()
        case 19: try { try decoder.decodeSingularStringField(value: &_storage._responsibilities) }()
        case 20: try { try decoder.decodeSingularEnumField(value: &_storage._postingRegion) }()
        case 21: try { try decoder.decodeSingularEnumField(value: &_storage._visibility) }()
        case 22: try { try decoder.decodeSingularMessageField(value: &_storage._jobStartTime) }()
        case 23: try { try decoder.decodeSingularMessageField(value: &_storage._jobEndTime) }()
        case 24: try { try decoder.decodeSingularMessageField(value: &_storage._postingPublishTime) }()
        case 25: try { try decoder.decodeSingularMessageField(value: &_storage._postingExpireTime) }()
        case 26: try { try decoder.decodeSingularMessageField(value: &_storage._postingCreateTime) }()
        case 27: try { try decoder.decodeSingularMessageField(value: &_storage._postingUpdateTime) }()
        case 28: try { try decoder.decodeSingularStringField(value: &_storage._companyDisplayName) }()
        case 29: try { try decoder.decodeSingularMessageField(value: &_storage._derivedInfo) }()
        case 30: try { try decoder.decodeSingularMessageField(value: &_storage._processingOptions) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._name.isEmpty {
        try visitor.visitSingularStringField(value: _storage._name, fieldNumber: 1)
      }
      if !_storage._company.isEmpty {
        try visitor.visitSingularStringField(value: _storage._company, fieldNumber: 2)
      }
      if !_storage._requisitionID.isEmpty {
        try visitor.visitSingularStringField(value: _storage._requisitionID, fieldNumber: 3)
      }
      if !_storage._title.isEmpty {
        try visitor.visitSingularStringField(value: _storage._title, fieldNumber: 4)
      }
      if !_storage._description_p.isEmpty {
        try visitor.visitSingularStringField(value: _storage._description_p, fieldNumber: 5)
      }
      if !_storage._addresses.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._addresses, fieldNumber: 6)
      }
      if let v = _storage._applicationInfo {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
      if !_storage._jobBenefits.isEmpty {
        try visitor.visitPackedEnumField(value: _storage._jobBenefits, fieldNumber: 8)
      }
      if let v = _storage._compensationInfo {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if !_storage._customAttributes.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Google_Cloud_Talent_V4_CustomAttribute>.self, value: _storage._customAttributes, fieldNumber: 10)
      }
      if !_storage._degreeTypes.isEmpty {
        try visitor.visitPackedEnumField(value: _storage._degreeTypes, fieldNumber: 11)
      }
      if !_storage._department.isEmpty {
        try visitor.visitSingularStringField(value: _storage._department, fieldNumber: 12)
      }
      if !_storage._employmentTypes.isEmpty {
        try visitor.visitPackedEnumField(value: _storage._employmentTypes, fieldNumber: 13)
      }
      if !_storage._incentives.isEmpty {
        try visitor.visitSingularStringField(value: _storage._incentives, fieldNumber: 14)
      }
      if !_storage._languageCode.isEmpty {
        try visitor.visitSingularStringField(value: _storage._languageCode, fieldNumber: 15)
      }
      if _storage._jobLevel != .unspecified {
        try visitor.visitSingularEnumField(value: _storage._jobLevel, fieldNumber: 16)
      }
      if _storage._promotionValue != 0 {
        try visitor.visitSingularInt32Field(value: _storage._promotionValue, fieldNumber: 17)
      }
      if !_storage._qualifications.isEmpty {
        try visitor.visitSingularStringField(value: _storage._qualifications, fieldNumber: 18)
      }
      if !_storage._responsibilities.isEmpty {
        try visitor.visitSingularStringField(value: _storage._responsibilities, fieldNumber: 19)
      }
      if _storage._postingRegion != .unspecified {
        try visitor.visitSingularEnumField(value: _storage._postingRegion, fieldNumber: 20)
      }
      if _storage._visibility != .unspecified {
        try visitor.visitSingularEnumField(value: _storage._visibility, fieldNumber: 21)
      }
      if let v = _storage._jobStartTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 22)
      }
      if let v = _storage._jobEndTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 23)
      }
      if let v = _storage._postingPublishTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 24)
      }
      if let v = _storage._postingExpireTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 25)
      }
      if let v = _storage._postingCreateTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 26)
      }
      if let v = _storage._postingUpdateTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 27)
      }
      if !_storage._companyDisplayName.isEmpty {
        try visitor.visitSingularStringField(value: _storage._companyDisplayName, fieldNumber: 28)
      }
      if let v = _storage._derivedInfo {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 29)
      }
      if let v = _storage._processingOptions {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 30)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Talent_V4_Job, rhs: Google_Cloud_Talent_V4_Job) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._name != rhs_storage._name {return false}
        if _storage._company != rhs_storage._company {return false}
        if _storage._requisitionID != rhs_storage._requisitionID {return false}
        if _storage._title != rhs_storage._title {return false}
        if _storage._description_p != rhs_storage._description_p {return false}
        if _storage._addresses != rhs_storage._addresses {return false}
        if _storage._applicationInfo != rhs_storage._applicationInfo {return false}
        if _storage._jobBenefits != rhs_storage._jobBenefits {return false}
        if _storage._compensationInfo != rhs_storage._compensationInfo {return false}
        if _storage._customAttributes != rhs_storage._customAttributes {return false}
        if _storage._degreeTypes != rhs_storage._degreeTypes {return false}
        if _storage._department != rhs_storage._department {return false}
        if _storage._employmentTypes != rhs_storage._employmentTypes {return false}
        if _storage._incentives != rhs_storage._incentives {return false}
        if _storage._languageCode != rhs_storage._languageCode {return false}
        if _storage._jobLevel != rhs_storage._jobLevel {return false}
        if _storage._promotionValue != rhs_storage._promotionValue {return false}
        if _storage._qualifications != rhs_storage._qualifications {return false}
        if _storage._responsibilities != rhs_storage._responsibilities {return false}
        if _storage._postingRegion != rhs_storage._postingRegion {return false}
        if _storage._visibility != rhs_storage._visibility {return false}
        if _storage._jobStartTime != rhs_storage._jobStartTime {return false}
        if _storage._jobEndTime != rhs_storage._jobEndTime {return false}
        if _storage._postingPublishTime != rhs_storage._postingPublishTime {return false}
        if _storage._postingExpireTime != rhs_storage._postingExpireTime {return false}
        if _storage._postingCreateTime != rhs_storage._postingCreateTime {return false}
        if _storage._postingUpdateTime != rhs_storage._postingUpdateTime {return false}
        if _storage._companyDisplayName != rhs_storage._companyDisplayName {return false}
        if _storage._derivedInfo != rhs_storage._derivedInfo {return false}
        if _storage._processingOptions != rhs_storage._processingOptions {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Talent_V4_Job.ApplicationInfo: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Talent_V4_Job.protoMessageName + ".ApplicationInfo"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "emails"),
    2: .same(proto: "instruction"),
    3: .same(proto: "uris"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedStringField(value: &self.emails) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.instruction) }()
      case 3: try { try decoder.decodeRepeatedStringField(value: &self.uris) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.emails.isEmpty {
      try visitor.visitRepeatedStringField(value: self.emails, fieldNumber: 1)
    }
    if !self.instruction.isEmpty {
      try visitor.visitSingularStringField(value: self.instruction, fieldNumber: 2)
    }
    if !self.uris.isEmpty {
      try visitor.visitRepeatedStringField(value: self.uris, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Talent_V4_Job.ApplicationInfo, rhs: Google_Cloud_Talent_V4_Job.ApplicationInfo) -> Bool {
    if lhs.emails != rhs.emails {return false}
    if lhs.instruction != rhs.instruction {return false}
    if lhs.uris != rhs.uris {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Talent_V4_Job.DerivedInfo: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Talent_V4_Job.protoMessageName + ".DerivedInfo"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "locations"),
    3: .standard(proto: "job_categories"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedMessageField(value: &self.locations) }()
      case 3: try { try decoder.decodeRepeatedEnumField(value: &self.jobCategories) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.locations.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.locations, fieldNumber: 1)
    }
    if !self.jobCategories.isEmpty {
      try visitor.visitPackedEnumField(value: self.jobCategories, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Talent_V4_Job.DerivedInfo, rhs: Google_Cloud_Talent_V4_Job.DerivedInfo) -> Bool {
    if lhs.locations != rhs.locations {return false}
    if lhs.jobCategories != rhs.jobCategories {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Talent_V4_Job.ProcessingOptions: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Talent_V4_Job.protoMessageName + ".ProcessingOptions"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "disable_street_address_resolution"),
    2: .standard(proto: "html_sanitization"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularBoolField(value: &self.disableStreetAddressResolution) }()
      case 2: try { try decoder.decodeSingularEnumField(value: &self.htmlSanitization) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.disableStreetAddressResolution != false {
      try visitor.visitSingularBoolField(value: self.disableStreetAddressResolution, fieldNumber: 1)
    }
    if self.htmlSanitization != .unspecified {
      try visitor.visitSingularEnumField(value: self.htmlSanitization, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Talent_V4_Job.ProcessingOptions, rhs: Google_Cloud_Talent_V4_Job.ProcessingOptions) -> Bool {
    if lhs.disableStreetAddressResolution != rhs.disableStreetAddressResolution {return false}
    if lhs.htmlSanitization != rhs.htmlSanitization {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
