// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/securitycenter/settings/v1beta1/component_settings.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Valid states for a component
public enum Google_Cloud_Securitycenter_Settings_V1beta1_ComponentEnablementState: SwiftProtobuf.Enum {
  public typealias RawValue = Int

  /// No state specified, equivalent of INHERIT
  case unspecified // = 0

  /// Disable the component
  case disable // = 1

  /// Enable the component
  case enable // = 2

  /// Inherit the state from resources parent folder or organization.
  case inherit // = 3
  case UNRECOGNIZED(Int)

  public init() {
    self = .unspecified
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unspecified
    case 1: self = .disable
    case 2: self = .enable
    case 3: self = .inherit
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unspecified: return 0
    case .disable: return 1
    case .enable: return 2
    case .inherit: return 3
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Google_Cloud_Securitycenter_Settings_V1beta1_ComponentEnablementState: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Google_Cloud_Securitycenter_Settings_V1beta1_ComponentEnablementState] = [
    .unspecified,
    .disable,
    .enable,
    .inherit,
  ]
}

#endif  // swift(>=4.2)

/// Component Settings for Security Command Center
public struct Google_Cloud_Securitycenter_Settings_V1beta1_ComponentSettings {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// The relative resource name of the component settings.
  /// Formats:
  ///  * `organizations/{organization}/components/{component}/settings`
  ///  * `folders/{folder}/components/{component}/settings`
  ///  * `projects/{project}/components/{component}/settings`
  ///  * `projects/{project}/locations/{location}/clusters/{cluster}/components/{component}/settings`
  ///  * `projects/{project}/regions/{region}/clusters/{cluster}/components/{component}/settings`
  ///  * `projects/{project}/zones/{zone}/clusters/{cluster}/components/{component}/settings`
  public var name: String = String()

  /// ENABLE to enable component, DISABLE to disable and INHERIT to inherit
  /// setting from ancestors.
  public var state: Google_Cloud_Securitycenter_Settings_V1beta1_ComponentEnablementState = .unspecified

  /// Output only. The service account to be used for security center component.
  /// The component must have permission to "act as" the service account.
  public var projectServiceAccount: String = String()

  /// Settings for detectors.  Not all detectors must have settings present at
  /// each and every level in the hierarchy.  If it is not present the setting
  /// will be inherited from its ancestors folders, organizations or the
  /// defaults.
  public var detectorSettings: Dictionary<String,Google_Cloud_Securitycenter_Settings_V1beta1_ComponentSettings.DetectorSettings> = [:]

  /// Output only. An fingerprint used for optimistic concurrency. If none is provided
  /// on updates then the existing metadata will be blindly overwritten.
  public var etag: String = String()

  /// Output only. The time these settings were last updated.
  public var updateTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _updateTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_updateTime = newValue}
  }
  /// Returns true if `updateTime` has been explicitly set.
  public var hasUpdateTime: Bool {return self._updateTime != nil}
  /// Clears the value of `updateTime`. Subsequent reads from it will return its default value.
  public mutating func clearUpdateTime() {self._updateTime = nil}

  /// Component specific settings.  This must match the component value.
  public var specificSettings: Google_Cloud_Securitycenter_Settings_V1beta1_ComponentSettings.OneOf_SpecificSettings? = nil

  /// Container Threate Detection specific settings
  /// For component, expect CONTAINER_THREAT_DETECTION
  public var containerThreatDetectionSettings: Google_Cloud_Securitycenter_Settings_V1beta1_ContainerThreatDetectionSettings {
    get {
      if case .containerThreatDetectionSettings(let v)? = specificSettings {return v}
      return Google_Cloud_Securitycenter_Settings_V1beta1_ContainerThreatDetectionSettings()
    }
    set {specificSettings = .containerThreatDetectionSettings(newValue)}
  }

  /// Event Threat Detection specific settings
  /// For component, expect EVENT_THREAT_DETECTION
  public var eventThreatDetectionSettings: Google_Cloud_Securitycenter_Settings_V1beta1_EventThreatDetectionSettings {
    get {
      if case .eventThreatDetectionSettings(let v)? = specificSettings {return v}
      return Google_Cloud_Securitycenter_Settings_V1beta1_EventThreatDetectionSettings()
    }
    set {specificSettings = .eventThreatDetectionSettings(newValue)}
  }

  /// Security Health Analytics specific settings
  /// For component, expect SECURITY_HEALTH_ANALYTICS
  public var securityHealthAnalyticsSettings: Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings {
    get {
      if case .securityHealthAnalyticsSettings(let v)? = specificSettings {return v}
      return Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings()
    }
    set {specificSettings = .securityHealthAnalyticsSettings(newValue)}
  }

  /// Web Security Scanner specific settings
  /// For component, expect WEB_SECURITY_SCANNER
  public var webSecurityScannerSettings: Google_Cloud_Securitycenter_Settings_V1beta1_WebSecurityScanner {
    get {
      if case .webSecurityScannerSettings(let v)? = specificSettings {return v}
      return Google_Cloud_Securitycenter_Settings_V1beta1_WebSecurityScanner()
    }
    set {specificSettings = .webSecurityScannerSettings(newValue)}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// Component specific settings.  This must match the component value.
  public enum OneOf_SpecificSettings: Equatable {
    /// Container Threate Detection specific settings
    /// For component, expect CONTAINER_THREAT_DETECTION
    case containerThreatDetectionSettings(Google_Cloud_Securitycenter_Settings_V1beta1_ContainerThreatDetectionSettings)
    /// Event Threat Detection specific settings
    /// For component, expect EVENT_THREAT_DETECTION
    case eventThreatDetectionSettings(Google_Cloud_Securitycenter_Settings_V1beta1_EventThreatDetectionSettings)
    /// Security Health Analytics specific settings
    /// For component, expect SECURITY_HEALTH_ANALYTICS
    case securityHealthAnalyticsSettings(Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings)
    /// Web Security Scanner specific settings
    /// For component, expect WEB_SECURITY_SCANNER
    case webSecurityScannerSettings(Google_Cloud_Securitycenter_Settings_V1beta1_WebSecurityScanner)

  #if !swift(>=4.1)
    public static func ==(lhs: Google_Cloud_Securitycenter_Settings_V1beta1_ComponentSettings.OneOf_SpecificSettings, rhs: Google_Cloud_Securitycenter_Settings_V1beta1_ComponentSettings.OneOf_SpecificSettings) -> Bool {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch (lhs, rhs) {
      case (.containerThreatDetectionSettings, .containerThreatDetectionSettings): return {
        guard case .containerThreatDetectionSettings(let l) = lhs, case .containerThreatDetectionSettings(let r) = rhs else { preconditionFailure() }
        return l == r
      }()
      case (.eventThreatDetectionSettings, .eventThreatDetectionSettings): return {
        guard case .eventThreatDetectionSettings(let l) = lhs, case .eventThreatDetectionSettings(let r) = rhs else { preconditionFailure() }
        return l == r
      }()
      case (.securityHealthAnalyticsSettings, .securityHealthAnalyticsSettings): return {
        guard case .securityHealthAnalyticsSettings(let l) = lhs, case .securityHealthAnalyticsSettings(let r) = rhs else { preconditionFailure() }
        return l == r
      }()
      case (.webSecurityScannerSettings, .webSecurityScannerSettings): return {
        guard case .webSecurityScannerSettings(let l) = lhs, case .webSecurityScannerSettings(let r) = rhs else { preconditionFailure() }
        return l == r
      }()
      default: return false
      }
    }
  #endif
  }

  /// Settings for each detector.
  public struct DetectorSettings {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// ENABLE to enable component, DISABLE to disable and INHERIT to inherit
    /// setting from ancestors.
    public var state: Google_Cloud_Securitycenter_Settings_V1beta1_ComponentEnablementState = .unspecified

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}

  fileprivate var _updateTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
}

/// User specified settings for Web Security Scanner
public struct Google_Cloud_Securitycenter_Settings_V1beta1_WebSecurityScanner {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

/// User specified settings for KTD
public struct Google_Cloud_Securitycenter_Settings_V1beta1_ContainerThreatDetectionSettings {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

/// User specified settings for ETD
public struct Google_Cloud_Securitycenter_Settings_V1beta1_EventThreatDetectionSettings {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

/// User specified settings for Security Health Analytics
public struct Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Settings for "NON_ORG_IAM_MEMBER" scanner.
  public var nonOrgIamMemberSettings: Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings.NonOrgIamMemberSettings {
    get {return _nonOrgIamMemberSettings ?? Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings.NonOrgIamMemberSettings()}
    set {_nonOrgIamMemberSettings = newValue}
  }
  /// Returns true if `nonOrgIamMemberSettings` has been explicitly set.
  public var hasNonOrgIamMemberSettings: Bool {return self._nonOrgIamMemberSettings != nil}
  /// Clears the value of `nonOrgIamMemberSettings`. Subsequent reads from it will return its default value.
  public mutating func clearNonOrgIamMemberSettings() {self._nonOrgIamMemberSettings = nil}

  /// Settings for "ADMIN_SERVICE_ACCOUNT" scanner.
  public var adminServiceAccountSettings: Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings.AdminServiceAccountSettings {
    get {return _adminServiceAccountSettings ?? Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings.AdminServiceAccountSettings()}
    set {_adminServiceAccountSettings = newValue}
  }
  /// Returns true if `adminServiceAccountSettings` has been explicitly set.
  public var hasAdminServiceAccountSettings: Bool {return self._adminServiceAccountSettings != nil}
  /// Clears the value of `adminServiceAccountSettings`. Subsequent reads from it will return its default value.
  public mutating func clearAdminServiceAccountSettings() {self._adminServiceAccountSettings = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// Settings for "NON_ORG_IAM_MEMBER" scanner.
  public struct NonOrgIamMemberSettings {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// User emails ending in the provided identities are allowed to have IAM
    /// permissions on a project or the organization. Otherwise a finding will
    /// be created.
    /// A valid identity can be:
    ///   *  a domain that starts with "@", e.g. "@yourdomain.com".
    ///   *  a fully specified email address that does not start with "@", e.g.
    ///   "abc@gmail.com"
    /// Regular expressions are not supported.
    /// Service accounts are not examined by the scanner and will be omitted if
    /// added to the list.
    /// If not specified, only Gmail accounts will be considered as non-approved.
    public var approvedIdentities: [String] = []

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  /// Settings for "ADMIN_SERVICE_ACCOUNT" scanner.
  public struct AdminServiceAccountSettings {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// User-created service accounts ending in the provided identities are
    /// allowed to have Admin, Owner or Editor roles granted to them. Otherwise
    /// a finding will be created.
    /// A valid identity can be:
    ///   *  a partilly specified service account that starts with "@", e.g.
    ///   "@myproject.iam.gserviceaccount.com". This approves all the service
    ///   accounts suffixed with the specified identity.
    ///   *  a fully specified service account that does not start with "@", e.g.
    ///   "myadmin@myproject.iam.gserviceaccount.com".
    /// Google-created service accounts are all approved.
    public var approvedIdentities: [String] = []

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}
  }

  public init() {}

  fileprivate var _nonOrgIamMemberSettings: Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings.NonOrgIamMemberSettings? = nil
  fileprivate var _adminServiceAccountSettings: Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings.AdminServiceAccountSettings? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.securitycenter.settings.v1beta1"

extension Google_Cloud_Securitycenter_Settings_V1beta1_ComponentEnablementState: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "COMPONENT_ENABLEMENT_STATE_UNSPECIFIED"),
    1: .same(proto: "DISABLE"),
    2: .same(proto: "ENABLE"),
    3: .same(proto: "INHERIT"),
  ]
}

extension Google_Cloud_Securitycenter_Settings_V1beta1_ComponentSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ComponentSettings"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .same(proto: "state"),
    3: .standard(proto: "project_service_account"),
    4: .standard(proto: "detector_settings"),
    5: .same(proto: "etag"),
    6: .standard(proto: "update_time"),
    41: .standard(proto: "container_threat_detection_settings"),
    42: .standard(proto: "event_threat_detection_settings"),
    44: .standard(proto: "security_health_analytics_settings"),
    40: .standard(proto: "web_security_scanner_settings"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.name) }()
      case 2: try { try decoder.decodeSingularEnumField(value: &self.state) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.projectServiceAccount) }()
      case 4: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Google_Cloud_Securitycenter_Settings_V1beta1_ComponentSettings.DetectorSettings>.self, value: &self.detectorSettings) }()
      case 5: try { try decoder.decodeSingularStringField(value: &self.etag) }()
      case 6: try { try decoder.decodeSingularMessageField(value: &self._updateTime) }()
      case 40: try {
        var v: Google_Cloud_Securitycenter_Settings_V1beta1_WebSecurityScanner?
        if let current = self.specificSettings {
          try decoder.handleConflictingOneOf()
          if case .webSecurityScannerSettings(let m) = current {v = m}
        }
        try decoder.decodeSingularMessageField(value: &v)
        if let v = v {self.specificSettings = .webSecurityScannerSettings(v)}
      }()
      case 41: try {
        var v: Google_Cloud_Securitycenter_Settings_V1beta1_ContainerThreatDetectionSettings?
        if let current = self.specificSettings {
          try decoder.handleConflictingOneOf()
          if case .containerThreatDetectionSettings(let m) = current {v = m}
        }
        try decoder.decodeSingularMessageField(value: &v)
        if let v = v {self.specificSettings = .containerThreatDetectionSettings(v)}
      }()
      case 42: try {
        var v: Google_Cloud_Securitycenter_Settings_V1beta1_EventThreatDetectionSettings?
        if let current = self.specificSettings {
          try decoder.handleConflictingOneOf()
          if case .eventThreatDetectionSettings(let m) = current {v = m}
        }
        try decoder.decodeSingularMessageField(value: &v)
        if let v = v {self.specificSettings = .eventThreatDetectionSettings(v)}
      }()
      case 44: try {
        var v: Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings?
        if let current = self.specificSettings {
          try decoder.handleConflictingOneOf()
          if case .securityHealthAnalyticsSettings(let m) = current {v = m}
        }
        try decoder.decodeSingularMessageField(value: &v)
        if let v = v {self.specificSettings = .securityHealthAnalyticsSettings(v)}
      }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.name.isEmpty {
      try visitor.visitSingularStringField(value: self.name, fieldNumber: 1)
    }
    if self.state != .unspecified {
      try visitor.visitSingularEnumField(value: self.state, fieldNumber: 2)
    }
    if !self.projectServiceAccount.isEmpty {
      try visitor.visitSingularStringField(value: self.projectServiceAccount, fieldNumber: 3)
    }
    if !self.detectorSettings.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Google_Cloud_Securitycenter_Settings_V1beta1_ComponentSettings.DetectorSettings>.self, value: self.detectorSettings, fieldNumber: 4)
    }
    if !self.etag.isEmpty {
      try visitor.visitSingularStringField(value: self.etag, fieldNumber: 5)
    }
    if let v = self._updateTime {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
    }
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every case branch when no optimizations are
    // enabled. https://github.com/apple/swift-protobuf/issues/1034
    switch self.specificSettings {
    case .webSecurityScannerSettings?: try {
      guard case .webSecurityScannerSettings(let v)? = self.specificSettings else { preconditionFailure() }
      try visitor.visitSingularMessageField(value: v, fieldNumber: 40)
    }()
    case .containerThreatDetectionSettings?: try {
      guard case .containerThreatDetectionSettings(let v)? = self.specificSettings else { preconditionFailure() }
      try visitor.visitSingularMessageField(value: v, fieldNumber: 41)
    }()
    case .eventThreatDetectionSettings?: try {
      guard case .eventThreatDetectionSettings(let v)? = self.specificSettings else { preconditionFailure() }
      try visitor.visitSingularMessageField(value: v, fieldNumber: 42)
    }()
    case .securityHealthAnalyticsSettings?: try {
      guard case .securityHealthAnalyticsSettings(let v)? = self.specificSettings else { preconditionFailure() }
      try visitor.visitSingularMessageField(value: v, fieldNumber: 44)
    }()
    case nil: break
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Securitycenter_Settings_V1beta1_ComponentSettings, rhs: Google_Cloud_Securitycenter_Settings_V1beta1_ComponentSettings) -> Bool {
    if lhs.name != rhs.name {return false}
    if lhs.state != rhs.state {return false}
    if lhs.projectServiceAccount != rhs.projectServiceAccount {return false}
    if lhs.detectorSettings != rhs.detectorSettings {return false}
    if lhs.etag != rhs.etag {return false}
    if lhs._updateTime != rhs._updateTime {return false}
    if lhs.specificSettings != rhs.specificSettings {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Securitycenter_Settings_V1beta1_ComponentSettings.DetectorSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Securitycenter_Settings_V1beta1_ComponentSettings.protoMessageName + ".DetectorSettings"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "state"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularEnumField(value: &self.state) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.state != .unspecified {
      try visitor.visitSingularEnumField(value: self.state, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Securitycenter_Settings_V1beta1_ComponentSettings.DetectorSettings, rhs: Google_Cloud_Securitycenter_Settings_V1beta1_ComponentSettings.DetectorSettings) -> Bool {
    if lhs.state != rhs.state {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Securitycenter_Settings_V1beta1_WebSecurityScanner: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".WebSecurityScanner"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Securitycenter_Settings_V1beta1_WebSecurityScanner, rhs: Google_Cloud_Securitycenter_Settings_V1beta1_WebSecurityScanner) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Securitycenter_Settings_V1beta1_ContainerThreatDetectionSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ContainerThreatDetectionSettings"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Securitycenter_Settings_V1beta1_ContainerThreatDetectionSettings, rhs: Google_Cloud_Securitycenter_Settings_V1beta1_ContainerThreatDetectionSettings) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Securitycenter_Settings_V1beta1_EventThreatDetectionSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".EventThreatDetectionSettings"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Securitycenter_Settings_V1beta1_EventThreatDetectionSettings, rhs: Google_Cloud_Securitycenter_Settings_V1beta1_EventThreatDetectionSettings) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".SecurityHealthAnalyticsSettings"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "non_org_iam_member_settings"),
    2: .standard(proto: "admin_service_account_settings"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._nonOrgIamMemberSettings) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._adminServiceAccountSettings) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._nonOrgIamMemberSettings {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._adminServiceAccountSettings {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings, rhs: Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings) -> Bool {
    if lhs._nonOrgIamMemberSettings != rhs._nonOrgIamMemberSettings {return false}
    if lhs._adminServiceAccountSettings != rhs._adminServiceAccountSettings {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings.NonOrgIamMemberSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings.protoMessageName + ".NonOrgIamMemberSettings"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "approved_identities"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedStringField(value: &self.approvedIdentities) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.approvedIdentities.isEmpty {
      try visitor.visitRepeatedStringField(value: self.approvedIdentities, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings.NonOrgIamMemberSettings, rhs: Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings.NonOrgIamMemberSettings) -> Bool {
    if lhs.approvedIdentities != rhs.approvedIdentities {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings.AdminServiceAccountSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings.protoMessageName + ".AdminServiceAccountSettings"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "approved_identities"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedStringField(value: &self.approvedIdentities) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.approvedIdentities.isEmpty {
      try visitor.visitRepeatedStringField(value: self.approvedIdentities, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings.AdminServiceAccountSettings, rhs: Google_Cloud_Securitycenter_Settings_V1beta1_SecurityHealthAnalyticsSettings.AdminServiceAccountSettings) -> Bool {
    if lhs.approvedIdentities != rhs.approvedIdentities {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
