// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/securitycenter/v1p1beta1/organization_settings.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// User specified settings that are attached to the Security Command
/// Center organization.
public struct Google_Cloud_Securitycenter_V1p1beta1_OrganizationSettings {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// The relative resource name of the settings. See:
  /// https://cloud.google.com/apis/design/resource_names#relative_resource_name
  /// Example:
  /// "organizations/{organization_id}/organizationSettings".
  public var name: String = String()

  /// A flag that indicates if Asset Discovery should be enabled. If the flag is
  /// set to `true`, then discovery of assets will occur. If it is set to `false,
  /// all historical assets will remain, but discovery of future assets will not
  /// occur.
  public var enableAssetDiscovery: Bool = false

  /// The configuration used for Asset Discovery runs.
  public var assetDiscoveryConfig: Google_Cloud_Securitycenter_V1p1beta1_OrganizationSettings.AssetDiscoveryConfig {
    get {return _assetDiscoveryConfig ?? Google_Cloud_Securitycenter_V1p1beta1_OrganizationSettings.AssetDiscoveryConfig()}
    set {_assetDiscoveryConfig = newValue}
  }
  /// Returns true if `assetDiscoveryConfig` has been explicitly set.
  public var hasAssetDiscoveryConfig: Bool {return self._assetDiscoveryConfig != nil}
  /// Clears the value of `assetDiscoveryConfig`. Subsequent reads from it will return its default value.
  public mutating func clearAssetDiscoveryConfig() {self._assetDiscoveryConfig = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// The configuration used for Asset Discovery runs.
  public struct AssetDiscoveryConfig {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// The project ids to use for filtering asset discovery.
    public var projectIds: [String] = []

    /// The mode to use for filtering asset discovery.
    public var inclusionMode: Google_Cloud_Securitycenter_V1p1beta1_OrganizationSettings.AssetDiscoveryConfig.InclusionMode = .unspecified

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    /// The mode of inclusion when running Asset Discovery.
    /// Asset discovery can be limited by explicitly identifying projects to be
    /// included or excluded. If INCLUDE_ONLY is set, then only those projects
    /// within the organization and their children are discovered during asset
    /// discovery. If EXCLUDE is set, then projects that don't match those
    /// projects are discovered during asset discovery. If neither are set, then
    /// all projects within the organization are discovered during asset
    /// discovery.
    public enum InclusionMode: SwiftProtobuf.Enum {
      public typealias RawValue = Int

      /// Unspecified. Setting the mode with this value will disable
      /// inclusion/exclusion filtering for Asset Discovery.
      case unspecified // = 0

      /// Asset Discovery will capture only the resources within the projects
      /// specified. All other resources will be ignored.
      case includeOnly // = 1

      /// Asset Discovery will ignore all resources under the projects specified.
      /// All other resources will be retrieved.
      case exclude // = 2
      case UNRECOGNIZED(Int)

      public init() {
        self = .unspecified
      }

      public init?(rawValue: Int) {
        switch rawValue {
        case 0: self = .unspecified
        case 1: self = .includeOnly
        case 2: self = .exclude
        default: self = .UNRECOGNIZED(rawValue)
        }
      }

      public var rawValue: Int {
        switch self {
        case .unspecified: return 0
        case .includeOnly: return 1
        case .exclude: return 2
        case .UNRECOGNIZED(let i): return i
        }
      }

    }

    public init() {}
  }

  public init() {}

  fileprivate var _assetDiscoveryConfig: Google_Cloud_Securitycenter_V1p1beta1_OrganizationSettings.AssetDiscoveryConfig? = nil
}

#if swift(>=4.2)

extension Google_Cloud_Securitycenter_V1p1beta1_OrganizationSettings.AssetDiscoveryConfig.InclusionMode: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Google_Cloud_Securitycenter_V1p1beta1_OrganizationSettings.AssetDiscoveryConfig.InclusionMode] = [
    .unspecified,
    .includeOnly,
    .exclude,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.securitycenter.v1p1beta1"

extension Google_Cloud_Securitycenter_V1p1beta1_OrganizationSettings: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".OrganizationSettings"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .standard(proto: "enable_asset_discovery"),
    3: .standard(proto: "asset_discovery_config"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.name) }()
      case 2: try { try decoder.decodeSingularBoolField(value: &self.enableAssetDiscovery) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._assetDiscoveryConfig) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.name.isEmpty {
      try visitor.visitSingularStringField(value: self.name, fieldNumber: 1)
    }
    if self.enableAssetDiscovery != false {
      try visitor.visitSingularBoolField(value: self.enableAssetDiscovery, fieldNumber: 2)
    }
    if let v = self._assetDiscoveryConfig {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Securitycenter_V1p1beta1_OrganizationSettings, rhs: Google_Cloud_Securitycenter_V1p1beta1_OrganizationSettings) -> Bool {
    if lhs.name != rhs.name {return false}
    if lhs.enableAssetDiscovery != rhs.enableAssetDiscovery {return false}
    if lhs._assetDiscoveryConfig != rhs._assetDiscoveryConfig {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Securitycenter_V1p1beta1_OrganizationSettings.AssetDiscoveryConfig: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Securitycenter_V1p1beta1_OrganizationSettings.protoMessageName + ".AssetDiscoveryConfig"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "project_ids"),
    2: .standard(proto: "inclusion_mode"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedStringField(value: &self.projectIds) }()
      case 2: try { try decoder.decodeSingularEnumField(value: &self.inclusionMode) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.projectIds.isEmpty {
      try visitor.visitRepeatedStringField(value: self.projectIds, fieldNumber: 1)
    }
    if self.inclusionMode != .unspecified {
      try visitor.visitSingularEnumField(value: self.inclusionMode, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Securitycenter_V1p1beta1_OrganizationSettings.AssetDiscoveryConfig, rhs: Google_Cloud_Securitycenter_V1p1beta1_OrganizationSettings.AssetDiscoveryConfig) -> Bool {
    if lhs.projectIds != rhs.projectIds {return false}
    if lhs.inclusionMode != rhs.inclusionMode {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Securitycenter_V1p1beta1_OrganizationSettings.AssetDiscoveryConfig.InclusionMode: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "INCLUSION_MODE_UNSPECIFIED"),
    1: .same(proto: "INCLUDE_ONLY"),
    2: .same(proto: "EXCLUDE"),
  ]
}
