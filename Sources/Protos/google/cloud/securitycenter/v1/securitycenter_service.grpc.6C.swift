//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/securitycenter/v1/securitycenter_service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Securitycenter_V1_SecurityCenterClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Securitycenter_V1_SecurityCenterClientProtocol: GRPCClient {
  func createSource(
    _ request: Google_Cloud_Securitycenter_V1_CreateSourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_CreateSourceRequest, Google_Cloud_Securitycenter_V1_Source>

  func createFinding(
    _ request: Google_Cloud_Securitycenter_V1_CreateFindingRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_CreateFindingRequest, Google_Cloud_Securitycenter_V1_Finding>

  func createNotificationConfig(
    _ request: Google_Cloud_Securitycenter_V1_CreateNotificationConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_CreateNotificationConfigRequest, Google_Cloud_Securitycenter_V1_NotificationConfig>

  func deleteNotificationConfig(
    _ request: Google_Cloud_Securitycenter_V1_DeleteNotificationConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_DeleteNotificationConfigRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getIamPolicy(
    _ request: Google_Iam_V1_GetIamPolicyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Iam_V1_GetIamPolicyRequest, Google_Iam_V1_Policy>

  func getNotificationConfig(
    _ request: Google_Cloud_Securitycenter_V1_GetNotificationConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_GetNotificationConfigRequest, Google_Cloud_Securitycenter_V1_NotificationConfig>

  func getOrganizationSettings(
    _ request: Google_Cloud_Securitycenter_V1_GetOrganizationSettingsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_GetOrganizationSettingsRequest, Google_Cloud_Securitycenter_V1_OrganizationSettings>

  func getSource(
    _ request: Google_Cloud_Securitycenter_V1_GetSourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_GetSourceRequest, Google_Cloud_Securitycenter_V1_Source>

  func groupAssets(
    _ request: Google_Cloud_Securitycenter_V1_GroupAssetsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_GroupAssetsRequest, Google_Cloud_Securitycenter_V1_GroupAssetsResponse>

  func groupFindings(
    _ request: Google_Cloud_Securitycenter_V1_GroupFindingsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_GroupFindingsRequest, Google_Cloud_Securitycenter_V1_GroupFindingsResponse>

  func listAssets(
    _ request: Google_Cloud_Securitycenter_V1_ListAssetsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_ListAssetsRequest, Google_Cloud_Securitycenter_V1_ListAssetsResponse>

  func listFindings(
    _ request: Google_Cloud_Securitycenter_V1_ListFindingsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_ListFindingsRequest, Google_Cloud_Securitycenter_V1_ListFindingsResponse>

  func listNotificationConfigs(
    _ request: Google_Cloud_Securitycenter_V1_ListNotificationConfigsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_ListNotificationConfigsRequest, Google_Cloud_Securitycenter_V1_ListNotificationConfigsResponse>

  func listSources(
    _ request: Google_Cloud_Securitycenter_V1_ListSourcesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_ListSourcesRequest, Google_Cloud_Securitycenter_V1_ListSourcesResponse>

  func runAssetDiscovery(
    _ request: Google_Cloud_Securitycenter_V1_RunAssetDiscoveryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_RunAssetDiscoveryRequest, Google_Longrunning_Operation>

  func setFindingState(
    _ request: Google_Cloud_Securitycenter_V1_SetFindingStateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_SetFindingStateRequest, Google_Cloud_Securitycenter_V1_Finding>

  func setIamPolicy(
    _ request: Google_Iam_V1_SetIamPolicyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Iam_V1_SetIamPolicyRequest, Google_Iam_V1_Policy>

  func testIamPermissions(
    _ request: Google_Iam_V1_TestIamPermissionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Iam_V1_TestIamPermissionsRequest, Google_Iam_V1_TestIamPermissionsResponse>

  func updateFinding(
    _ request: Google_Cloud_Securitycenter_V1_UpdateFindingRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_UpdateFindingRequest, Google_Cloud_Securitycenter_V1_Finding>

  func updateNotificationConfig(
    _ request: Google_Cloud_Securitycenter_V1_UpdateNotificationConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_UpdateNotificationConfigRequest, Google_Cloud_Securitycenter_V1_NotificationConfig>

  func updateOrganizationSettings(
    _ request: Google_Cloud_Securitycenter_V1_UpdateOrganizationSettingsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_UpdateOrganizationSettingsRequest, Google_Cloud_Securitycenter_V1_OrganizationSettings>

  func updateSource(
    _ request: Google_Cloud_Securitycenter_V1_UpdateSourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_UpdateSourceRequest, Google_Cloud_Securitycenter_V1_Source>

  func updateSecurityMarks(
    _ request: Google_Cloud_Securitycenter_V1_UpdateSecurityMarksRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_UpdateSecurityMarksRequest, Google_Cloud_Securitycenter_V1_SecurityMarks>

}

extension Google_Cloud_Securitycenter_V1_SecurityCenterClientProtocol {

  /// Creates a source.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateSource.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createSource(
    _ request: Google_Cloud_Securitycenter_V1_CreateSourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_CreateSourceRequest, Google_Cloud_Securitycenter_V1_Source> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/CreateSource",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a finding. The corresponding source must exist for finding creation
  /// to succeed.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateFinding.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createFinding(
    _ request: Google_Cloud_Securitycenter_V1_CreateFindingRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_CreateFindingRequest, Google_Cloud_Securitycenter_V1_Finding> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/CreateFinding",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a notification config.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateNotificationConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createNotificationConfig(
    _ request: Google_Cloud_Securitycenter_V1_CreateNotificationConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_CreateNotificationConfigRequest, Google_Cloud_Securitycenter_V1_NotificationConfig> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/CreateNotificationConfig",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a notification config.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteNotificationConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteNotificationConfig(
    _ request: Google_Cloud_Securitycenter_V1_DeleteNotificationConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_DeleteNotificationConfigRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/DeleteNotificationConfig",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets the access control policy on the specified Source.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetIamPolicy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getIamPolicy(
    _ request: Google_Iam_V1_GetIamPolicyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Iam_V1_GetIamPolicyRequest, Google_Iam_V1_Policy> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/GetIamPolicy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a notification config.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetNotificationConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getNotificationConfig(
    _ request: Google_Cloud_Securitycenter_V1_GetNotificationConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_GetNotificationConfigRequest, Google_Cloud_Securitycenter_V1_NotificationConfig> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/GetNotificationConfig",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets the settings for an organization.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetOrganizationSettings.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getOrganizationSettings(
    _ request: Google_Cloud_Securitycenter_V1_GetOrganizationSettingsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_GetOrganizationSettingsRequest, Google_Cloud_Securitycenter_V1_OrganizationSettings> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/GetOrganizationSettings",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a source.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSource.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getSource(
    _ request: Google_Cloud_Securitycenter_V1_GetSourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_GetSourceRequest, Google_Cloud_Securitycenter_V1_Source> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/GetSource",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Filters an organization's assets and  groups them by their specified
  /// properties.
  ///
  /// - Parameters:
  ///   - request: Request to send to GroupAssets.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func groupAssets(
    _ request: Google_Cloud_Securitycenter_V1_GroupAssetsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_GroupAssetsRequest, Google_Cloud_Securitycenter_V1_GroupAssetsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/GroupAssets",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Filters an organization or source's findings and  groups them by their
  /// specified properties.
  ///
  /// To group across all sources provide a `-` as the source id.
  /// Example: /v1/organizations/{organization_id}/sources/-/findings
  ///
  /// - Parameters:
  ///   - request: Request to send to GroupFindings.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func groupFindings(
    _ request: Google_Cloud_Securitycenter_V1_GroupFindingsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_GroupFindingsRequest, Google_Cloud_Securitycenter_V1_GroupFindingsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/GroupFindings",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists an organization's assets.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListAssets.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listAssets(
    _ request: Google_Cloud_Securitycenter_V1_ListAssetsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_ListAssetsRequest, Google_Cloud_Securitycenter_V1_ListAssetsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/ListAssets",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists an organization or source's findings.
  ///
  /// To list across all sources provide a `-` as the source id.
  /// Example: /v1/organizations/{organization_id}/sources/-/findings
  ///
  /// - Parameters:
  ///   - request: Request to send to ListFindings.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listFindings(
    _ request: Google_Cloud_Securitycenter_V1_ListFindingsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_ListFindingsRequest, Google_Cloud_Securitycenter_V1_ListFindingsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/ListFindings",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists notification configs.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListNotificationConfigs.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listNotificationConfigs(
    _ request: Google_Cloud_Securitycenter_V1_ListNotificationConfigsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_ListNotificationConfigsRequest, Google_Cloud_Securitycenter_V1_ListNotificationConfigsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/ListNotificationConfigs",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists all sources belonging to an organization.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListSources.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listSources(
    _ request: Google_Cloud_Securitycenter_V1_ListSourcesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_ListSourcesRequest, Google_Cloud_Securitycenter_V1_ListSourcesResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/ListSources",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Runs asset discovery. The discovery is tracked with a long-running
  /// operation.
  ///
  /// This API can only be called with limited frequency for an organization. If
  /// it is called too frequently the caller will receive a TOO_MANY_REQUESTS
  /// error.
  ///
  /// - Parameters:
  ///   - request: Request to send to RunAssetDiscovery.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func runAssetDiscovery(
    _ request: Google_Cloud_Securitycenter_V1_RunAssetDiscoveryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_RunAssetDiscoveryRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/RunAssetDiscovery",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates the state of a finding.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetFindingState.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setFindingState(
    _ request: Google_Cloud_Securitycenter_V1_SetFindingStateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_SetFindingStateRequest, Google_Cloud_Securitycenter_V1_Finding> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/SetFindingState",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Sets the access control policy on the specified Source.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetIamPolicy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setIamPolicy(
    _ request: Google_Iam_V1_SetIamPolicyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Iam_V1_SetIamPolicyRequest, Google_Iam_V1_Policy> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/SetIamPolicy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns the permissions that a caller has on the specified source.
  ///
  /// - Parameters:
  ///   - request: Request to send to TestIamPermissions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func testIamPermissions(
    _ request: Google_Iam_V1_TestIamPermissionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Iam_V1_TestIamPermissionsRequest, Google_Iam_V1_TestIamPermissionsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/TestIamPermissions",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates or updates a finding. The corresponding source must exist for a
  /// finding creation to succeed.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateFinding.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateFinding(
    _ request: Google_Cloud_Securitycenter_V1_UpdateFindingRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_UpdateFindingRequest, Google_Cloud_Securitycenter_V1_Finding> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/UpdateFinding",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates a notification config. The following update
  /// fields are allowed: description, pubsub_topic, streaming_config.filter
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateNotificationConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateNotificationConfig(
    _ request: Google_Cloud_Securitycenter_V1_UpdateNotificationConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_UpdateNotificationConfigRequest, Google_Cloud_Securitycenter_V1_NotificationConfig> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/UpdateNotificationConfig",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates an organization's settings.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateOrganizationSettings.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateOrganizationSettings(
    _ request: Google_Cloud_Securitycenter_V1_UpdateOrganizationSettingsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_UpdateOrganizationSettingsRequest, Google_Cloud_Securitycenter_V1_OrganizationSettings> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/UpdateOrganizationSettings",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates a source.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateSource.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateSource(
    _ request: Google_Cloud_Securitycenter_V1_UpdateSourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_UpdateSourceRequest, Google_Cloud_Securitycenter_V1_Source> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/UpdateSource",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates security marks.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateSecurityMarks.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateSecurityMarks(
    _ request: Google_Cloud_Securitycenter_V1_UpdateSecurityMarksRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Securitycenter_V1_UpdateSecurityMarksRequest, Google_Cloud_Securitycenter_V1_SecurityMarks> {
    return self.makeUnaryCall(
      path: "/google.cloud.securitycenter.v1.SecurityCenter/UpdateSecurityMarks",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Securitycenter_V1_SecurityCenterClient: Google_Cloud_Securitycenter_V1_SecurityCenterClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.securitycenter.v1.SecurityCenter service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Securitycenter_V1_SecurityCenterProvider: CallHandlerProvider {
  /// Creates a source.
  func createSource(request: Google_Cloud_Securitycenter_V1_CreateSourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_Source>
  /// Creates a finding. The corresponding source must exist for finding creation
  /// to succeed.
  func createFinding(request: Google_Cloud_Securitycenter_V1_CreateFindingRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_Finding>
  /// Creates a notification config.
  func createNotificationConfig(request: Google_Cloud_Securitycenter_V1_CreateNotificationConfigRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_NotificationConfig>
  /// Deletes a notification config.
  func deleteNotificationConfig(request: Google_Cloud_Securitycenter_V1_DeleteNotificationConfigRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Gets the access control policy on the specified Source.
  func getIamPolicy(request: Google_Iam_V1_GetIamPolicyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_Policy>
  /// Gets a notification config.
  func getNotificationConfig(request: Google_Cloud_Securitycenter_V1_GetNotificationConfigRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_NotificationConfig>
  /// Gets the settings for an organization.
  func getOrganizationSettings(request: Google_Cloud_Securitycenter_V1_GetOrganizationSettingsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_OrganizationSettings>
  /// Gets a source.
  func getSource(request: Google_Cloud_Securitycenter_V1_GetSourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_Source>
  /// Filters an organization's assets and  groups them by their specified
  /// properties.
  func groupAssets(request: Google_Cloud_Securitycenter_V1_GroupAssetsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_GroupAssetsResponse>
  /// Filters an organization or source's findings and  groups them by their
  /// specified properties.
  ///
  /// To group across all sources provide a `-` as the source id.
  /// Example: /v1/organizations/{organization_id}/sources/-/findings
  func groupFindings(request: Google_Cloud_Securitycenter_V1_GroupFindingsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_GroupFindingsResponse>
  /// Lists an organization's assets.
  func listAssets(request: Google_Cloud_Securitycenter_V1_ListAssetsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_ListAssetsResponse>
  /// Lists an organization or source's findings.
  ///
  /// To list across all sources provide a `-` as the source id.
  /// Example: /v1/organizations/{organization_id}/sources/-/findings
  func listFindings(request: Google_Cloud_Securitycenter_V1_ListFindingsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_ListFindingsResponse>
  /// Lists notification configs.
  func listNotificationConfigs(request: Google_Cloud_Securitycenter_V1_ListNotificationConfigsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_ListNotificationConfigsResponse>
  /// Lists all sources belonging to an organization.
  func listSources(request: Google_Cloud_Securitycenter_V1_ListSourcesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_ListSourcesResponse>
  /// Runs asset discovery. The discovery is tracked with a long-running
  /// operation.
  ///
  /// This API can only be called with limited frequency for an organization. If
  /// it is called too frequently the caller will receive a TOO_MANY_REQUESTS
  /// error.
  func runAssetDiscovery(request: Google_Cloud_Securitycenter_V1_RunAssetDiscoveryRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Updates the state of a finding.
  func setFindingState(request: Google_Cloud_Securitycenter_V1_SetFindingStateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_Finding>
  /// Sets the access control policy on the specified Source.
  func setIamPolicy(request: Google_Iam_V1_SetIamPolicyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_Policy>
  /// Returns the permissions that a caller has on the specified source.
  func testIamPermissions(request: Google_Iam_V1_TestIamPermissionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_TestIamPermissionsResponse>
  /// Creates or updates a finding. The corresponding source must exist for a
  /// finding creation to succeed.
  func updateFinding(request: Google_Cloud_Securitycenter_V1_UpdateFindingRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_Finding>
  /// Updates a notification config. The following update
  /// fields are allowed: description, pubsub_topic, streaming_config.filter
  func updateNotificationConfig(request: Google_Cloud_Securitycenter_V1_UpdateNotificationConfigRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_NotificationConfig>
  /// Updates an organization's settings.
  func updateOrganizationSettings(request: Google_Cloud_Securitycenter_V1_UpdateOrganizationSettingsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_OrganizationSettings>
  /// Updates a source.
  func updateSource(request: Google_Cloud_Securitycenter_V1_UpdateSourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_Source>
  /// Updates security marks.
  func updateSecurityMarks(request: Google_Cloud_Securitycenter_V1_UpdateSecurityMarksRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Securitycenter_V1_SecurityMarks>
}

extension Google_Cloud_Securitycenter_V1_SecurityCenterProvider {
  public var serviceName: Substring { return "google.cloud.securitycenter.v1.SecurityCenter" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "CreateSource":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createSource(request: request, context: context)
        }
      }

    case "CreateFinding":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createFinding(request: request, context: context)
        }
      }

    case "CreateNotificationConfig":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createNotificationConfig(request: request, context: context)
        }
      }

    case "DeleteNotificationConfig":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteNotificationConfig(request: request, context: context)
        }
      }

    case "GetIamPolicy":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getIamPolicy(request: request, context: context)
        }
      }

    case "GetNotificationConfig":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getNotificationConfig(request: request, context: context)
        }
      }

    case "GetOrganizationSettings":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getOrganizationSettings(request: request, context: context)
        }
      }

    case "GetSource":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getSource(request: request, context: context)
        }
      }

    case "GroupAssets":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.groupAssets(request: request, context: context)
        }
      }

    case "GroupFindings":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.groupFindings(request: request, context: context)
        }
      }

    case "ListAssets":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listAssets(request: request, context: context)
        }
      }

    case "ListFindings":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listFindings(request: request, context: context)
        }
      }

    case "ListNotificationConfigs":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listNotificationConfigs(request: request, context: context)
        }
      }

    case "ListSources":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listSources(request: request, context: context)
        }
      }

    case "RunAssetDiscovery":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.runAssetDiscovery(request: request, context: context)
        }
      }

    case "SetFindingState":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.setFindingState(request: request, context: context)
        }
      }

    case "SetIamPolicy":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.setIamPolicy(request: request, context: context)
        }
      }

    case "TestIamPermissions":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.testIamPermissions(request: request, context: context)
        }
      }

    case "UpdateFinding":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateFinding(request: request, context: context)
        }
      }

    case "UpdateNotificationConfig":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateNotificationConfig(request: request, context: context)
        }
      }

    case "UpdateOrganizationSettings":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateOrganizationSettings(request: request, context: context)
        }
      }

    case "UpdateSource":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateSource(request: request, context: context)
        }
      }

    case "UpdateSecurityMarks":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateSecurityMarks(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

