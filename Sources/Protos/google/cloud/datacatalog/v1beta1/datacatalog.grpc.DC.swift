//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/datacatalog/v1beta1/datacatalog.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Datacatalog_V1beta1_DataCatalogClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Datacatalog_V1beta1_DataCatalogClientProtocol: GRPCClient {
  func searchCatalog(
    _ request: Google_Cloud_Datacatalog_V1beta1_SearchCatalogRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_SearchCatalogRequest, Google_Cloud_Datacatalog_V1beta1_SearchCatalogResponse>

  func createEntryGroup(
    _ request: Google_Cloud_Datacatalog_V1beta1_CreateEntryGroupRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_CreateEntryGroupRequest, Google_Cloud_Datacatalog_V1beta1_EntryGroup>

  func updateEntryGroup(
    _ request: Google_Cloud_Datacatalog_V1beta1_UpdateEntryGroupRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_UpdateEntryGroupRequest, Google_Cloud_Datacatalog_V1beta1_EntryGroup>

  func getEntryGroup(
    _ request: Google_Cloud_Datacatalog_V1beta1_GetEntryGroupRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_GetEntryGroupRequest, Google_Cloud_Datacatalog_V1beta1_EntryGroup>

  func deleteEntryGroup(
    _ request: Google_Cloud_Datacatalog_V1beta1_DeleteEntryGroupRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_DeleteEntryGroupRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func listEntryGroups(
    _ request: Google_Cloud_Datacatalog_V1beta1_ListEntryGroupsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_ListEntryGroupsRequest, Google_Cloud_Datacatalog_V1beta1_ListEntryGroupsResponse>

  func createEntry(
    _ request: Google_Cloud_Datacatalog_V1beta1_CreateEntryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_CreateEntryRequest, Google_Cloud_Datacatalog_V1beta1_Entry>

  func updateEntry(
    _ request: Google_Cloud_Datacatalog_V1beta1_UpdateEntryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_UpdateEntryRequest, Google_Cloud_Datacatalog_V1beta1_Entry>

  func deleteEntry(
    _ request: Google_Cloud_Datacatalog_V1beta1_DeleteEntryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_DeleteEntryRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getEntry(
    _ request: Google_Cloud_Datacatalog_V1beta1_GetEntryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_GetEntryRequest, Google_Cloud_Datacatalog_V1beta1_Entry>

  func lookupEntry(
    _ request: Google_Cloud_Datacatalog_V1beta1_LookupEntryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_LookupEntryRequest, Google_Cloud_Datacatalog_V1beta1_Entry>

  func listEntries(
    _ request: Google_Cloud_Datacatalog_V1beta1_ListEntriesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_ListEntriesRequest, Google_Cloud_Datacatalog_V1beta1_ListEntriesResponse>

  func createTagTemplate(
    _ request: Google_Cloud_Datacatalog_V1beta1_CreateTagTemplateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_CreateTagTemplateRequest, Google_Cloud_Datacatalog_V1beta1_TagTemplate>

  func getTagTemplate(
    _ request: Google_Cloud_Datacatalog_V1beta1_GetTagTemplateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_GetTagTemplateRequest, Google_Cloud_Datacatalog_V1beta1_TagTemplate>

  func updateTagTemplate(
    _ request: Google_Cloud_Datacatalog_V1beta1_UpdateTagTemplateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_UpdateTagTemplateRequest, Google_Cloud_Datacatalog_V1beta1_TagTemplate>

  func deleteTagTemplate(
    _ request: Google_Cloud_Datacatalog_V1beta1_DeleteTagTemplateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_DeleteTagTemplateRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func createTagTemplateField(
    _ request: Google_Cloud_Datacatalog_V1beta1_CreateTagTemplateFieldRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_CreateTagTemplateFieldRequest, Google_Cloud_Datacatalog_V1beta1_TagTemplateField>

  func updateTagTemplateField(
    _ request: Google_Cloud_Datacatalog_V1beta1_UpdateTagTemplateFieldRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_UpdateTagTemplateFieldRequest, Google_Cloud_Datacatalog_V1beta1_TagTemplateField>

  func renameTagTemplateField(
    _ request: Google_Cloud_Datacatalog_V1beta1_RenameTagTemplateFieldRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_RenameTagTemplateFieldRequest, Google_Cloud_Datacatalog_V1beta1_TagTemplateField>

  func deleteTagTemplateField(
    _ request: Google_Cloud_Datacatalog_V1beta1_DeleteTagTemplateFieldRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_DeleteTagTemplateFieldRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func createTag(
    _ request: Google_Cloud_Datacatalog_V1beta1_CreateTagRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_CreateTagRequest, Google_Cloud_Datacatalog_V1beta1_Tag>

  func updateTag(
    _ request: Google_Cloud_Datacatalog_V1beta1_UpdateTagRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_UpdateTagRequest, Google_Cloud_Datacatalog_V1beta1_Tag>

  func deleteTag(
    _ request: Google_Cloud_Datacatalog_V1beta1_DeleteTagRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_DeleteTagRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func listTags(
    _ request: Google_Cloud_Datacatalog_V1beta1_ListTagsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_ListTagsRequest, Google_Cloud_Datacatalog_V1beta1_ListTagsResponse>

  func setIamPolicy(
    _ request: Google_Iam_V1_SetIamPolicyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Iam_V1_SetIamPolicyRequest, Google_Iam_V1_Policy>

  func getIamPolicy(
    _ request: Google_Iam_V1_GetIamPolicyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Iam_V1_GetIamPolicyRequest, Google_Iam_V1_Policy>

  func testIamPermissions(
    _ request: Google_Iam_V1_TestIamPermissionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Iam_V1_TestIamPermissionsRequest, Google_Iam_V1_TestIamPermissionsResponse>

}

extension Google_Cloud_Datacatalog_V1beta1_DataCatalogClientProtocol {

  /// Searches Data Catalog for multiple resources like entries, tags that
  /// match a query.
  ///
  /// This is a custom method
  /// (https://cloud.google.com/apis/design/custom_methods) and does not return
  /// the complete resource, only the resource identifier and high level
  /// fields. Clients can subsequentally call `Get` methods.
  ///
  /// Note that Data Catalog search queries do not guarantee full recall. Query
  /// results that match your query may not be returned, even in subsequent
  /// result pages. Also note that results returned (and not returned) can vary
  /// across repeated search queries.
  ///
  /// See [Data Catalog Search
  /// Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference)
  /// for more information.
  ///
  /// - Parameters:
  ///   - request: Request to send to SearchCatalog.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func searchCatalog(
    _ request: Google_Cloud_Datacatalog_V1beta1_SearchCatalogRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_SearchCatalogRequest, Google_Cloud_Datacatalog_V1beta1_SearchCatalogResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/SearchCatalog",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// A maximum of 10,000 entry groups may be created per organization across all
  /// locations.
  ///
  /// Users should enable the Data Catalog API in the project identified by
  /// the `parent` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateEntryGroup.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createEntryGroup(
    _ request: Google_Cloud_Datacatalog_V1beta1_CreateEntryGroupRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_CreateEntryGroupRequest, Google_Cloud_Datacatalog_V1beta1_EntryGroup> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/CreateEntryGroup",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates an EntryGroup. The user should enable the Data Catalog API in the
  /// project identified by the `entry_group.name` parameter (see [Data Catalog
  /// Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateEntryGroup.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateEntryGroup(
    _ request: Google_Cloud_Datacatalog_V1beta1_UpdateEntryGroupRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_UpdateEntryGroupRequest, Google_Cloud_Datacatalog_V1beta1_EntryGroup> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/UpdateEntryGroup",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets an EntryGroup.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetEntryGroup.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getEntryGroup(
    _ request: Google_Cloud_Datacatalog_V1beta1_GetEntryGroupRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_GetEntryGroupRequest, Google_Cloud_Datacatalog_V1beta1_EntryGroup> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/GetEntryGroup",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes an EntryGroup. Only entry groups that do not contain entries can be
  /// deleted. Users should enable the Data Catalog API in the project
  /// identified by the `name` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteEntryGroup.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteEntryGroup(
    _ request: Google_Cloud_Datacatalog_V1beta1_DeleteEntryGroupRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_DeleteEntryGroupRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/DeleteEntryGroup",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists entry groups.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListEntryGroups.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listEntryGroups(
    _ request: Google_Cloud_Datacatalog_V1beta1_ListEntryGroupsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_ListEntryGroupsRequest, Google_Cloud_Datacatalog_V1beta1_ListEntryGroupsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/ListEntryGroups",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates an entry. Only entries of 'FILESET' type or user-specified type can
  /// be created.
  ///
  /// Users should enable the Data Catalog API in the project identified by
  /// the `parent` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  ///
  /// A maximum of 100,000 entries may be created per entry group.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateEntry.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createEntry(
    _ request: Google_Cloud_Datacatalog_V1beta1_CreateEntryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_CreateEntryRequest, Google_Cloud_Datacatalog_V1beta1_Entry> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/CreateEntry",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates an existing entry.
  /// Users should enable the Data Catalog API in the project identified by
  /// the `entry.name` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateEntry.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateEntry(
    _ request: Google_Cloud_Datacatalog_V1beta1_UpdateEntryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_UpdateEntryRequest, Google_Cloud_Datacatalog_V1beta1_Entry> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/UpdateEntry",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes an existing entry. Only entries created through
  /// [CreateEntry][google.cloud.datacatalog.v1beta1.DataCatalog.CreateEntry]
  /// method can be deleted.
  /// Users should enable the Data Catalog API in the project identified by
  /// the `name` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteEntry.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteEntry(
    _ request: Google_Cloud_Datacatalog_V1beta1_DeleteEntryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_DeleteEntryRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/DeleteEntry",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets an entry.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetEntry.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getEntry(
    _ request: Google_Cloud_Datacatalog_V1beta1_GetEntryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_GetEntryRequest, Google_Cloud_Datacatalog_V1beta1_Entry> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/GetEntry",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Get an entry by target resource name. This method allows clients to use
  /// the resource name from the source Google Cloud Platform service to get the
  /// Data Catalog Entry.
  ///
  /// - Parameters:
  ///   - request: Request to send to LookupEntry.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func lookupEntry(
    _ request: Google_Cloud_Datacatalog_V1beta1_LookupEntryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_LookupEntryRequest, Google_Cloud_Datacatalog_V1beta1_Entry> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/LookupEntry",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists entries.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListEntries.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listEntries(
    _ request: Google_Cloud_Datacatalog_V1beta1_ListEntriesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_ListEntriesRequest, Google_Cloud_Datacatalog_V1beta1_ListEntriesResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/ListEntries",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a tag template. The user should enable the Data Catalog API in
  /// the project identified by the `parent` parameter (see [Data Catalog
  /// Resource
  /// Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
  /// for more information).
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTagTemplate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createTagTemplate(
    _ request: Google_Cloud_Datacatalog_V1beta1_CreateTagTemplateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_CreateTagTemplateRequest, Google_Cloud_Datacatalog_V1beta1_TagTemplate> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/CreateTagTemplate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a tag template.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTagTemplate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTagTemplate(
    _ request: Google_Cloud_Datacatalog_V1beta1_GetTagTemplateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_GetTagTemplateRequest, Google_Cloud_Datacatalog_V1beta1_TagTemplate> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/GetTagTemplate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates a tag template. This method cannot be used to update the fields of
  /// a template. The tag template fields are represented as separate resources
  /// and should be updated using their own create/update/delete methods.
  /// Users should enable the Data Catalog API in the project identified by
  /// the `tag_template.name` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateTagTemplate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateTagTemplate(
    _ request: Google_Cloud_Datacatalog_V1beta1_UpdateTagTemplateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_UpdateTagTemplateRequest, Google_Cloud_Datacatalog_V1beta1_TagTemplate> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/UpdateTagTemplate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a tag template and all tags using the template.
  /// Users should enable the Data Catalog API in the project identified by
  /// the `name` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteTagTemplate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteTagTemplate(
    _ request: Google_Cloud_Datacatalog_V1beta1_DeleteTagTemplateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_DeleteTagTemplateRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/DeleteTagTemplate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a field in a tag template. The user should enable the Data Catalog
  /// API in the project identified by the `parent` parameter (see
  /// [Data Catalog Resource
  /// Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
  /// for more information).
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTagTemplateField.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createTagTemplateField(
    _ request: Google_Cloud_Datacatalog_V1beta1_CreateTagTemplateFieldRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_CreateTagTemplateFieldRequest, Google_Cloud_Datacatalog_V1beta1_TagTemplateField> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/CreateTagTemplateField",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates a field in a tag template. This method cannot be used to update the
  /// field type. Users should enable the Data Catalog API in the project
  /// identified by the `name` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateTagTemplateField.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateTagTemplateField(
    _ request: Google_Cloud_Datacatalog_V1beta1_UpdateTagTemplateFieldRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_UpdateTagTemplateFieldRequest, Google_Cloud_Datacatalog_V1beta1_TagTemplateField> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/UpdateTagTemplateField",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Renames a field in a tag template. The user should enable the Data Catalog
  /// API in the project identified by the `name` parameter (see [Data Catalog
  /// Resource
  /// Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
  /// for more information).
  ///
  /// - Parameters:
  ///   - request: Request to send to RenameTagTemplateField.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func renameTagTemplateField(
    _ request: Google_Cloud_Datacatalog_V1beta1_RenameTagTemplateFieldRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_RenameTagTemplateFieldRequest, Google_Cloud_Datacatalog_V1beta1_TagTemplateField> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/RenameTagTemplateField",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a field in a tag template and all uses of that field.
  /// Users should enable the Data Catalog API in the project identified by
  /// the `name` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteTagTemplateField.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteTagTemplateField(
    _ request: Google_Cloud_Datacatalog_V1beta1_DeleteTagTemplateFieldRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_DeleteTagTemplateFieldRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/DeleteTagTemplateField",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a tag on an [Entry][google.cloud.datacatalog.v1beta1.Entry].
  /// Note: The project identified by the `parent` parameter for the
  /// [tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters)
  /// and the
  /// [tag
  /// template](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters)
  /// used to create the tag must be from the same organization.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTag.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createTag(
    _ request: Google_Cloud_Datacatalog_V1beta1_CreateTagRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_CreateTagRequest, Google_Cloud_Datacatalog_V1beta1_Tag> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/CreateTag",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates an existing tag.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateTag.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateTag(
    _ request: Google_Cloud_Datacatalog_V1beta1_UpdateTagRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_UpdateTagRequest, Google_Cloud_Datacatalog_V1beta1_Tag> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/UpdateTag",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a tag.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteTag.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteTag(
    _ request: Google_Cloud_Datacatalog_V1beta1_DeleteTagRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_DeleteTagRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/DeleteTag",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists the tags on an [Entry][google.cloud.datacatalog.v1beta1.Entry].
  ///
  /// - Parameters:
  ///   - request: Request to send to ListTags.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listTags(
    _ request: Google_Cloud_Datacatalog_V1beta1_ListTagsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Datacatalog_V1beta1_ListTagsRequest, Google_Cloud_Datacatalog_V1beta1_ListTagsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/ListTags",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Sets the access control policy for a resource. Replaces any existing
  /// policy.
  /// Supported resources are:
  ///   - Tag templates.
  ///   - Entries.
  ///   - Entry groups.
  /// Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
  /// and any external Google Cloud Platform resources synced to Data Catalog.
  ///
  /// Callers must have following Google IAM permission
  ///   - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag
  ///     templates.
  ///   - `datacatalog.entries.setIamPolicy` to set policies on entries.
  ///   - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetIamPolicy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setIamPolicy(
    _ request: Google_Iam_V1_SetIamPolicyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Iam_V1_SetIamPolicyRequest, Google_Iam_V1_Policy> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/SetIamPolicy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets the access control policy for a resource. A `NOT_FOUND` error
  /// is returned if the resource does not exist. An empty policy is returned
  /// if the resource exists but does not have a policy set on it.
  ///
  /// Supported resources are:
  ///   - Tag templates.
  ///   - Entries.
  ///   - Entry groups.
  /// Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
  /// and any external Google Cloud Platform resources synced to Data Catalog.
  ///
  /// Callers must have following Google IAM permission
  ///   - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
  ///     templates.
  ///   - `datacatalog.entries.getIamPolicy` to get policies on entries.
  ///   - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetIamPolicy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getIamPolicy(
    _ request: Google_Iam_V1_GetIamPolicyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Iam_V1_GetIamPolicyRequest, Google_Iam_V1_Policy> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/GetIamPolicy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns the caller's permissions on a resource.
  /// If the resource does not exist, an empty set of permissions is returned
  /// (We don't return a `NOT_FOUND` error).
  ///
  /// Supported resources are:
  ///   - Tag templates.
  ///   - Entries.
  ///   - Entry groups.
  /// Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
  /// and any external Google Cloud Platform resources synced to Data Catalog.
  ///
  /// A caller is not required to have Google IAM permission to make this
  /// request.
  ///
  /// - Parameters:
  ///   - request: Request to send to TestIamPermissions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func testIamPermissions(
    _ request: Google_Iam_V1_TestIamPermissionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Iam_V1_TestIamPermissionsRequest, Google_Iam_V1_TestIamPermissionsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.datacatalog.v1beta1.DataCatalog/TestIamPermissions",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Datacatalog_V1beta1_DataCatalogClient: Google_Cloud_Datacatalog_V1beta1_DataCatalogClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.datacatalog.v1beta1.DataCatalog service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Datacatalog_V1beta1_DataCatalogProvider: CallHandlerProvider {
  /// Searches Data Catalog for multiple resources like entries, tags that
  /// match a query.
  ///
  /// This is a custom method
  /// (https://cloud.google.com/apis/design/custom_methods) and does not return
  /// the complete resource, only the resource identifier and high level
  /// fields. Clients can subsequentally call `Get` methods.
  ///
  /// Note that Data Catalog search queries do not guarantee full recall. Query
  /// results that match your query may not be returned, even in subsequent
  /// result pages. Also note that results returned (and not returned) can vary
  /// across repeated search queries.
  ///
  /// See [Data Catalog Search
  /// Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference)
  /// for more information.
  func searchCatalog(request: Google_Cloud_Datacatalog_V1beta1_SearchCatalogRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_SearchCatalogResponse>
  /// A maximum of 10,000 entry groups may be created per organization across all
  /// locations.
  ///
  /// Users should enable the Data Catalog API in the project identified by
  /// the `parent` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  func createEntryGroup(request: Google_Cloud_Datacatalog_V1beta1_CreateEntryGroupRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_EntryGroup>
  /// Updates an EntryGroup. The user should enable the Data Catalog API in the
  /// project identified by the `entry_group.name` parameter (see [Data Catalog
  /// Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  func updateEntryGroup(request: Google_Cloud_Datacatalog_V1beta1_UpdateEntryGroupRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_EntryGroup>
  /// Gets an EntryGroup.
  func getEntryGroup(request: Google_Cloud_Datacatalog_V1beta1_GetEntryGroupRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_EntryGroup>
  /// Deletes an EntryGroup. Only entry groups that do not contain entries can be
  /// deleted. Users should enable the Data Catalog API in the project
  /// identified by the `name` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  func deleteEntryGroup(request: Google_Cloud_Datacatalog_V1beta1_DeleteEntryGroupRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Lists entry groups.
  func listEntryGroups(request: Google_Cloud_Datacatalog_V1beta1_ListEntryGroupsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_ListEntryGroupsResponse>
  /// Creates an entry. Only entries of 'FILESET' type or user-specified type can
  /// be created.
  ///
  /// Users should enable the Data Catalog API in the project identified by
  /// the `parent` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  ///
  /// A maximum of 100,000 entries may be created per entry group.
  func createEntry(request: Google_Cloud_Datacatalog_V1beta1_CreateEntryRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_Entry>
  /// Updates an existing entry.
  /// Users should enable the Data Catalog API in the project identified by
  /// the `entry.name` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  func updateEntry(request: Google_Cloud_Datacatalog_V1beta1_UpdateEntryRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_Entry>
  /// Deletes an existing entry. Only entries created through
  /// [CreateEntry][google.cloud.datacatalog.v1beta1.DataCatalog.CreateEntry]
  /// method can be deleted.
  /// Users should enable the Data Catalog API in the project identified by
  /// the `name` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  func deleteEntry(request: Google_Cloud_Datacatalog_V1beta1_DeleteEntryRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Gets an entry.
  func getEntry(request: Google_Cloud_Datacatalog_V1beta1_GetEntryRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_Entry>
  /// Get an entry by target resource name. This method allows clients to use
  /// the resource name from the source Google Cloud Platform service to get the
  /// Data Catalog Entry.
  func lookupEntry(request: Google_Cloud_Datacatalog_V1beta1_LookupEntryRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_Entry>
  /// Lists entries.
  func listEntries(request: Google_Cloud_Datacatalog_V1beta1_ListEntriesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_ListEntriesResponse>
  /// Creates a tag template. The user should enable the Data Catalog API in
  /// the project identified by the `parent` parameter (see [Data Catalog
  /// Resource
  /// Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
  /// for more information).
  func createTagTemplate(request: Google_Cloud_Datacatalog_V1beta1_CreateTagTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_TagTemplate>
  /// Gets a tag template.
  func getTagTemplate(request: Google_Cloud_Datacatalog_V1beta1_GetTagTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_TagTemplate>
  /// Updates a tag template. This method cannot be used to update the fields of
  /// a template. The tag template fields are represented as separate resources
  /// and should be updated using their own create/update/delete methods.
  /// Users should enable the Data Catalog API in the project identified by
  /// the `tag_template.name` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  func updateTagTemplate(request: Google_Cloud_Datacatalog_V1beta1_UpdateTagTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_TagTemplate>
  /// Deletes a tag template and all tags using the template.
  /// Users should enable the Data Catalog API in the project identified by
  /// the `name` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  func deleteTagTemplate(request: Google_Cloud_Datacatalog_V1beta1_DeleteTagTemplateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Creates a field in a tag template. The user should enable the Data Catalog
  /// API in the project identified by the `parent` parameter (see
  /// [Data Catalog Resource
  /// Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
  /// for more information).
  func createTagTemplateField(request: Google_Cloud_Datacatalog_V1beta1_CreateTagTemplateFieldRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_TagTemplateField>
  /// Updates a field in a tag template. This method cannot be used to update the
  /// field type. Users should enable the Data Catalog API in the project
  /// identified by the `name` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  func updateTagTemplateField(request: Google_Cloud_Datacatalog_V1beta1_UpdateTagTemplateFieldRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_TagTemplateField>
  /// Renames a field in a tag template. The user should enable the Data Catalog
  /// API in the project identified by the `name` parameter (see [Data Catalog
  /// Resource
  /// Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
  /// for more information).
  func renameTagTemplateField(request: Google_Cloud_Datacatalog_V1beta1_RenameTagTemplateFieldRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_TagTemplateField>
  /// Deletes a field in a tag template and all uses of that field.
  /// Users should enable the Data Catalog API in the project identified by
  /// the `name` parameter (see [Data Catalog Resource Project]
  /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
  /// more information).
  func deleteTagTemplateField(request: Google_Cloud_Datacatalog_V1beta1_DeleteTagTemplateFieldRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Creates a tag on an [Entry][google.cloud.datacatalog.v1beta1.Entry].
  /// Note: The project identified by the `parent` parameter for the
  /// [tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters)
  /// and the
  /// [tag
  /// template](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters)
  /// used to create the tag must be from the same organization.
  func createTag(request: Google_Cloud_Datacatalog_V1beta1_CreateTagRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_Tag>
  /// Updates an existing tag.
  func updateTag(request: Google_Cloud_Datacatalog_V1beta1_UpdateTagRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_Tag>
  /// Deletes a tag.
  func deleteTag(request: Google_Cloud_Datacatalog_V1beta1_DeleteTagRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Lists the tags on an [Entry][google.cloud.datacatalog.v1beta1.Entry].
  func listTags(request: Google_Cloud_Datacatalog_V1beta1_ListTagsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Datacatalog_V1beta1_ListTagsResponse>
  /// Sets the access control policy for a resource. Replaces any existing
  /// policy.
  /// Supported resources are:
  ///   - Tag templates.
  ///   - Entries.
  ///   - Entry groups.
  /// Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
  /// and any external Google Cloud Platform resources synced to Data Catalog.
  ///
  /// Callers must have following Google IAM permission
  ///   - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag
  ///     templates.
  ///   - `datacatalog.entries.setIamPolicy` to set policies on entries.
  ///   - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
  func setIamPolicy(request: Google_Iam_V1_SetIamPolicyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_Policy>
  /// Gets the access control policy for a resource. A `NOT_FOUND` error
  /// is returned if the resource does not exist. An empty policy is returned
  /// if the resource exists but does not have a policy set on it.
  ///
  /// Supported resources are:
  ///   - Tag templates.
  ///   - Entries.
  ///   - Entry groups.
  /// Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
  /// and any external Google Cloud Platform resources synced to Data Catalog.
  ///
  /// Callers must have following Google IAM permission
  ///   - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
  ///     templates.
  ///   - `datacatalog.entries.getIamPolicy` to get policies on entries.
  ///   - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
  func getIamPolicy(request: Google_Iam_V1_GetIamPolicyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_Policy>
  /// Returns the caller's permissions on a resource.
  /// If the resource does not exist, an empty set of permissions is returned
  /// (We don't return a `NOT_FOUND` error).
  ///
  /// Supported resources are:
  ///   - Tag templates.
  ///   - Entries.
  ///   - Entry groups.
  /// Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
  /// and any external Google Cloud Platform resources synced to Data Catalog.
  ///
  /// A caller is not required to have Google IAM permission to make this
  /// request.
  func testIamPermissions(request: Google_Iam_V1_TestIamPermissionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_TestIamPermissionsResponse>
}

extension Google_Cloud_Datacatalog_V1beta1_DataCatalogProvider {
  public var serviceName: Substring { return "google.cloud.datacatalog.v1beta1.DataCatalog" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "SearchCatalog":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.searchCatalog(request: request, context: context)
        }
      }

    case "CreateEntryGroup":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createEntryGroup(request: request, context: context)
        }
      }

    case "UpdateEntryGroup":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateEntryGroup(request: request, context: context)
        }
      }

    case "GetEntryGroup":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getEntryGroup(request: request, context: context)
        }
      }

    case "DeleteEntryGroup":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteEntryGroup(request: request, context: context)
        }
      }

    case "ListEntryGroups":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listEntryGroups(request: request, context: context)
        }
      }

    case "CreateEntry":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createEntry(request: request, context: context)
        }
      }

    case "UpdateEntry":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateEntry(request: request, context: context)
        }
      }

    case "DeleteEntry":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteEntry(request: request, context: context)
        }
      }

    case "GetEntry":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getEntry(request: request, context: context)
        }
      }

    case "LookupEntry":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.lookupEntry(request: request, context: context)
        }
      }

    case "ListEntries":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listEntries(request: request, context: context)
        }
      }

    case "CreateTagTemplate":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createTagTemplate(request: request, context: context)
        }
      }

    case "GetTagTemplate":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getTagTemplate(request: request, context: context)
        }
      }

    case "UpdateTagTemplate":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateTagTemplate(request: request, context: context)
        }
      }

    case "DeleteTagTemplate":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteTagTemplate(request: request, context: context)
        }
      }

    case "CreateTagTemplateField":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createTagTemplateField(request: request, context: context)
        }
      }

    case "UpdateTagTemplateField":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateTagTemplateField(request: request, context: context)
        }
      }

    case "RenameTagTemplateField":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.renameTagTemplateField(request: request, context: context)
        }
      }

    case "DeleteTagTemplateField":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteTagTemplateField(request: request, context: context)
        }
      }

    case "CreateTag":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createTag(request: request, context: context)
        }
      }

    case "UpdateTag":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateTag(request: request, context: context)
        }
      }

    case "DeleteTag":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteTag(request: request, context: context)
        }
      }

    case "ListTags":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listTags(request: request, context: context)
        }
      }

    case "SetIamPolicy":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.setIamPolicy(request: request, context: context)
        }
      }

    case "GetIamPolicy":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getIamPolicy(request: request, context: context)
        }
      }

    case "TestIamPermissions":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.testIamPermissions(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

