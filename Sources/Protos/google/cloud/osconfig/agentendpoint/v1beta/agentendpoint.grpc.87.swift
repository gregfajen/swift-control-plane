//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/osconfig/agentendpoint/v1beta/agentendpoint.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Osconfig_Agentendpoint_V1beta_AgentEndpointServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Osconfig_Agentendpoint_V1beta_AgentEndpointServiceClientProtocol: GRPCClient {
  func receiveTaskNotification(
    _ request: Google_Cloud_Osconfig_Agentendpoint_V1beta_ReceiveTaskNotificationRequest,
    callOptions: CallOptions?,
    handler: @escaping (Google_Cloud_Osconfig_Agentendpoint_V1beta_ReceiveTaskNotificationResponse) -> Void
  ) -> ServerStreamingCall<Google_Cloud_Osconfig_Agentendpoint_V1beta_ReceiveTaskNotificationRequest, Google_Cloud_Osconfig_Agentendpoint_V1beta_ReceiveTaskNotificationResponse>

  func startNextTask(
    _ request: Google_Cloud_Osconfig_Agentendpoint_V1beta_StartNextTaskRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Osconfig_Agentendpoint_V1beta_StartNextTaskRequest, Google_Cloud_Osconfig_Agentendpoint_V1beta_StartNextTaskResponse>

  func reportTaskProgress(
    _ request: Google_Cloud_Osconfig_Agentendpoint_V1beta_ReportTaskProgressRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Osconfig_Agentendpoint_V1beta_ReportTaskProgressRequest, Google_Cloud_Osconfig_Agentendpoint_V1beta_ReportTaskProgressResponse>

  func reportTaskComplete(
    _ request: Google_Cloud_Osconfig_Agentendpoint_V1beta_ReportTaskCompleteRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Osconfig_Agentendpoint_V1beta_ReportTaskCompleteRequest, Google_Cloud_Osconfig_Agentendpoint_V1beta_ReportTaskCompleteResponse>

  func lookupEffectiveGuestPolicy(
    _ request: Google_Cloud_Osconfig_Agentendpoint_V1beta_LookupEffectiveGuestPolicyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Osconfig_Agentendpoint_V1beta_LookupEffectiveGuestPolicyRequest, Google_Cloud_Osconfig_Agentendpoint_V1beta_EffectiveGuestPolicy>

  func registerAgent(
    _ request: Google_Cloud_Osconfig_Agentendpoint_V1beta_RegisterAgentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Osconfig_Agentendpoint_V1beta_RegisterAgentRequest, Google_Cloud_Osconfig_Agentendpoint_V1beta_RegisterAgentResponse>

}

extension Google_Cloud_Osconfig_Agentendpoint_V1beta_AgentEndpointServiceClientProtocol {

  /// Stream established by client to receive Task notifications.
  ///
  /// - Parameters:
  ///   - request: Request to send to ReceiveTaskNotification.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  public func receiveTaskNotification(
    _ request: Google_Cloud_Osconfig_Agentendpoint_V1beta_ReceiveTaskNotificationRequest,
    callOptions: CallOptions? = nil,
    handler: @escaping (Google_Cloud_Osconfig_Agentendpoint_V1beta_ReceiveTaskNotificationResponse) -> Void
  ) -> ServerStreamingCall<Google_Cloud_Osconfig_Agentendpoint_V1beta_ReceiveTaskNotificationRequest, Google_Cloud_Osconfig_Agentendpoint_V1beta_ReceiveTaskNotificationResponse> {
    return self.makeServerStreamingCall(
      path: "/google.cloud.osconfig.agentendpoint.v1beta.AgentEndpointService/ReceiveTaskNotification",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      handler: handler
    )
  }

  /// Signals the start of a task execution and returns the task info.
  ///
  /// - Parameters:
  ///   - request: Request to send to StartNextTask.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func startNextTask(
    _ request: Google_Cloud_Osconfig_Agentendpoint_V1beta_StartNextTaskRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Osconfig_Agentendpoint_V1beta_StartNextTaskRequest, Google_Cloud_Osconfig_Agentendpoint_V1beta_StartNextTaskResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.osconfig.agentendpoint.v1beta.AgentEndpointService/StartNextTask",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Signals an intermediary progress checkpoint in task execution.
  ///
  /// - Parameters:
  ///   - request: Request to send to ReportTaskProgress.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func reportTaskProgress(
    _ request: Google_Cloud_Osconfig_Agentendpoint_V1beta_ReportTaskProgressRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Osconfig_Agentendpoint_V1beta_ReportTaskProgressRequest, Google_Cloud_Osconfig_Agentendpoint_V1beta_ReportTaskProgressResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.osconfig.agentendpoint.v1beta.AgentEndpointService/ReportTaskProgress",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Signals that the task execution is complete and optionally returns the next
  /// task.
  ///
  /// - Parameters:
  ///   - request: Request to send to ReportTaskComplete.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func reportTaskComplete(
    _ request: Google_Cloud_Osconfig_Agentendpoint_V1beta_ReportTaskCompleteRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Osconfig_Agentendpoint_V1beta_ReportTaskCompleteRequest, Google_Cloud_Osconfig_Agentendpoint_V1beta_ReportTaskCompleteResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.osconfig.agentendpoint.v1beta.AgentEndpointService/ReportTaskComplete",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lookup the effective guest policy that applies to a VM instance. This
  /// lookup merges all policies that are assigned to the instance ancestry.
  ///
  /// - Parameters:
  ///   - request: Request to send to LookupEffectiveGuestPolicy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func lookupEffectiveGuestPolicy(
    _ request: Google_Cloud_Osconfig_Agentendpoint_V1beta_LookupEffectiveGuestPolicyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Osconfig_Agentendpoint_V1beta_LookupEffectiveGuestPolicyRequest, Google_Cloud_Osconfig_Agentendpoint_V1beta_EffectiveGuestPolicy> {
    return self.makeUnaryCall(
      path: "/google.cloud.osconfig.agentendpoint.v1beta.AgentEndpointService/LookupEffectiveGuestPolicy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Registers the agent running on the VM.
  ///
  /// - Parameters:
  ///   - request: Request to send to RegisterAgent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func registerAgent(
    _ request: Google_Cloud_Osconfig_Agentendpoint_V1beta_RegisterAgentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Osconfig_Agentendpoint_V1beta_RegisterAgentRequest, Google_Cloud_Osconfig_Agentendpoint_V1beta_RegisterAgentResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.osconfig.agentendpoint.v1beta.AgentEndpointService/RegisterAgent",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Osconfig_Agentendpoint_V1beta_AgentEndpointServiceClient: Google_Cloud_Osconfig_Agentendpoint_V1beta_AgentEndpointServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.osconfig.agentendpoint.v1beta.AgentEndpointService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Osconfig_Agentendpoint_V1beta_AgentEndpointServiceProvider: CallHandlerProvider {
  /// Stream established by client to receive Task notifications.
  func receiveTaskNotification(request: Google_Cloud_Osconfig_Agentendpoint_V1beta_ReceiveTaskNotificationRequest, context: StreamingResponseCallContext<Google_Cloud_Osconfig_Agentendpoint_V1beta_ReceiveTaskNotificationResponse>) -> EventLoopFuture<GRPCStatus>
  /// Signals the start of a task execution and returns the task info.
  func startNextTask(request: Google_Cloud_Osconfig_Agentendpoint_V1beta_StartNextTaskRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Osconfig_Agentendpoint_V1beta_StartNextTaskResponse>
  /// Signals an intermediary progress checkpoint in task execution.
  func reportTaskProgress(request: Google_Cloud_Osconfig_Agentendpoint_V1beta_ReportTaskProgressRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Osconfig_Agentendpoint_V1beta_ReportTaskProgressResponse>
  /// Signals that the task execution is complete and optionally returns the next
  /// task.
  func reportTaskComplete(request: Google_Cloud_Osconfig_Agentendpoint_V1beta_ReportTaskCompleteRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Osconfig_Agentendpoint_V1beta_ReportTaskCompleteResponse>
  /// Lookup the effective guest policy that applies to a VM instance. This
  /// lookup merges all policies that are assigned to the instance ancestry.
  func lookupEffectiveGuestPolicy(request: Google_Cloud_Osconfig_Agentendpoint_V1beta_LookupEffectiveGuestPolicyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Osconfig_Agentendpoint_V1beta_EffectiveGuestPolicy>
  /// Registers the agent running on the VM.
  func registerAgent(request: Google_Cloud_Osconfig_Agentendpoint_V1beta_RegisterAgentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Osconfig_Agentendpoint_V1beta_RegisterAgentResponse>
}

extension Google_Cloud_Osconfig_Agentendpoint_V1beta_AgentEndpointServiceProvider {
  public var serviceName: Substring { return "google.cloud.osconfig.agentendpoint.v1beta.AgentEndpointService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "ReceiveTaskNotification":
      return CallHandlerFactory.makeServerStreaming(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.receiveTaskNotification(request: request, context: context)
        }
      }

    case "StartNextTask":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.startNextTask(request: request, context: context)
        }
      }

    case "ReportTaskProgress":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.reportTaskProgress(request: request, context: context)
        }
      }

    case "ReportTaskComplete":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.reportTaskComplete(request: request, context: context)
        }
      }

    case "LookupEffectiveGuestPolicy":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.lookupEffectiveGuestPolicy(request: request, context: context)
        }
      }

    case "RegisterAgent":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.registerAgent(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

