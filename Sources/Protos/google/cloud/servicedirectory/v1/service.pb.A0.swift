// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/servicedirectory/v1/service.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// An individual service. A service contains a name and optional metadata.
/// A service must exist before
/// [endpoints][google.cloud.servicedirectory.v1.Endpoint] can be
/// added to it.
public struct Google_Cloud_Servicedirectory_V1_Service {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Immutable. The resource name for the service in the format
  /// 'projects/*/locations/*/namespaces/*/services/*'.
  public var name: String = String()

  /// Optional. Annotations for the service. This data can be consumed by service
  /// clients.
  /// Restrictions:
  ///  - The entire annotations dictionary may contain up to 2000 characters,
  ///    spread accoss all key-value pairs. Annotations that goes beyond any
  ///    these limits will be rejected.
  ///  - Valid annotation keys have two segments: an optional prefix and name,
  ///    separated by a slash (/). The name segment is required and must be 63
  ///    characters or less, beginning and ending with an alphanumeric character
  ///    ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and
  ///    alphanumerics between. The prefix is optional. If specified, the prefix
  ///    must be a DNS subdomain: a series of DNS labels separated by dots (.),
  ///    not longer than 253 characters in total, followed by a slash (/).
  ///    Annotations that fails to meet these requirements will be rejected.
  ///  - The '(*.)google.com/' and '(*.)googleapis.com/' prefixes are reserved
  ///    for system annotations managed by Service Directory. If the user tries
  ///    to write to these keyspaces, those entries will be silently ignored by
  ///    the system.
  /// Note: This field is equivalent to the 'metadata' field in the v1beta1 API.
  /// They have the same syntax and read/write to the same location in Service
  /// Directory.
  public var annotations: Dictionary<String,String> = [:]

  /// Output only. Endpoints associated with this service. Returned on
  /// LookupService.Resolve. Control plane clients should use
  /// RegistrationService.ListEndpoints.
  public var endpoints: [Google_Cloud_Servicedirectory_V1_Endpoint] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.servicedirectory.v1"

extension Google_Cloud_Servicedirectory_V1_Service: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Service"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    4: .same(proto: "annotations"),
    3: .same(proto: "endpoints"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.name) }()
      case 3: try { try decoder.decodeRepeatedMessageField(value: &self.endpoints) }()
      case 4: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &self.annotations) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.name.isEmpty {
      try visitor.visitSingularStringField(value: self.name, fieldNumber: 1)
    }
    if !self.endpoints.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.endpoints, fieldNumber: 3)
    }
    if !self.annotations.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: self.annotations, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Servicedirectory_V1_Service, rhs: Google_Cloud_Servicedirectory_V1_Service) -> Bool {
    if lhs.name != rhs.name {return false}
    if lhs.annotations != rhs.annotations {return false}
    if lhs.endpoints != rhs.endpoints {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
