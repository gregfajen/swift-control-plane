//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/automl/v1/service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Automl_V1_AutoMlClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Automl_V1_AutoMlClientProtocol: GRPCClient {
  func createDataset(
    _ request: Google_Cloud_Automl_V1_CreateDatasetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_CreateDatasetRequest, Google_Longrunning_Operation>

  func getDataset(
    _ request: Google_Cloud_Automl_V1_GetDatasetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_GetDatasetRequest, Google_Cloud_Automl_V1_Dataset>

  func listDatasets(
    _ request: Google_Cloud_Automl_V1_ListDatasetsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_ListDatasetsRequest, Google_Cloud_Automl_V1_ListDatasetsResponse>

  func updateDataset(
    _ request: Google_Cloud_Automl_V1_UpdateDatasetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_UpdateDatasetRequest, Google_Cloud_Automl_V1_Dataset>

  func deleteDataset(
    _ request: Google_Cloud_Automl_V1_DeleteDatasetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_DeleteDatasetRequest, Google_Longrunning_Operation>

  func importData(
    _ request: Google_Cloud_Automl_V1_ImportDataRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_ImportDataRequest, Google_Longrunning_Operation>

  func exportData(
    _ request: Google_Cloud_Automl_V1_ExportDataRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_ExportDataRequest, Google_Longrunning_Operation>

  func getAnnotationSpec(
    _ request: Google_Cloud_Automl_V1_GetAnnotationSpecRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_GetAnnotationSpecRequest, Google_Cloud_Automl_V1_AnnotationSpec>

  func createModel(
    _ request: Google_Cloud_Automl_V1_CreateModelRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_CreateModelRequest, Google_Longrunning_Operation>

  func getModel(
    _ request: Google_Cloud_Automl_V1_GetModelRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_GetModelRequest, Google_Cloud_Automl_V1_Model>

  func listModels(
    _ request: Google_Cloud_Automl_V1_ListModelsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_ListModelsRequest, Google_Cloud_Automl_V1_ListModelsResponse>

  func deleteModel(
    _ request: Google_Cloud_Automl_V1_DeleteModelRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_DeleteModelRequest, Google_Longrunning_Operation>

  func updateModel(
    _ request: Google_Cloud_Automl_V1_UpdateModelRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_UpdateModelRequest, Google_Cloud_Automl_V1_Model>

  func deployModel(
    _ request: Google_Cloud_Automl_V1_DeployModelRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_DeployModelRequest, Google_Longrunning_Operation>

  func undeployModel(
    _ request: Google_Cloud_Automl_V1_UndeployModelRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_UndeployModelRequest, Google_Longrunning_Operation>

  func exportModel(
    _ request: Google_Cloud_Automl_V1_ExportModelRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_ExportModelRequest, Google_Longrunning_Operation>

  func getModelEvaluation(
    _ request: Google_Cloud_Automl_V1_GetModelEvaluationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_GetModelEvaluationRequest, Google_Cloud_Automl_V1_ModelEvaluation>

  func listModelEvaluations(
    _ request: Google_Cloud_Automl_V1_ListModelEvaluationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Automl_V1_ListModelEvaluationsRequest, Google_Cloud_Automl_V1_ListModelEvaluationsResponse>

}

extension Google_Cloud_Automl_V1_AutoMlClientProtocol {

  /// Creates a dataset.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateDataset.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createDataset(
    _ request: Google_Cloud_Automl_V1_CreateDatasetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_CreateDatasetRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/CreateDataset",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a dataset.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDataset.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getDataset(
    _ request: Google_Cloud_Automl_V1_GetDatasetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_GetDatasetRequest, Google_Cloud_Automl_V1_Dataset> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/GetDataset",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists datasets in a project.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListDatasets.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listDatasets(
    _ request: Google_Cloud_Automl_V1_ListDatasetsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_ListDatasetsRequest, Google_Cloud_Automl_V1_ListDatasetsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/ListDatasets",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates a dataset.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateDataset.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateDataset(
    _ request: Google_Cloud_Automl_V1_UpdateDatasetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_UpdateDatasetRequest, Google_Cloud_Automl_V1_Dataset> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/UpdateDataset",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a dataset and all of its contents.
  /// Returns empty response in the
  /// [response][google.longrunning.Operation.response] field when it completes,
  /// and `delete_details` in the
  /// [metadata][google.longrunning.Operation.metadata] field.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteDataset.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteDataset(
    _ request: Google_Cloud_Automl_V1_DeleteDatasetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_DeleteDatasetRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/DeleteDataset",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Imports data into a dataset.
  /// For Tables this method can only be called on an empty Dataset.
  ///
  /// For Tables:
  /// *   A
  /// [schema_inference_version][google.cloud.automl.v1.InputConfig.params]
  ///     parameter must be explicitly set.
  /// Returns an empty response in the
  /// [response][google.longrunning.Operation.response] field when it completes.
  ///
  /// - Parameters:
  ///   - request: Request to send to ImportData.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func importData(
    _ request: Google_Cloud_Automl_V1_ImportDataRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_ImportDataRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/ImportData",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Exports dataset's data to the provided output location.
  /// Returns an empty response in the
  /// [response][google.longrunning.Operation.response] field when it completes.
  ///
  /// - Parameters:
  ///   - request: Request to send to ExportData.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func exportData(
    _ request: Google_Cloud_Automl_V1_ExportDataRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_ExportDataRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/ExportData",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets an annotation spec.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAnnotationSpec.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAnnotationSpec(
    _ request: Google_Cloud_Automl_V1_GetAnnotationSpecRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_GetAnnotationSpecRequest, Google_Cloud_Automl_V1_AnnotationSpec> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/GetAnnotationSpec",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a model.
  /// Returns a Model in the [response][google.longrunning.Operation.response]
  /// field when it completes.
  /// When you create a model, several model evaluations are created for it:
  /// a global evaluation, and one evaluation for each annotation spec.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateModel.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createModel(
    _ request: Google_Cloud_Automl_V1_CreateModelRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_CreateModelRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/CreateModel",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a model.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetModel.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getModel(
    _ request: Google_Cloud_Automl_V1_GetModelRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_GetModelRequest, Google_Cloud_Automl_V1_Model> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/GetModel",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists models.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListModels.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listModels(
    _ request: Google_Cloud_Automl_V1_ListModelsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_ListModelsRequest, Google_Cloud_Automl_V1_ListModelsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/ListModels",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a model.
  /// Returns `google.protobuf.Empty` in the
  /// [response][google.longrunning.Operation.response] field when it completes,
  /// and `delete_details` in the
  /// [metadata][google.longrunning.Operation.metadata] field.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteModel.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteModel(
    _ request: Google_Cloud_Automl_V1_DeleteModelRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_DeleteModelRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/DeleteModel",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates a model.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateModel.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateModel(
    _ request: Google_Cloud_Automl_V1_UpdateModelRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_UpdateModelRequest, Google_Cloud_Automl_V1_Model> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/UpdateModel",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deploys a model. If a model is already deployed, deploying it with the
  /// same parameters has no effect. Deploying with different parametrs
  /// (as e.g. changing
  ///
  /// [node_number][google.cloud.automl.v1p1beta.ImageObjectDetectionModelDeploymentMetadata.node_number])
  ///  will reset the deployment state without pausing the model's availability.
  ///
  /// Only applicable for Text Classification, Image Object Detection , Tables, and Image Segmentation; all other domains manage
  /// deployment automatically.
  ///
  /// Returns an empty response in the
  /// [response][google.longrunning.Operation.response] field when it completes.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeployModel.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deployModel(
    _ request: Google_Cloud_Automl_V1_DeployModelRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_DeployModelRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/DeployModel",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Undeploys a model. If the model is not deployed this method has no effect.
  ///
  /// Only applicable for Text Classification, Image Object Detection and Tables;
  /// all other domains manage deployment automatically.
  ///
  /// Returns an empty response in the
  /// [response][google.longrunning.Operation.response] field when it completes.
  ///
  /// - Parameters:
  ///   - request: Request to send to UndeployModel.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func undeployModel(
    _ request: Google_Cloud_Automl_V1_UndeployModelRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_UndeployModelRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/UndeployModel",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Exports a trained, "export-able", model to a user specified Google Cloud
  /// Storage location. A model is considered export-able if and only if it has
  /// an export format defined for it in
  /// [ModelExportOutputConfig][google.cloud.automl.v1.ModelExportOutputConfig].
  ///
  /// Returns an empty response in the
  /// [response][google.longrunning.Operation.response] field when it completes.
  ///
  /// - Parameters:
  ///   - request: Request to send to ExportModel.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func exportModel(
    _ request: Google_Cloud_Automl_V1_ExportModelRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_ExportModelRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/ExportModel",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a model evaluation.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetModelEvaluation.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getModelEvaluation(
    _ request: Google_Cloud_Automl_V1_GetModelEvaluationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_GetModelEvaluationRequest, Google_Cloud_Automl_V1_ModelEvaluation> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/GetModelEvaluation",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists model evaluations.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListModelEvaluations.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listModelEvaluations(
    _ request: Google_Cloud_Automl_V1_ListModelEvaluationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Automl_V1_ListModelEvaluationsRequest, Google_Cloud_Automl_V1_ListModelEvaluationsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.automl.v1.AutoMl/ListModelEvaluations",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Automl_V1_AutoMlClient: Google_Cloud_Automl_V1_AutoMlClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.automl.v1.AutoMl service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Automl_V1_AutoMlProvider: CallHandlerProvider {
  /// Creates a dataset.
  func createDataset(request: Google_Cloud_Automl_V1_CreateDatasetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Gets a dataset.
  func getDataset(request: Google_Cloud_Automl_V1_GetDatasetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Automl_V1_Dataset>
  /// Lists datasets in a project.
  func listDatasets(request: Google_Cloud_Automl_V1_ListDatasetsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Automl_V1_ListDatasetsResponse>
  /// Updates a dataset.
  func updateDataset(request: Google_Cloud_Automl_V1_UpdateDatasetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Automl_V1_Dataset>
  /// Deletes a dataset and all of its contents.
  /// Returns empty response in the
  /// [response][google.longrunning.Operation.response] field when it completes,
  /// and `delete_details` in the
  /// [metadata][google.longrunning.Operation.metadata] field.
  func deleteDataset(request: Google_Cloud_Automl_V1_DeleteDatasetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Imports data into a dataset.
  /// For Tables this method can only be called on an empty Dataset.
  ///
  /// For Tables:
  /// *   A
  /// [schema_inference_version][google.cloud.automl.v1.InputConfig.params]
  ///     parameter must be explicitly set.
  /// Returns an empty response in the
  /// [response][google.longrunning.Operation.response] field when it completes.
  func importData(request: Google_Cloud_Automl_V1_ImportDataRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Exports dataset's data to the provided output location.
  /// Returns an empty response in the
  /// [response][google.longrunning.Operation.response] field when it completes.
  func exportData(request: Google_Cloud_Automl_V1_ExportDataRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Gets an annotation spec.
  func getAnnotationSpec(request: Google_Cloud_Automl_V1_GetAnnotationSpecRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Automl_V1_AnnotationSpec>
  /// Creates a model.
  /// Returns a Model in the [response][google.longrunning.Operation.response]
  /// field when it completes.
  /// When you create a model, several model evaluations are created for it:
  /// a global evaluation, and one evaluation for each annotation spec.
  func createModel(request: Google_Cloud_Automl_V1_CreateModelRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Gets a model.
  func getModel(request: Google_Cloud_Automl_V1_GetModelRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Automl_V1_Model>
  /// Lists models.
  func listModels(request: Google_Cloud_Automl_V1_ListModelsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Automl_V1_ListModelsResponse>
  /// Deletes a model.
  /// Returns `google.protobuf.Empty` in the
  /// [response][google.longrunning.Operation.response] field when it completes,
  /// and `delete_details` in the
  /// [metadata][google.longrunning.Operation.metadata] field.
  func deleteModel(request: Google_Cloud_Automl_V1_DeleteModelRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Updates a model.
  func updateModel(request: Google_Cloud_Automl_V1_UpdateModelRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Automl_V1_Model>
  /// Deploys a model. If a model is already deployed, deploying it with the
  /// same parameters has no effect. Deploying with different parametrs
  /// (as e.g. changing
  ///
  /// [node_number][google.cloud.automl.v1p1beta.ImageObjectDetectionModelDeploymentMetadata.node_number])
  ///  will reset the deployment state without pausing the model's availability.
  ///
  /// Only applicable for Text Classification, Image Object Detection , Tables, and Image Segmentation; all other domains manage
  /// deployment automatically.
  ///
  /// Returns an empty response in the
  /// [response][google.longrunning.Operation.response] field when it completes.
  func deployModel(request: Google_Cloud_Automl_V1_DeployModelRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Undeploys a model. If the model is not deployed this method has no effect.
  ///
  /// Only applicable for Text Classification, Image Object Detection and Tables;
  /// all other domains manage deployment automatically.
  ///
  /// Returns an empty response in the
  /// [response][google.longrunning.Operation.response] field when it completes.
  func undeployModel(request: Google_Cloud_Automl_V1_UndeployModelRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Exports a trained, "export-able", model to a user specified Google Cloud
  /// Storage location. A model is considered export-able if and only if it has
  /// an export format defined for it in
  /// [ModelExportOutputConfig][google.cloud.automl.v1.ModelExportOutputConfig].
  ///
  /// Returns an empty response in the
  /// [response][google.longrunning.Operation.response] field when it completes.
  func exportModel(request: Google_Cloud_Automl_V1_ExportModelRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Gets a model evaluation.
  func getModelEvaluation(request: Google_Cloud_Automl_V1_GetModelEvaluationRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Automl_V1_ModelEvaluation>
  /// Lists model evaluations.
  func listModelEvaluations(request: Google_Cloud_Automl_V1_ListModelEvaluationsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Automl_V1_ListModelEvaluationsResponse>
}

extension Google_Cloud_Automl_V1_AutoMlProvider {
  public var serviceName: Substring { return "google.cloud.automl.v1.AutoMl" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "CreateDataset":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createDataset(request: request, context: context)
        }
      }

    case "GetDataset":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getDataset(request: request, context: context)
        }
      }

    case "ListDatasets":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listDatasets(request: request, context: context)
        }
      }

    case "UpdateDataset":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateDataset(request: request, context: context)
        }
      }

    case "DeleteDataset":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteDataset(request: request, context: context)
        }
      }

    case "ImportData":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.importData(request: request, context: context)
        }
      }

    case "ExportData":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.exportData(request: request, context: context)
        }
      }

    case "GetAnnotationSpec":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getAnnotationSpec(request: request, context: context)
        }
      }

    case "CreateModel":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createModel(request: request, context: context)
        }
      }

    case "GetModel":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getModel(request: request, context: context)
        }
      }

    case "ListModels":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listModels(request: request, context: context)
        }
      }

    case "DeleteModel":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteModel(request: request, context: context)
        }
      }

    case "UpdateModel":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateModel(request: request, context: context)
        }
      }

    case "DeployModel":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deployModel(request: request, context: context)
        }
      }

    case "UndeployModel":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.undeployModel(request: request, context: context)
        }
      }

    case "ExportModel":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.exportModel(request: request, context: context)
        }
      }

    case "GetModelEvaluation":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getModelEvaluation(request: request, context: context)
        }
      }

    case "ListModelEvaluations":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listModelEvaluations(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

