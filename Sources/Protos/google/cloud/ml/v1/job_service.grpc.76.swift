//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/ml/v1/job_service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Ml_V1_JobServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Ml_V1_JobServiceClientProtocol: GRPCClient {
  func createJob(
    _ request: Google_Cloud_Ml_V1_CreateJobRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Ml_V1_CreateJobRequest, Google_Cloud_Ml_V1_Job>

  func listJobs(
    _ request: Google_Cloud_Ml_V1_ListJobsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Ml_V1_ListJobsRequest, Google_Cloud_Ml_V1_ListJobsResponse>

  func getJob(
    _ request: Google_Cloud_Ml_V1_GetJobRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Ml_V1_GetJobRequest, Google_Cloud_Ml_V1_Job>

  func cancelJob(
    _ request: Google_Cloud_Ml_V1_CancelJobRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Ml_V1_CancelJobRequest, SwiftProtobuf.Google_Protobuf_Empty>

}

extension Google_Cloud_Ml_V1_JobServiceClientProtocol {

  /// Creates a training or a batch prediction job.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateJob.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createJob(
    _ request: Google_Cloud_Ml_V1_CreateJobRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Ml_V1_CreateJobRequest, Google_Cloud_Ml_V1_Job> {
    return self.makeUnaryCall(
      path: "/google.cloud.ml.v1.JobService/CreateJob",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists the jobs in the project.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListJobs.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listJobs(
    _ request: Google_Cloud_Ml_V1_ListJobsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Ml_V1_ListJobsRequest, Google_Cloud_Ml_V1_ListJobsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.ml.v1.JobService/ListJobs",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Describes a job.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetJob.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getJob(
    _ request: Google_Cloud_Ml_V1_GetJobRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Ml_V1_GetJobRequest, Google_Cloud_Ml_V1_Job> {
    return self.makeUnaryCall(
      path: "/google.cloud.ml.v1.JobService/GetJob",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Cancels a running job.
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelJob.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func cancelJob(
    _ request: Google_Cloud_Ml_V1_CancelJobRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Ml_V1_CancelJobRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.ml.v1.JobService/CancelJob",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Ml_V1_JobServiceClient: Google_Cloud_Ml_V1_JobServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.ml.v1.JobService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Ml_V1_JobServiceProvider: CallHandlerProvider {
  /// Creates a training or a batch prediction job.
  func createJob(request: Google_Cloud_Ml_V1_CreateJobRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Ml_V1_Job>
  /// Lists the jobs in the project.
  func listJobs(request: Google_Cloud_Ml_V1_ListJobsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Ml_V1_ListJobsResponse>
  /// Describes a job.
  func getJob(request: Google_Cloud_Ml_V1_GetJobRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Ml_V1_Job>
  /// Cancels a running job.
  func cancelJob(request: Google_Cloud_Ml_V1_CancelJobRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
}

extension Google_Cloud_Ml_V1_JobServiceProvider {
  public var serviceName: Substring { return "google.cloud.ml.v1.JobService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "CreateJob":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createJob(request: request, context: context)
        }
      }

    case "ListJobs":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listJobs(request: request, context: context)
        }
      }

    case "GetJob":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getJob(request: request, context: context)
        }
      }

    case "CancelJob":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.cancelJob(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

