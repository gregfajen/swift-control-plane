//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/bigquery/connection/v1beta1/connection.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Bigquery_Connection_V1beta1_ConnectionServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Bigquery_Connection_V1beta1_ConnectionServiceClientProtocol: GRPCClient {
  func createConnection(
    _ request: Google_Cloud_Bigquery_Connection_V1beta1_CreateConnectionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Bigquery_Connection_V1beta1_CreateConnectionRequest, Google_Cloud_Bigquery_Connection_V1beta1_Connection>

  func getConnection(
    _ request: Google_Cloud_Bigquery_Connection_V1beta1_GetConnectionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Bigquery_Connection_V1beta1_GetConnectionRequest, Google_Cloud_Bigquery_Connection_V1beta1_Connection>

  func listConnections(
    _ request: Google_Cloud_Bigquery_Connection_V1beta1_ListConnectionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Bigquery_Connection_V1beta1_ListConnectionsRequest, Google_Cloud_Bigquery_Connection_V1beta1_ListConnectionsResponse>

  func updateConnection(
    _ request: Google_Cloud_Bigquery_Connection_V1beta1_UpdateConnectionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Bigquery_Connection_V1beta1_UpdateConnectionRequest, Google_Cloud_Bigquery_Connection_V1beta1_Connection>

  func updateConnectionCredential(
    _ request: Google_Cloud_Bigquery_Connection_V1beta1_UpdateConnectionCredentialRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Bigquery_Connection_V1beta1_UpdateConnectionCredentialRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteConnection(
    _ request: Google_Cloud_Bigquery_Connection_V1beta1_DeleteConnectionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Bigquery_Connection_V1beta1_DeleteConnectionRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getIamPolicy(
    _ request: Google_Iam_V1_GetIamPolicyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Iam_V1_GetIamPolicyRequest, Google_Iam_V1_Policy>

  func setIamPolicy(
    _ request: Google_Iam_V1_SetIamPolicyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Iam_V1_SetIamPolicyRequest, Google_Iam_V1_Policy>

  func testIamPermissions(
    _ request: Google_Iam_V1_TestIamPermissionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Iam_V1_TestIamPermissionsRequest, Google_Iam_V1_TestIamPermissionsResponse>

}

extension Google_Cloud_Bigquery_Connection_V1beta1_ConnectionServiceClientProtocol {

  /// Creates a new connection.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateConnection.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createConnection(
    _ request: Google_Cloud_Bigquery_Connection_V1beta1_CreateConnectionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Bigquery_Connection_V1beta1_CreateConnectionRequest, Google_Cloud_Bigquery_Connection_V1beta1_Connection> {
    return self.makeUnaryCall(
      path: "/google.cloud.bigquery.connection.v1beta1.ConnectionService/CreateConnection",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns specified connection.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetConnection.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getConnection(
    _ request: Google_Cloud_Bigquery_Connection_V1beta1_GetConnectionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Bigquery_Connection_V1beta1_GetConnectionRequest, Google_Cloud_Bigquery_Connection_V1beta1_Connection> {
    return self.makeUnaryCall(
      path: "/google.cloud.bigquery.connection.v1beta1.ConnectionService/GetConnection",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns a list of connections in the given project.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListConnections.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listConnections(
    _ request: Google_Cloud_Bigquery_Connection_V1beta1_ListConnectionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Bigquery_Connection_V1beta1_ListConnectionsRequest, Google_Cloud_Bigquery_Connection_V1beta1_ListConnectionsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.bigquery.connection.v1beta1.ConnectionService/ListConnections",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates the specified connection. For security reasons, also resets
  /// credential if connection properties are in the update field mask.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateConnection.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateConnection(
    _ request: Google_Cloud_Bigquery_Connection_V1beta1_UpdateConnectionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Bigquery_Connection_V1beta1_UpdateConnectionRequest, Google_Cloud_Bigquery_Connection_V1beta1_Connection> {
    return self.makeUnaryCall(
      path: "/google.cloud.bigquery.connection.v1beta1.ConnectionService/UpdateConnection",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Sets the credential for the specified connection.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateConnectionCredential.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateConnectionCredential(
    _ request: Google_Cloud_Bigquery_Connection_V1beta1_UpdateConnectionCredentialRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Bigquery_Connection_V1beta1_UpdateConnectionCredentialRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.bigquery.connection.v1beta1.ConnectionService/UpdateConnectionCredential",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes connection and associated credential.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteConnection.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteConnection(
    _ request: Google_Cloud_Bigquery_Connection_V1beta1_DeleteConnectionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Bigquery_Connection_V1beta1_DeleteConnectionRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.bigquery.connection.v1beta1.ConnectionService/DeleteConnection",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets the access control policy for a resource.
  /// Returns an empty policy if the resource exists and does not have a policy
  /// set.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetIamPolicy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getIamPolicy(
    _ request: Google_Iam_V1_GetIamPolicyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Iam_V1_GetIamPolicyRequest, Google_Iam_V1_Policy> {
    return self.makeUnaryCall(
      path: "/google.cloud.bigquery.connection.v1beta1.ConnectionService/GetIamPolicy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Sets the access control policy on the specified resource. Replaces any
  /// existing policy.
  ///
  /// Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and PERMISSION_DENIED
  ///
  /// - Parameters:
  ///   - request: Request to send to SetIamPolicy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setIamPolicy(
    _ request: Google_Iam_V1_SetIamPolicyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Iam_V1_SetIamPolicyRequest, Google_Iam_V1_Policy> {
    return self.makeUnaryCall(
      path: "/google.cloud.bigquery.connection.v1beta1.ConnectionService/SetIamPolicy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns permissions that a caller has on the specified resource.
  /// If the resource does not exist, this will return an empty set of
  /// permissions, not a NOT_FOUND error.
  ///
  /// Note: This operation is designed to be used for building permission-aware
  /// UIs and command-line tools, not for authorization checking. This operation
  /// may "fail open" without warning.
  ///
  /// - Parameters:
  ///   - request: Request to send to TestIamPermissions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func testIamPermissions(
    _ request: Google_Iam_V1_TestIamPermissionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Iam_V1_TestIamPermissionsRequest, Google_Iam_V1_TestIamPermissionsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.bigquery.connection.v1beta1.ConnectionService/TestIamPermissions",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Bigquery_Connection_V1beta1_ConnectionServiceClient: Google_Cloud_Bigquery_Connection_V1beta1_ConnectionServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.bigquery.connection.v1beta1.ConnectionService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Bigquery_Connection_V1beta1_ConnectionServiceProvider: CallHandlerProvider {
  /// Creates a new connection.
  func createConnection(request: Google_Cloud_Bigquery_Connection_V1beta1_CreateConnectionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Bigquery_Connection_V1beta1_Connection>
  /// Returns specified connection.
  func getConnection(request: Google_Cloud_Bigquery_Connection_V1beta1_GetConnectionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Bigquery_Connection_V1beta1_Connection>
  /// Returns a list of connections in the given project.
  func listConnections(request: Google_Cloud_Bigquery_Connection_V1beta1_ListConnectionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Bigquery_Connection_V1beta1_ListConnectionsResponse>
  /// Updates the specified connection. For security reasons, also resets
  /// credential if connection properties are in the update field mask.
  func updateConnection(request: Google_Cloud_Bigquery_Connection_V1beta1_UpdateConnectionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Bigquery_Connection_V1beta1_Connection>
  /// Sets the credential for the specified connection.
  func updateConnectionCredential(request: Google_Cloud_Bigquery_Connection_V1beta1_UpdateConnectionCredentialRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Deletes connection and associated credential.
  func deleteConnection(request: Google_Cloud_Bigquery_Connection_V1beta1_DeleteConnectionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Gets the access control policy for a resource.
  /// Returns an empty policy if the resource exists and does not have a policy
  /// set.
  func getIamPolicy(request: Google_Iam_V1_GetIamPolicyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_Policy>
  /// Sets the access control policy on the specified resource. Replaces any
  /// existing policy.
  ///
  /// Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and PERMISSION_DENIED
  func setIamPolicy(request: Google_Iam_V1_SetIamPolicyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_Policy>
  /// Returns permissions that a caller has on the specified resource.
  /// If the resource does not exist, this will return an empty set of
  /// permissions, not a NOT_FOUND error.
  ///
  /// Note: This operation is designed to be used for building permission-aware
  /// UIs and command-line tools, not for authorization checking. This operation
  /// may "fail open" without warning.
  func testIamPermissions(request: Google_Iam_V1_TestIamPermissionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_TestIamPermissionsResponse>
}

extension Google_Cloud_Bigquery_Connection_V1beta1_ConnectionServiceProvider {
  public var serviceName: Substring { return "google.cloud.bigquery.connection.v1beta1.ConnectionService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "CreateConnection":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createConnection(request: request, context: context)
        }
      }

    case "GetConnection":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getConnection(request: request, context: context)
        }
      }

    case "ListConnections":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listConnections(request: request, context: context)
        }
      }

    case "UpdateConnection":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateConnection(request: request, context: context)
        }
      }

    case "UpdateConnectionCredential":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateConnectionCredential(request: request, context: context)
        }
      }

    case "DeleteConnection":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteConnection(request: request, context: context)
        }
      }

    case "GetIamPolicy":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getIamPolicy(request: request, context: context)
        }
      }

    case "SetIamPolicy":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.setIamPolicy(request: request, context: context)
        }
      }

    case "TestIamPermissions":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.testIamPermissions(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

