// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1beta1/model.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// A trained machine learning Model.
public struct Google_Cloud_Aiplatform_V1beta1_Model {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// The resource name of the Model.
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  /// Required. The display name of the Model.
  /// The name can be up to 128 characters long and can be consist of any UTF-8
  /// characters.
  public var displayName: String {
    get {return _storage._displayName}
    set {_uniqueStorage()._displayName = newValue}
  }

  /// The description of the Model.
  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  /// The schemata that describe formats of the Model's predictions and
  /// explanations as given and returned via
  /// [PredictionService.Predict][google.cloud.aiplatform.v1beta1.PredictionService.Predict] and [PredictionService.Explain][google.cloud.aiplatform.v1beta1.PredictionService.Explain].
  public var predictSchemata: Google_Cloud_Aiplatform_V1beta1_PredictSchemata {
    get {return _storage._predictSchemata ?? Google_Cloud_Aiplatform_V1beta1_PredictSchemata()}
    set {_uniqueStorage()._predictSchemata = newValue}
  }
  /// Returns true if `predictSchemata` has been explicitly set.
  public var hasPredictSchemata: Bool {return _storage._predictSchemata != nil}
  /// Clears the value of `predictSchemata`. Subsequent reads from it will return its default value.
  public mutating func clearPredictSchemata() {_uniqueStorage()._predictSchemata = nil}

  /// Immutable. Points to a YAML file stored on Google Cloud Storage describing additional
  /// information about the Model, that is specific to it. Unset if the Model
  /// does not have any additional information.
  /// The schema is defined as an OpenAPI 3.0.2
  /// [Schema Object](https://tinyurl.com/y538mdwt#schema-object).
  /// AutoML Models always have this field populated by AI Platform, if no
  /// additional metadata is needed this field is set to an empty string.
  /// Note: The URI given on output will be immutable and probably different,
  /// including the URI scheme, than the one given on input. The output URI will
  /// point to a location where the user only has a read access.
  public var metadataSchemaUri: String {
    get {return _storage._metadataSchemaUri}
    set {_uniqueStorage()._metadataSchemaUri = newValue}
  }

  /// Immutable. An additional information about the Model; the schema of the metadata can
  /// be found in [metadata_schema][google.cloud.aiplatform.v1beta1.Model.metadata_schema_uri].
  /// Unset if the Model does not have any additional information.
  public var metadata: SwiftProtobuf.Google_Protobuf_Value {
    get {return _storage._metadata ?? SwiftProtobuf.Google_Protobuf_Value()}
    set {_uniqueStorage()._metadata = newValue}
  }
  /// Returns true if `metadata` has been explicitly set.
  public var hasMetadata: Bool {return _storage._metadata != nil}
  /// Clears the value of `metadata`. Subsequent reads from it will return its default value.
  public mutating func clearMetadata() {_uniqueStorage()._metadata = nil}

  /// Output only. The formats in which this Model may be exported. If empty, this Model is
  /// not available for export.
  public var supportedExportFormats: [Google_Cloud_Aiplatform_V1beta1_Model.ExportFormat] {
    get {return _storage._supportedExportFormats}
    set {_uniqueStorage()._supportedExportFormats = newValue}
  }

  /// Output only. The resource name of the TrainingPipeline that uploaded this Model, if any.
  public var trainingPipeline: String {
    get {return _storage._trainingPipeline}
    set {_uniqueStorage()._trainingPipeline = newValue}
  }

  /// Input only. The specification of the container that is to be used when deploying
  /// this Model. The specification is ingested upon
  /// [ModelService.UploadModel][google.cloud.aiplatform.v1beta1.ModelService.UploadModel], and all binaries it contains are copied
  /// and stored internally by AI Platform.
  /// Not present for AutoML Models.
  public var containerSpec: Google_Cloud_Aiplatform_V1beta1_ModelContainerSpec {
    get {return _storage._containerSpec ?? Google_Cloud_Aiplatform_V1beta1_ModelContainerSpec()}
    set {_uniqueStorage()._containerSpec = newValue}
  }
  /// Returns true if `containerSpec` has been explicitly set.
  public var hasContainerSpec: Bool {return _storage._containerSpec != nil}
  /// Clears the value of `containerSpec`. Subsequent reads from it will return its default value.
  public mutating func clearContainerSpec() {_uniqueStorage()._containerSpec = nil}

  /// Immutable. The path to the directory containing the Model artifact and any of its
  /// supporting files.
  /// Not present for AutoML Models.
  public var artifactUri: String {
    get {return _storage._artifactUri}
    set {_uniqueStorage()._artifactUri = newValue}
  }

  /// Output only. When this Model is deployed, its prediction resources are described by the
  /// `prediction_resources` field of the [Endpoint.deployed_models][google.cloud.aiplatform.v1beta1.Endpoint.deployed_models] object.
  /// Because not all Models support all resource configuration types, the
  /// configuration types this Model supports are listed here. If no
  /// configuration types are listed, the Model cannot be deployed to an
  /// [Endpoint][google.cloud.aiplatform.v1beta1.Endpoint] and does not support
  /// online predictions ([PredictionService.Predict][google.cloud.aiplatform.v1beta1.PredictionService.Predict] or
  /// [PredictionService.Explain][google.cloud.aiplatform.v1beta1.PredictionService.Explain]). Such a Model can serve predictions by
  /// using a [BatchPredictionJob][google.cloud.aiplatform.v1beta1.BatchPredictionJob], if it has at least one entry each in
  /// [supported_input_storage_formats][google.cloud.aiplatform.v1beta1.Model.supported_input_storage_formats] and
  /// [supported_output_storage_formats][google.cloud.aiplatform.v1beta1.Model.supported_output_storage_formats].
  public var supportedDeploymentResourcesTypes: [Google_Cloud_Aiplatform_V1beta1_Model.DeploymentResourcesType] {
    get {return _storage._supportedDeploymentResourcesTypes}
    set {_uniqueStorage()._supportedDeploymentResourcesTypes = newValue}
  }

  /// Output only. The formats this Model supports in
  /// [BatchPredictionJob.input_config][google.cloud.aiplatform.v1beta1.BatchPredictionJob.input_config]. If
  /// [PredictSchemata.instance_schema_uri][google.cloud.aiplatform.v1beta1.PredictSchemata.instance_schema_uri] exists, the instances
  /// should be given as per that schema.
  ///
  /// The possible formats are:
  ///
  /// * `jsonl`
  /// The JSON Lines format, where each instance is a single line. Uses
  /// [GcsSource][google.cloud.aiplatform.v1beta1.BatchPredictionJob.InputConfig.gcs_source].
  ///
  /// * `csv`
  /// The CSV format, where each instance is a single comma-separated line.
  /// The first line in the file is the header, containing comma-separated field
  /// names. Uses [GcsSource][google.cloud.aiplatform.v1beta1.BatchPredictionJob.InputConfig.gcs_source].
  ///
  /// * `tf-record`
  /// The TFRecord format, where each instance is a single record in tfrecord
  /// syntax. Uses [GcsSource][google.cloud.aiplatform.v1beta1.BatchPredictionJob.InputConfig.gcs_source].
  ///
  /// * `tf-record-gzip`
  /// Similar to `tf-record`, but the file is gzipped. Uses
  /// [GcsSource][google.cloud.aiplatform.v1beta1.BatchPredictionJob.InputConfig.gcs_source].
  ///
  /// * `bigquery`
  /// Each instance is a single row in BigQuery. Uses
  /// [BigQuerySource][google.cloud.aiplatform.v1beta1.BatchPredictionJob.InputConfig.bigquery_source].
  ///
  ///
  ///
  /// If this Model doesn't support any of these formats it means it cannot be
  /// used with a [BatchPredictionJob][google.cloud.aiplatform.v1beta1.BatchPredictionJob]. However, if it has
  /// [supported_deployment_resources_types][google.cloud.aiplatform.v1beta1.Model.supported_deployment_resources_types], it could serve online
  /// predictions by using [PredictionService.Predict][google.cloud.aiplatform.v1beta1.PredictionService.Predict] or
  /// [PredictionService.Explain][google.cloud.aiplatform.v1beta1.PredictionService.Explain].
  public var supportedInputStorageFormats: [String] {
    get {return _storage._supportedInputStorageFormats}
    set {_uniqueStorage()._supportedInputStorageFormats = newValue}
  }

  /// Output only. The formats this Model supports in
  /// [BatchPredictionJob.output_config][google.cloud.aiplatform.v1beta1.BatchPredictionJob.output_config]. If both
  /// [PredictSchemata.instance_schema_uri][google.cloud.aiplatform.v1beta1.PredictSchemata.instance_schema_uri] and
  /// [PredictSchemata.prediction_schema_uri][google.cloud.aiplatform.v1beta1.PredictSchemata.prediction_schema_uri] exist, the predictions
  /// are returned together with their instances. In other words, the
  /// prediction has the original instance data first, followed
  /// by the actual prediction content (as per the schema).
  ///
  /// The possible formats are:
  ///
  /// * `jsonl`
  /// The JSON Lines format, where each prediction is a single line. Uses
  /// [GcsDestination][google.cloud.aiplatform.v1beta1.BatchPredictionJob.OutputConfig.gcs_destination].
  ///
  /// * `csv`
  /// The CSV format, where each prediction is a single comma-separated line.
  /// The first line in the file is the header, containing comma-separated field
  /// names. Uses
  /// [GcsDestination][google.cloud.aiplatform.v1beta1.BatchPredictionJob.OutputConfig.gcs_destination].
  ///
  /// * `bigquery`
  /// Each prediction is a single row in a BigQuery table, uses
  /// [BigQueryDestination][google.cloud.aiplatform.v1beta1.BatchPredictionJob.OutputConfig.bigquery_destination]
  /// .
  ///
  ///
  /// If this Model doesn't support any of these formats it means it cannot be
  /// used with a [BatchPredictionJob][google.cloud.aiplatform.v1beta1.BatchPredictionJob]. However, if it has
  /// [supported_deployment_resources_types][google.cloud.aiplatform.v1beta1.Model.supported_deployment_resources_types], it could serve online
  /// predictions by using [PredictionService.Predict][google.cloud.aiplatform.v1beta1.PredictionService.Predict] or
  /// [PredictionService.Explain][google.cloud.aiplatform.v1beta1.PredictionService.Explain].
  public var supportedOutputStorageFormats: [String] {
    get {return _storage._supportedOutputStorageFormats}
    set {_uniqueStorage()._supportedOutputStorageFormats = newValue}
  }

  /// Output only. Timestamp when this Model was uploaded into AI Platform.
  public var createTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._createTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._createTime = newValue}
  }
  /// Returns true if `createTime` has been explicitly set.
  public var hasCreateTime: Bool {return _storage._createTime != nil}
  /// Clears the value of `createTime`. Subsequent reads from it will return its default value.
  public mutating func clearCreateTime() {_uniqueStorage()._createTime = nil}

  /// Output only. Timestamp when this Model was most recently updated.
  public var updateTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._updateTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._updateTime = newValue}
  }
  /// Returns true if `updateTime` has been explicitly set.
  public var hasUpdateTime: Bool {return _storage._updateTime != nil}
  /// Clears the value of `updateTime`. Subsequent reads from it will return its default value.
  public mutating func clearUpdateTime() {_uniqueStorage()._updateTime = nil}

  /// Output only. The pointers to DeployedModels created from this Model. Note that
  /// Model could have been deployed to Endpoints in different Locations.
  public var deployedModels: [Google_Cloud_Aiplatform_V1beta1_DeployedModelRef] {
    get {return _storage._deployedModels}
    set {_uniqueStorage()._deployedModels = newValue}
  }

  /// Output only. The default explanation specification for this Model.
  ///
  /// Model can be used for [requesting explanation][google.cloud.aiplatform.v1beta1.PredictionService.Explain]
  /// after being [deployed][google.cloud.aiplatform.v1beta1.EndpointService.DeployModel] iff it is populated.
  ///
  /// All fields of the explanation_spec can be overridden by
  /// [explanation_spec][google.cloud.aiplatform.v1beta1.DeployedModel.explanation_spec] of
  /// [DeployModelRequest.deployed_model][google.cloud.aiplatform.v1beta1.DeployModelRequest.deployed_model].
  ///
  /// This field is populated only for tabular AutoML Models.
  /// Specifying it with [ModelService.UploadModel][google.cloud.aiplatform.v1beta1.ModelService.UploadModel] is not supported.
  public var explanationSpec: Google_Cloud_Aiplatform_V1beta1_ExplanationSpec {
    get {return _storage._explanationSpec ?? Google_Cloud_Aiplatform_V1beta1_ExplanationSpec()}
    set {_uniqueStorage()._explanationSpec = newValue}
  }
  /// Returns true if `explanationSpec` has been explicitly set.
  public var hasExplanationSpec: Bool {return _storage._explanationSpec != nil}
  /// Clears the value of `explanationSpec`. Subsequent reads from it will return its default value.
  public mutating func clearExplanationSpec() {_uniqueStorage()._explanationSpec = nil}

  /// Used to perform consistent read-modify-write updates. If not set, a blind
  /// "overwrite" update happens.
  public var etag: String {
    get {return _storage._etag}
    set {_uniqueStorage()._etag = newValue}
  }

  /// The labels with user-defined metadata to organize your Models.
  ///
  /// Label keys and values can be no longer than 64 characters
  /// (Unicode codepoints), can only contain lowercase letters, numeric
  /// characters, underscores and dashes. International characters are allowed.
  ///
  /// See https://goo.gl/xmQnxf for more information and examples of labels.
  public var labels: Dictionary<String,String> {
    get {return _storage._labels}
    set {_uniqueStorage()._labels = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// Identifies a type of Model's prediction resources.
  public enum DeploymentResourcesType: SwiftProtobuf.Enum {
    public typealias RawValue = Int

    /// Should not be used.
    case unspecified // = 0

    /// Resources that are dedicated to the [DeployedModel][google.cloud.aiplatform.v1beta1.DeployedModel], and that need a
    /// higher degree of manual configuration.
    case dedicatedResources // = 1

    /// Resources that to large degree are decided by AI Platform, and require
    /// only a modest additional configuration.
    case automaticResources // = 2
    case UNRECOGNIZED(Int)

    public init() {
      self = .unspecified
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unspecified
      case 1: self = .dedicatedResources
      case 2: self = .automaticResources
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unspecified: return 0
      case .dedicatedResources: return 1
      case .automaticResources: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  /// Represents a supported by the Model export format.
  /// All formats export to Google Cloud Storage.
  public struct ExportFormat {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// Output only. The ID of the export format.
    /// The possible format IDs are:
    ///
    /// * `tflite`
    /// Used for Android mobile devices.
    ///
    /// * `edgetpu-tflite`
    /// Used for [Edge TPU](https://cloud.google.com/edge-tpu/) devices.
    ///
    /// * `tf-saved-model`
    /// A tensorflow model in SavedModel format.
    ///
    /// * `tf-js`
    /// A [TensorFlow.js](https://www.tensorflow.org/js) model that can be used
    /// in the browser and in Node.js using JavaScript.
    ///
    /// * `core-ml`
    /// Used for iOS mobile devices.
    ///
    /// * `custom-trained`
    /// A Model that was uploaded or trained by custom code.
    public var id: String = String()

    /// Output only. The content of this Model that may be exported.
    public var exportableContents: [Google_Cloud_Aiplatform_V1beta1_Model.ExportFormat.ExportableContent] = []

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    /// The Model content that can be exported.
    public enum ExportableContent: SwiftProtobuf.Enum {
      public typealias RawValue = Int

      /// Should not be used.
      case unspecified // = 0

      /// Model artifact and any of its supported files. Will be exported to the
      /// location specified by the `artifactDestination` field of the
      /// [ExportModelRequest.output_config][google.cloud.aiplatform.v1beta1.ExportModelRequest.output_config] object.
      case artifact // = 1

      /// The container image that is to be used when deploying this Model. Will
      /// be exported to the location specified by the `imageDestination` field
      /// of the [ExportModelRequest.output_config][google.cloud.aiplatform.v1beta1.ExportModelRequest.output_config] object.
      case image // = 2
      case UNRECOGNIZED(Int)

      public init() {
        self = .unspecified
      }

      public init?(rawValue: Int) {
        switch rawValue {
        case 0: self = .unspecified
        case 1: self = .artifact
        case 2: self = .image
        default: self = .UNRECOGNIZED(rawValue)
        }
      }

      public var rawValue: Int {
        switch self {
        case .unspecified: return 0
        case .artifact: return 1
        case .image: return 2
        case .UNRECOGNIZED(let i): return i
        }
      }

    }

    public init() {}
  }

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

#if swift(>=4.2)

extension Google_Cloud_Aiplatform_V1beta1_Model.DeploymentResourcesType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Google_Cloud_Aiplatform_V1beta1_Model.DeploymentResourcesType] = [
    .unspecified,
    .dedicatedResources,
    .automaticResources,
  ]
}

extension Google_Cloud_Aiplatform_V1beta1_Model.ExportFormat.ExportableContent: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Google_Cloud_Aiplatform_V1beta1_Model.ExportFormat.ExportableContent] = [
    .unspecified,
    .artifact,
    .image,
  ]
}

#endif  // swift(>=4.2)

/// Contains the schemata used in Model's predictions and explanations via
/// [PredictionService.Predict][google.cloud.aiplatform.v1beta1.PredictionService.Predict], [PredictionService.Explain][google.cloud.aiplatform.v1beta1.PredictionService.Explain] and
/// [BatchPredictionJob][google.cloud.aiplatform.v1beta1.BatchPredictionJob].
public struct Google_Cloud_Aiplatform_V1beta1_PredictSchemata {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Immutable. Points to a YAML file stored on Google Cloud Storage describing the format
  /// of a single instance, which are used in [PredictRequest.instances][google.cloud.aiplatform.v1beta1.PredictRequest.instances],
  /// [ExplainRequest.instances][google.cloud.aiplatform.v1beta1.ExplainRequest.instances] and
  /// [BatchPredictionJob.input_config][google.cloud.aiplatform.v1beta1.BatchPredictionJob.input_config].
  /// The schema is defined as an OpenAPI 3.0.2
  /// [Schema Object](https://tinyurl.com/y538mdwt#schema-object).
  /// AutoML Models always have this field populated by AI Platform.
  /// Note: The URI given on output will be immutable and probably different,
  /// including the URI scheme, than the one given on input. The output URI will
  /// point to a location where the user only has a read access.
  public var instanceSchemaUri: String = String()

  /// Immutable. Points to a YAML file stored on Google Cloud Storage describing the
  /// parameters of prediction and explanation via
  /// [PredictRequest.parameters][google.cloud.aiplatform.v1beta1.PredictRequest.parameters], [ExplainRequest.parameters][google.cloud.aiplatform.v1beta1.ExplainRequest.parameters] and
  /// [BatchPredictionJob.model_parameters][google.cloud.aiplatform.v1beta1.BatchPredictionJob.model_parameters].
  /// The schema is defined as an OpenAPI 3.0.2
  /// [Schema Object](https://tinyurl.com/y538mdwt#schema-object).
  /// AutoML Models always have this field populated by AI Platform, if no
  /// parameters are supported it is set to an empty string.
  /// Note: The URI given on output will be immutable and probably different,
  /// including the URI scheme, than the one given on input. The output URI will
  /// point to a location where the user only has a read access.
  public var parametersSchemaUri: String = String()

  /// Immutable. Points to a YAML file stored on Google Cloud Storage describing the format
  /// of a single prediction produced by this Model, which are returned via
  /// [PredictResponse.predictions][google.cloud.aiplatform.v1beta1.PredictResponse.predictions], [ExplainResponse.explanations][google.cloud.aiplatform.v1beta1.ExplainResponse.explanations], and
  /// [BatchPredictionJob.output_config][google.cloud.aiplatform.v1beta1.BatchPredictionJob.output_config].
  /// The schema is defined as an OpenAPI 3.0.2
  /// [Schema Object](https://tinyurl.com/y538mdwt#schema-object).
  /// AutoML Models always have this field populated by AI Platform.
  /// Note: The URI given on output will be immutable and probably different,
  /// including the URI scheme, than the one given on input. The output URI will
  /// point to a location where the user only has a read access.
  public var predictionSchemaUri: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

/// Specification of a container for serving predictions. This message is a
/// subset of the Kubernetes Container v1 core
/// [specification](https://tinyurl.com/k8s-io-api/v1.18/#container-v1-core).
public struct Google_Cloud_Aiplatform_V1beta1_ModelContainerSpec {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Required. Immutable. URI of the Docker image to be used as the custom container for serving
  /// predictions. This URI must identify an image in Artifact Registry or
  /// Container Registry. Learn more about the container publishing
  /// requirements, including permissions requirements for the AI Platform
  /// Service Agent,
  /// [here](https://tinyurl.com/cust-cont-reqs#publishing).
  ///
  /// The container image is ingested upon [ModelService.UploadModel][google.cloud.aiplatform.v1beta1.ModelService.UploadModel], stored
  /// internally, and this original path is afterwards not used.
  ///
  /// To learn about the requirements for the Docker image itself, see
  /// [Custom container requirements](https://tinyurl.com/cust-cont-reqs).
  public var imageUri: String = String()

  /// Immutable. Specifies the command that runs when the container starts. This overrides
  /// the container's
  /// [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint).
  /// Specify this field as an array of executable and arguments, similar to a
  /// Docker `ENTRYPOINT`'s "exec" form, not its "shell" form.
  ///
  /// If you do not specify this field, then the container's `ENTRYPOINT` runs,
  /// in conjunction with the [args][google.cloud.aiplatform.v1beta1.ModelContainerSpec.args] field or the
  /// container's [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd),
  /// if either exists. If this field is not specified and the container does not
  /// have an `ENTRYPOINT`, then refer to the Docker documentation about how
  /// `CMD` and `ENTRYPOINT`
  /// [interact](https://tinyurl.com/h3kdcgs).
  ///
  /// If you specify this field, then you can also specify the `args` field to
  /// provide additional arguments for this command. However, if you specify this
  /// field, then the container's `CMD` is ignored. See the
  /// [Kubernetes documentation](https://tinyurl.com/y8bvllf4) about how the
  /// `command` and `args` fields interact with a container's `ENTRYPOINT` and
  /// `CMD`.
  ///
  /// In this field, you can reference environment variables
  /// [set by AI Platform](https://tinyurl.com/cust-cont-reqs#aip-variables)
  /// and environment variables set in the [env][google.cloud.aiplatform.v1beta1.ModelContainerSpec.env] field.
  /// You cannot reference environment variables set in the Docker image. In
  /// order for environment variables to be expanded, reference them by using the
  /// following syntax:
  /// <code>$(<var>VARIABLE_NAME</var>)</code>
  /// Note that this differs from Bash variable expansion, which does not use
  /// parentheses. If a variable cannot be resolved, the reference in the input
  /// string is used unchanged. To avoid variable expansion, you can escape this
  /// syntax with `$$`; for example:
  /// <code>$$(<var>VARIABLE_NAME</var>)</code>
  /// This field corresponds to the `command` field of the Kubernetes Containers
  /// [v1 core API](https://tinyurl.com/k8s-io-api/v1.18/#container-v1-core).
  public var command: [String] = []

  /// Immutable. Specifies arguments for the command that runs when the container starts.
  /// This overrides the container's
  /// [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd). Specify
  /// this field as an array of executable and arguments, similar to a Docker
  /// `CMD`'s "default parameters" form.
  ///
  /// If you don't specify this field but do specify the
  /// [command][google.cloud.aiplatform.v1beta1.ModelContainerSpec.command] field, then the command from the
  /// `command` field runs without any additional arguments. See the
  /// [Kubernetes documentation](https://tinyurl.com/y8bvllf4) about how the
  /// `command` and `args` fields interact with a container's `ENTRYPOINT` and
  /// `CMD`.
  ///
  /// If you don't specify this field and don't specify the `command` field,
  /// then the container's
  /// [`ENTRYPOINT`](https://docs.docker.com/engine/reference/builder/#cmd) and
  /// `CMD` determine what runs based on their default behavior. See the Docker
  /// documentation about how `CMD` and `ENTRYPOINT`
  /// [interact](https://tinyurl.com/h3kdcgs).
  ///
  /// In this field, you can reference environment variables
  /// [set by AI Platform](https://tinyurl.com/cust-cont-reqs#aip-variables)
  /// and environment variables set in the [env][google.cloud.aiplatform.v1beta1.ModelContainerSpec.env] field.
  /// You cannot reference environment variables set in the Docker image. In
  /// order for environment variables to be expanded, reference them by using the
  /// following syntax:
  /// <code>$(<var>VARIABLE_NAME</var>)</code>
  /// Note that this differs from Bash variable expansion, which does not use
  /// parentheses. If a variable cannot be resolved, the reference in the input
  /// string is used unchanged. To avoid variable expansion, you can escape this
  /// syntax with `$$`; for example:
  /// <code>$$(<var>VARIABLE_NAME</var>)</code>
  /// This field corresponds to the `args` field of the Kubernetes Containers
  /// [v1 core API](https://tinyurl.com/k8s-io-api/v1.18/#container-v1-core).
  public var args: [String] = []

  /// Immutable. List of environment variables to set in the container. After the container
  /// starts running, code running in the container can read these environment
  /// variables.
  ///
  /// Additionally, the [command][google.cloud.aiplatform.v1beta1.ModelContainerSpec.command] and
  /// [args][google.cloud.aiplatform.v1beta1.ModelContainerSpec.args] fields can reference these variables. Later
  /// entries in this list can also reference earlier entries. For example, the
  /// following example sets the variable `VAR_2` to have the value `foo bar`:
  ///
  /// ```json
  /// [
  ///   {
  ///     "name": "VAR_1",
  ///     "value": "foo"
  ///   },
  ///   {
  ///     "name": "VAR_2",
  ///     "value": "$(VAR_1) bar"
  ///   }
  /// ]
  /// ```
  ///
  /// If you switch the order of the variables in the example, then the expansion
  /// does not occur.
  ///
  /// This field corresponds to the `env` field of the Kubernetes Containers
  /// [v1 core API](https://tinyurl.com/k8s-io-api/v1.18/#container-v1-core).
  public var env: [Google_Cloud_Aiplatform_V1beta1_EnvVar] = []

  /// Immutable. List of ports to expose from the container. AI Platform sends any
  /// prediction requests that it receives to the first port on this list. AI
  /// Platform also sends
  /// [liveness and health checks](https://tinyurl.com/cust-cont-reqs#health)
  /// to this port.
  ///
  /// If you do not specify this field, it defaults to following value:
  ///
  /// ```json
  /// [
  ///   {
  ///     "containerPort": 8080
  ///   }
  /// ]
  /// ```
  ///
  /// AI Platform does not use ports other than the first one listed. This field
  /// corresponds to the `ports` field of the Kubernetes Containers
  /// [v1 core API](https://tinyurl.com/k8s-io-api/v1.18/#container-v1-core).
  public var ports: [Google_Cloud_Aiplatform_V1beta1_Port] = []

  /// Immutable. HTTP path on the container to send prediction requests to. AI Platform
  /// forwards requests sent using
  /// [projects.locations.endpoints.predict][google.cloud.aiplatform.v1beta1.PredictionService.Predict] to this
  /// path on the container's IP address and port. AI Platform then returns the
  /// container's response in the API response.
  ///
  /// For example, if you set this field to `/foo`, then when AI Platform
  /// receives a prediction request, it forwards the request body in a POST
  /// request to the following URL on the container:
  /// <code>localhost:<var>PORT</var>/foo</code>
  /// <var>PORT</var> refers to the first value of this `ModelContainerSpec`'s
  /// [ports][google.cloud.aiplatform.v1beta1.ModelContainerSpec.ports] field.
  ///
  /// If you don't specify this field, it defaults to the following value when
  /// you [deploy this Model to an Endpoint][google.cloud.aiplatform.v1beta1.EndpointService.DeployModel]:
  /// <code>/v1/endpoints/<var>ENDPOINT</var>/deployedModels/<var>DEPLOYED_MODEL</var>:predict</code>
  /// The placeholders in this value are replaced as follows:
  ///
  /// * <var>ENDPOINT</var>: The last segment (following `endpoints/`)of the
  ///   Endpoint.name][] field of the Endpoint where this Model has been
  ///   deployed. (AI Platform makes this value available to your container code
  ///   as the
  ///  [`AIP_ENDPOINT_ID`](https://tinyurl.com/cust-cont-reqs#aip-variables)
  ///  environment variable.)
  ///
  /// * <var>DEPLOYED_MODEL</var>: [DeployedModel.id][google.cloud.aiplatform.v1beta1.DeployedModel.id] of the `DeployedModel`.
  ///   (AI Platform makes this value available to your container code
  ///   as the [`AIP_DEPLOYED_MODEL_ID` environment
  ///   variable](https://tinyurl.com/cust-cont-reqs#aip-variables).)
  public var predictRoute: String = String()

  /// Immutable. HTTP path on the container to send health checkss to. AI Platform
  /// intermittently sends GET requests to this path on the container's IP
  /// address and port to check that the container is healthy. Read more about
  /// [health
  /// checks](https://tinyurl.com/cust-cont-reqs#checks).
  ///
  /// For example, if you set this field to `/bar`, then AI Platform
  /// intermittently sends a GET request to the following URL on the container:
  /// <code>localhost:<var>PORT</var>/bar</code>
  /// <var>PORT</var> refers to the first value of this `ModelContainerSpec`'s
  /// [ports][google.cloud.aiplatform.v1beta1.ModelContainerSpec.ports] field.
  ///
  /// If you don't specify this field, it defaults to the following value when
  /// you [deploy this Model to an Endpoint][google.cloud.aiplatform.v1beta1.EndpointService.DeployModel]:
  /// <code>/v1/endpoints/<var>ENDPOINT</var>/deployedModels/<var>DEPLOYED_MODEL</var>:predict</code>
  /// The placeholders in this value are replaced as follows:
  ///
  /// * <var>ENDPOINT</var>: The last segment (following `endpoints/`)of the
  ///   Endpoint.name][] field of the Endpoint where this Model has been
  ///   deployed. (AI Platform makes this value available to your container code
  ///   as the
  ///   [`AIP_ENDPOINT_ID`](https://tinyurl.com/cust-cont-reqs#aip-variables)
  ///   environment variable.)
  ///
  /// * <var>DEPLOYED_MODEL</var>: [DeployedModel.id][google.cloud.aiplatform.v1beta1.DeployedModel.id] of the `DeployedModel`.
  ///   (AI Platform makes this value available to your container code as the
  /// [`AIP_DEPLOYED_MODEL_ID`](https://tinyurl.com/cust-cont-reqs#aip-variables)
  ///   environment variable.)
  public var healthRoute: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

/// Represents a network port in a container.
public struct Google_Cloud_Aiplatform_V1beta1_Port {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// The number of the port to expose on the pod's IP address.
  /// Must be a valid port number, between 1 and 65535 inclusive.
  public var containerPort: Int32 = 0

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.aiplatform.v1beta1"

extension Google_Cloud_Aiplatform_V1beta1_Model: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Model"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .standard(proto: "display_name"),
    3: .same(proto: "description"),
    4: .standard(proto: "predict_schemata"),
    5: .standard(proto: "metadata_schema_uri"),
    6: .same(proto: "metadata"),
    20: .standard(proto: "supported_export_formats"),
    7: .standard(proto: "training_pipeline"),
    9: .standard(proto: "container_spec"),
    26: .standard(proto: "artifact_uri"),
    10: .standard(proto: "supported_deployment_resources_types"),
    11: .standard(proto: "supported_input_storage_formats"),
    12: .standard(proto: "supported_output_storage_formats"),
    13: .standard(proto: "create_time"),
    14: .standard(proto: "update_time"),
    15: .standard(proto: "deployed_models"),
    23: .standard(proto: "explanation_spec"),
    16: .same(proto: "etag"),
    17: .same(proto: "labels"),
  ]

  fileprivate class _StorageClass {
    var _name: String = String()
    var _displayName: String = String()
    var _description_p: String = String()
    var _predictSchemata: Google_Cloud_Aiplatform_V1beta1_PredictSchemata? = nil
    var _metadataSchemaUri: String = String()
    var _metadata: SwiftProtobuf.Google_Protobuf_Value? = nil
    var _supportedExportFormats: [Google_Cloud_Aiplatform_V1beta1_Model.ExportFormat] = []
    var _trainingPipeline: String = String()
    var _containerSpec: Google_Cloud_Aiplatform_V1beta1_ModelContainerSpec? = nil
    var _artifactUri: String = String()
    var _supportedDeploymentResourcesTypes: [Google_Cloud_Aiplatform_V1beta1_Model.DeploymentResourcesType] = []
    var _supportedInputStorageFormats: [String] = []
    var _supportedOutputStorageFormats: [String] = []
    var _createTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _updateTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _deployedModels: [Google_Cloud_Aiplatform_V1beta1_DeployedModelRef] = []
    var _explanationSpec: Google_Cloud_Aiplatform_V1beta1_ExplanationSpec? = nil
    var _etag: String = String()
    var _labels: Dictionary<String,String> = [:]

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _name = source._name
      _displayName = source._displayName
      _description_p = source._description_p
      _predictSchemata = source._predictSchemata
      _metadataSchemaUri = source._metadataSchemaUri
      _metadata = source._metadata
      _supportedExportFormats = source._supportedExportFormats
      _trainingPipeline = source._trainingPipeline
      _containerSpec = source._containerSpec
      _artifactUri = source._artifactUri
      _supportedDeploymentResourcesTypes = source._supportedDeploymentResourcesTypes
      _supportedInputStorageFormats = source._supportedInputStorageFormats
      _supportedOutputStorageFormats = source._supportedOutputStorageFormats
      _createTime = source._createTime
      _updateTime = source._updateTime
      _deployedModels = source._deployedModels
      _explanationSpec = source._explanationSpec
      _etag = source._etag
      _labels = source._labels
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularStringField(value: &_storage._name) }()
        case 2: try { try decoder.decodeSingularStringField(value: &_storage._displayName) }()
        case 3: try { try decoder.decodeSingularStringField(value: &_storage._description_p) }()
        case 4: try { try decoder.decodeSingularMessageField(value: &_storage._predictSchemata) }()
        case 5: try { try decoder.decodeSingularStringField(value: &_storage._metadataSchemaUri) }()
        case 6: try { try decoder.decodeSingularMessageField(value: &_storage._metadata) }()
        case 7: try { try decoder.decodeSingularStringField(value: &_storage._trainingPipeline) }()
        case 9: try { try decoder.decodeSingularMessageField(value: &_storage._containerSpec) }()
        case 10: try { try decoder.decodeRepeatedEnumField(value: &_storage._supportedDeploymentResourcesTypes) }()
        case 11: try { try decoder.decodeRepeatedStringField(value: &_storage._supportedInputStorageFormats) }()
        case 12: try { try decoder.decodeRepeatedStringField(value: &_storage._supportedOutputStorageFormats) }()
        case 13: try { try decoder.decodeSingularMessageField(value: &_storage._createTime) }()
        case 14: try { try decoder.decodeSingularMessageField(value: &_storage._updateTime) }()
        case 15: try { try decoder.decodeRepeatedMessageField(value: &_storage._deployedModels) }()
        case 16: try { try decoder.decodeSingularStringField(value: &_storage._etag) }()
        case 17: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &_storage._labels) }()
        case 20: try { try decoder.decodeRepeatedMessageField(value: &_storage._supportedExportFormats) }()
        case 23: try { try decoder.decodeSingularMessageField(value: &_storage._explanationSpec) }()
        case 26: try { try decoder.decodeSingularStringField(value: &_storage._artifactUri) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._name.isEmpty {
        try visitor.visitSingularStringField(value: _storage._name, fieldNumber: 1)
      }
      if !_storage._displayName.isEmpty {
        try visitor.visitSingularStringField(value: _storage._displayName, fieldNumber: 2)
      }
      if !_storage._description_p.isEmpty {
        try visitor.visitSingularStringField(value: _storage._description_p, fieldNumber: 3)
      }
      if let v = _storage._predictSchemata {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if !_storage._metadataSchemaUri.isEmpty {
        try visitor.visitSingularStringField(value: _storage._metadataSchemaUri, fieldNumber: 5)
      }
      if let v = _storage._metadata {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if !_storage._trainingPipeline.isEmpty {
        try visitor.visitSingularStringField(value: _storage._trainingPipeline, fieldNumber: 7)
      }
      if let v = _storage._containerSpec {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if !_storage._supportedDeploymentResourcesTypes.isEmpty {
        try visitor.visitPackedEnumField(value: _storage._supportedDeploymentResourcesTypes, fieldNumber: 10)
      }
      if !_storage._supportedInputStorageFormats.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._supportedInputStorageFormats, fieldNumber: 11)
      }
      if !_storage._supportedOutputStorageFormats.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._supportedOutputStorageFormats, fieldNumber: 12)
      }
      if let v = _storage._createTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 13)
      }
      if let v = _storage._updateTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      }
      if !_storage._deployedModels.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._deployedModels, fieldNumber: 15)
      }
      if !_storage._etag.isEmpty {
        try visitor.visitSingularStringField(value: _storage._etag, fieldNumber: 16)
      }
      if !_storage._labels.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: _storage._labels, fieldNumber: 17)
      }
      if !_storage._supportedExportFormats.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._supportedExportFormats, fieldNumber: 20)
      }
      if let v = _storage._explanationSpec {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 23)
      }
      if !_storage._artifactUri.isEmpty {
        try visitor.visitSingularStringField(value: _storage._artifactUri, fieldNumber: 26)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1beta1_Model, rhs: Google_Cloud_Aiplatform_V1beta1_Model) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._name != rhs_storage._name {return false}
        if _storage._displayName != rhs_storage._displayName {return false}
        if _storage._description_p != rhs_storage._description_p {return false}
        if _storage._predictSchemata != rhs_storage._predictSchemata {return false}
        if _storage._metadataSchemaUri != rhs_storage._metadataSchemaUri {return false}
        if _storage._metadata != rhs_storage._metadata {return false}
        if _storage._supportedExportFormats != rhs_storage._supportedExportFormats {return false}
        if _storage._trainingPipeline != rhs_storage._trainingPipeline {return false}
        if _storage._containerSpec != rhs_storage._containerSpec {return false}
        if _storage._artifactUri != rhs_storage._artifactUri {return false}
        if _storage._supportedDeploymentResourcesTypes != rhs_storage._supportedDeploymentResourcesTypes {return false}
        if _storage._supportedInputStorageFormats != rhs_storage._supportedInputStorageFormats {return false}
        if _storage._supportedOutputStorageFormats != rhs_storage._supportedOutputStorageFormats {return false}
        if _storage._createTime != rhs_storage._createTime {return false}
        if _storage._updateTime != rhs_storage._updateTime {return false}
        if _storage._deployedModels != rhs_storage._deployedModels {return false}
        if _storage._explanationSpec != rhs_storage._explanationSpec {return false}
        if _storage._etag != rhs_storage._etag {return false}
        if _storage._labels != rhs_storage._labels {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1beta1_Model.DeploymentResourcesType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "DEPLOYMENT_RESOURCES_TYPE_UNSPECIFIED"),
    1: .same(proto: "DEDICATED_RESOURCES"),
    2: .same(proto: "AUTOMATIC_RESOURCES"),
  ]
}

extension Google_Cloud_Aiplatform_V1beta1_Model.ExportFormat: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Google_Cloud_Aiplatform_V1beta1_Model.protoMessageName + ".ExportFormat"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "id"),
    2: .standard(proto: "exportable_contents"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.id) }()
      case 2: try { try decoder.decodeRepeatedEnumField(value: &self.exportableContents) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.id.isEmpty {
      try visitor.visitSingularStringField(value: self.id, fieldNumber: 1)
    }
    if !self.exportableContents.isEmpty {
      try visitor.visitPackedEnumField(value: self.exportableContents, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1beta1_Model.ExportFormat, rhs: Google_Cloud_Aiplatform_V1beta1_Model.ExportFormat) -> Bool {
    if lhs.id != rhs.id {return false}
    if lhs.exportableContents != rhs.exportableContents {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1beta1_Model.ExportFormat.ExportableContent: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "EXPORTABLE_CONTENT_UNSPECIFIED"),
    1: .same(proto: "ARTIFACT"),
    2: .same(proto: "IMAGE"),
  ]
}

extension Google_Cloud_Aiplatform_V1beta1_PredictSchemata: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".PredictSchemata"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "instance_schema_uri"),
    2: .standard(proto: "parameters_schema_uri"),
    3: .standard(proto: "prediction_schema_uri"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.instanceSchemaUri) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.parametersSchemaUri) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.predictionSchemaUri) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.instanceSchemaUri.isEmpty {
      try visitor.visitSingularStringField(value: self.instanceSchemaUri, fieldNumber: 1)
    }
    if !self.parametersSchemaUri.isEmpty {
      try visitor.visitSingularStringField(value: self.parametersSchemaUri, fieldNumber: 2)
    }
    if !self.predictionSchemaUri.isEmpty {
      try visitor.visitSingularStringField(value: self.predictionSchemaUri, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1beta1_PredictSchemata, rhs: Google_Cloud_Aiplatform_V1beta1_PredictSchemata) -> Bool {
    if lhs.instanceSchemaUri != rhs.instanceSchemaUri {return false}
    if lhs.parametersSchemaUri != rhs.parametersSchemaUri {return false}
    if lhs.predictionSchemaUri != rhs.predictionSchemaUri {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1beta1_ModelContainerSpec: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ModelContainerSpec"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "image_uri"),
    2: .same(proto: "command"),
    3: .same(proto: "args"),
    4: .same(proto: "env"),
    5: .same(proto: "ports"),
    6: .standard(proto: "predict_route"),
    7: .standard(proto: "health_route"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.imageUri) }()
      case 2: try { try decoder.decodeRepeatedStringField(value: &self.command) }()
      case 3: try { try decoder.decodeRepeatedStringField(value: &self.args) }()
      case 4: try { try decoder.decodeRepeatedMessageField(value: &self.env) }()
      case 5: try { try decoder.decodeRepeatedMessageField(value: &self.ports) }()
      case 6: try { try decoder.decodeSingularStringField(value: &self.predictRoute) }()
      case 7: try { try decoder.decodeSingularStringField(value: &self.healthRoute) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.imageUri.isEmpty {
      try visitor.visitSingularStringField(value: self.imageUri, fieldNumber: 1)
    }
    if !self.command.isEmpty {
      try visitor.visitRepeatedStringField(value: self.command, fieldNumber: 2)
    }
    if !self.args.isEmpty {
      try visitor.visitRepeatedStringField(value: self.args, fieldNumber: 3)
    }
    if !self.env.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.env, fieldNumber: 4)
    }
    if !self.ports.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.ports, fieldNumber: 5)
    }
    if !self.predictRoute.isEmpty {
      try visitor.visitSingularStringField(value: self.predictRoute, fieldNumber: 6)
    }
    if !self.healthRoute.isEmpty {
      try visitor.visitSingularStringField(value: self.healthRoute, fieldNumber: 7)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1beta1_ModelContainerSpec, rhs: Google_Cloud_Aiplatform_V1beta1_ModelContainerSpec) -> Bool {
    if lhs.imageUri != rhs.imageUri {return false}
    if lhs.command != rhs.command {return false}
    if lhs.args != rhs.args {return false}
    if lhs.env != rhs.env {return false}
    if lhs.ports != rhs.ports {return false}
    if lhs.predictRoute != rhs.predictRoute {return false}
    if lhs.healthRoute != rhs.healthRoute {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1beta1_Port: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Port"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    3: .standard(proto: "container_port"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 3: try { try decoder.decodeSingularInt32Field(value: &self.containerPort) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.containerPort != 0 {
      try visitor.visitSingularInt32Field(value: self.containerPort, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1beta1_Port, rhs: Google_Cloud_Aiplatform_V1beta1_Port) -> Bool {
    if lhs.containerPort != rhs.containerPort {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
