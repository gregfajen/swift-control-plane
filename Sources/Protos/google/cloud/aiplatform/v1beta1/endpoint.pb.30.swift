// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1beta1/endpoint.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Models are deployed into it, and afterwards Endpoint is called to obtain
/// predictions and explanations.
public struct Google_Cloud_Aiplatform_V1beta1_Endpoint {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Output only. The resource name of the Endpoint.
  public var name: String = String()

  /// Required. The display name of the Endpoint.
  /// The name can be up to 128 characters long and can be consist of any UTF-8
  /// characters.
  public var displayName: String = String()

  /// The description of the Endpoint.
  public var description_p: String = String()

  /// Output only. The models deployed in this Endpoint.
  /// To add or remove DeployedModels use [EndpointService.DeployModel][google.cloud.aiplatform.v1beta1.EndpointService.DeployModel] and
  /// [EndpointService.UndeployModel][google.cloud.aiplatform.v1beta1.EndpointService.UndeployModel] respectively.
  public var deployedModels: [Google_Cloud_Aiplatform_V1beta1_DeployedModel] = []

  /// A map from a DeployedModel's ID to the percentage of this Endpoint's
  /// traffic that should be forwarded to that DeployedModel.
  ///
  /// If a DeployedModel's ID is not listed in this map, then it receives no
  /// traffic.
  ///
  /// The traffic percentage values must add up to 100, or map must be empty if
  /// the Endpoint is to not accept any traffic at a moment.
  public var trafficSplit: Dictionary<String,Int32> = [:]

  /// Used to perform consistent read-modify-write updates. If not set, a blind
  /// "overwrite" update happens.
  public var etag: String = String()

  /// The labels with user-defined metadata to organize your Endpoints.
  ///
  /// Label keys and values can be no longer than 64 characters
  /// (Unicode codepoints), can only contain lowercase letters, numeric
  /// characters, underscores and dashes. International characters are allowed.
  ///
  /// See https://goo.gl/xmQnxf for more information and examples of labels.
  public var labels: Dictionary<String,String> = [:]

  /// Output only. Timestamp when this Endpoint was created.
  public var createTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _createTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_createTime = newValue}
  }
  /// Returns true if `createTime` has been explicitly set.
  public var hasCreateTime: Bool {return self._createTime != nil}
  /// Clears the value of `createTime`. Subsequent reads from it will return its default value.
  public mutating func clearCreateTime() {self._createTime = nil}

  /// Output only. Timestamp when this Endpoint was last updated.
  public var updateTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _updateTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_updateTime = newValue}
  }
  /// Returns true if `updateTime` has been explicitly set.
  public var hasUpdateTime: Bool {return self._updateTime != nil}
  /// Clears the value of `updateTime`. Subsequent reads from it will return its default value.
  public mutating func clearUpdateTime() {self._updateTime = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _createTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
  fileprivate var _updateTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
}

/// A deployment of a Model. Endpoints contain one or more DeployedModels.
public struct Google_Cloud_Aiplatform_V1beta1_DeployedModel {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// The prediction (for example, the machine) resources that the DeployedModel
  /// uses. The user is billed for the resources (at least their minimal amount)
  /// even if the DeployedModel receives no traffic.
  /// Not all Models support all resources types. See
  /// [Model.supported_deployment_resources_types][google.cloud.aiplatform.v1beta1.Model.supported_deployment_resources_types].
  public var predictionResources: OneOf_PredictionResources? {
    get {return _storage._predictionResources}
    set {_uniqueStorage()._predictionResources = newValue}
  }

  /// A description of resources that are dedicated to the DeployedModel, and
  /// that need a higher degree of manual configuration.
  public var dedicatedResources: Google_Cloud_Aiplatform_V1beta1_DedicatedResources {
    get {
      if case .dedicatedResources(let v)? = _storage._predictionResources {return v}
      return Google_Cloud_Aiplatform_V1beta1_DedicatedResources()
    }
    set {_uniqueStorage()._predictionResources = .dedicatedResources(newValue)}
  }

  /// A description of resources that to large degree are decided by AI
  /// Platform, and require only a modest additional configuration.
  public var automaticResources: Google_Cloud_Aiplatform_V1beta1_AutomaticResources {
    get {
      if case .automaticResources(let v)? = _storage._predictionResources {return v}
      return Google_Cloud_Aiplatform_V1beta1_AutomaticResources()
    }
    set {_uniqueStorage()._predictionResources = .automaticResources(newValue)}
  }

  /// Output only. The ID of the DeployedModel.
  public var id: String {
    get {return _storage._id}
    set {_uniqueStorage()._id = newValue}
  }

  /// Required. The name of the Model this is the deployment of. Note that the Model
  /// may be in a different location than the DeployedModel's Endpoint.
  public var model: String {
    get {return _storage._model}
    set {_uniqueStorage()._model = newValue}
  }

  /// The display name of the DeployedModel. If not provided upon creation,
  /// the Model's display_name is used.
  public var displayName: String {
    get {return _storage._displayName}
    set {_uniqueStorage()._displayName = newValue}
  }

  /// Output only. Timestamp when the DeployedModel was created.
  public var createTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._createTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._createTime = newValue}
  }
  /// Returns true if `createTime` has been explicitly set.
  public var hasCreateTime: Bool {return _storage._createTime != nil}
  /// Clears the value of `createTime`. Subsequent reads from it will return its default value.
  public mutating func clearCreateTime() {_uniqueStorage()._createTime = nil}

  /// Explanation configuration for this DeployedModel.
  ///
  /// When deploying a Model using [EndpointService.DeployModel][google.cloud.aiplatform.v1beta1.EndpointService.DeployModel], this value
  /// overrides the value of [Model.explanation_spec][google.cloud.aiplatform.v1beta1.Model.explanation_spec]. All fields of
  /// [explanation_spec][google.cloud.aiplatform.v1beta1.DeployedModel.explanation_spec] are optional in the request. If a field of
  /// [explanation_spec][google.cloud.aiplatform.v1beta1.DeployedModel.explanation_spec] is not populated, the value of the same field of
  /// [Model.explanation_spec][google.cloud.aiplatform.v1beta1.Model.explanation_spec] is inherited. The corresponding
  /// [Model.explanation_spec][google.cloud.aiplatform.v1beta1.Model.explanation_spec] must be populated, otherwise explanation for
  /// this Model is not allowed.
  public var explanationSpec: Google_Cloud_Aiplatform_V1beta1_ExplanationSpec {
    get {return _storage._explanationSpec ?? Google_Cloud_Aiplatform_V1beta1_ExplanationSpec()}
    set {_uniqueStorage()._explanationSpec = newValue}
  }
  /// Returns true if `explanationSpec` has been explicitly set.
  public var hasExplanationSpec: Bool {return _storage._explanationSpec != nil}
  /// Clears the value of `explanationSpec`. Subsequent reads from it will return its default value.
  public mutating func clearExplanationSpec() {_uniqueStorage()._explanationSpec = nil}

  /// The service account that the DeployedModel's container runs as. Specify the
  /// email address of the service account. If this service account is not
  /// specified, the container runs as a service account that doesn't have access
  /// to the resource project.
  ///
  /// Users deploying the Model must have the `iam.serviceAccounts.actAs`
  /// permission on this service account.
  public var serviceAccount: String {
    get {return _storage._serviceAccount}
    set {_uniqueStorage()._serviceAccount = newValue}
  }

  /// If true, the container of the DeployedModel instances will send `stderr`
  /// and `stdout` streams to Stackdriver Logging.
  ///
  /// Only supported for custom-trained Models and AutoML Tables Models.
  public var enableContainerLogging: Bool {
    get {return _storage._enableContainerLogging}
    set {_uniqueStorage()._enableContainerLogging = newValue}
  }

  /// These logs are like standard server access logs, containing
  /// information like timestamp and latency for each prediction request.
  ///
  /// Note that Stackdriver logs may incur a cost, especially if your project
  /// receives prediction requests at a high queries per second rate (QPS).
  /// Estimate your costs before enabling this option.
  public var enableAccessLogging: Bool {
    get {return _storage._enableAccessLogging}
    set {_uniqueStorage()._enableAccessLogging = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// The prediction (for example, the machine) resources that the DeployedModel
  /// uses. The user is billed for the resources (at least their minimal amount)
  /// even if the DeployedModel receives no traffic.
  /// Not all Models support all resources types. See
  /// [Model.supported_deployment_resources_types][google.cloud.aiplatform.v1beta1.Model.supported_deployment_resources_types].
  public enum OneOf_PredictionResources: Equatable {
    /// A description of resources that are dedicated to the DeployedModel, and
    /// that need a higher degree of manual configuration.
    case dedicatedResources(Google_Cloud_Aiplatform_V1beta1_DedicatedResources)
    /// A description of resources that to large degree are decided by AI
    /// Platform, and require only a modest additional configuration.
    case automaticResources(Google_Cloud_Aiplatform_V1beta1_AutomaticResources)

  #if !swift(>=4.1)
    public static func ==(lhs: Google_Cloud_Aiplatform_V1beta1_DeployedModel.OneOf_PredictionResources, rhs: Google_Cloud_Aiplatform_V1beta1_DeployedModel.OneOf_PredictionResources) -> Bool {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch (lhs, rhs) {
      case (.dedicatedResources, .dedicatedResources): return {
        guard case .dedicatedResources(let l) = lhs, case .dedicatedResources(let r) = rhs else { preconditionFailure() }
        return l == r
      }()
      case (.automaticResources, .automaticResources): return {
        guard case .automaticResources(let l) = lhs, case .automaticResources(let r) = rhs else { preconditionFailure() }
        return l == r
      }()
      default: return false
      }
    }
  #endif
  }

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.aiplatform.v1beta1"

extension Google_Cloud_Aiplatform_V1beta1_Endpoint: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Endpoint"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .standard(proto: "display_name"),
    3: .same(proto: "description"),
    4: .standard(proto: "deployed_models"),
    5: .standard(proto: "traffic_split"),
    6: .same(proto: "etag"),
    7: .same(proto: "labels"),
    8: .standard(proto: "create_time"),
    9: .standard(proto: "update_time"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.name) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.displayName) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.description_p) }()
      case 4: try { try decoder.decodeRepeatedMessageField(value: &self.deployedModels) }()
      case 5: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufInt32>.self, value: &self.trafficSplit) }()
      case 6: try { try decoder.decodeSingularStringField(value: &self.etag) }()
      case 7: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &self.labels) }()
      case 8: try { try decoder.decodeSingularMessageField(value: &self._createTime) }()
      case 9: try { try decoder.decodeSingularMessageField(value: &self._updateTime) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.name.isEmpty {
      try visitor.visitSingularStringField(value: self.name, fieldNumber: 1)
    }
    if !self.displayName.isEmpty {
      try visitor.visitSingularStringField(value: self.displayName, fieldNumber: 2)
    }
    if !self.description_p.isEmpty {
      try visitor.visitSingularStringField(value: self.description_p, fieldNumber: 3)
    }
    if !self.deployedModels.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.deployedModels, fieldNumber: 4)
    }
    if !self.trafficSplit.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufInt32>.self, value: self.trafficSplit, fieldNumber: 5)
    }
    if !self.etag.isEmpty {
      try visitor.visitSingularStringField(value: self.etag, fieldNumber: 6)
    }
    if !self.labels.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: self.labels, fieldNumber: 7)
    }
    if let v = self._createTime {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
    }
    if let v = self._updateTime {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1beta1_Endpoint, rhs: Google_Cloud_Aiplatform_V1beta1_Endpoint) -> Bool {
    if lhs.name != rhs.name {return false}
    if lhs.displayName != rhs.displayName {return false}
    if lhs.description_p != rhs.description_p {return false}
    if lhs.deployedModels != rhs.deployedModels {return false}
    if lhs.trafficSplit != rhs.trafficSplit {return false}
    if lhs.etag != rhs.etag {return false}
    if lhs.labels != rhs.labels {return false}
    if lhs._createTime != rhs._createTime {return false}
    if lhs._updateTime != rhs._updateTime {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Aiplatform_V1beta1_DeployedModel: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".DeployedModel"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    7: .standard(proto: "dedicated_resources"),
    8: .standard(proto: "automatic_resources"),
    1: .same(proto: "id"),
    2: .same(proto: "model"),
    3: .standard(proto: "display_name"),
    6: .standard(proto: "create_time"),
    9: .standard(proto: "explanation_spec"),
    11: .standard(proto: "service_account"),
    12: .standard(proto: "enable_container_logging"),
    13: .standard(proto: "enable_access_logging"),
  ]

  fileprivate class _StorageClass {
    var _predictionResources: Google_Cloud_Aiplatform_V1beta1_DeployedModel.OneOf_PredictionResources?
    var _id: String = String()
    var _model: String = String()
    var _displayName: String = String()
    var _createTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _explanationSpec: Google_Cloud_Aiplatform_V1beta1_ExplanationSpec? = nil
    var _serviceAccount: String = String()
    var _enableContainerLogging: Bool = false
    var _enableAccessLogging: Bool = false

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _predictionResources = source._predictionResources
      _id = source._id
      _model = source._model
      _displayName = source._displayName
      _createTime = source._createTime
      _explanationSpec = source._explanationSpec
      _serviceAccount = source._serviceAccount
      _enableContainerLogging = source._enableContainerLogging
      _enableAccessLogging = source._enableAccessLogging
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularStringField(value: &_storage._id) }()
        case 2: try { try decoder.decodeSingularStringField(value: &_storage._model) }()
        case 3: try { try decoder.decodeSingularStringField(value: &_storage._displayName) }()
        case 6: try { try decoder.decodeSingularMessageField(value: &_storage._createTime) }()
        case 7: try {
          var v: Google_Cloud_Aiplatform_V1beta1_DedicatedResources?
          if let current = _storage._predictionResources {
            try decoder.handleConflictingOneOf()
            if case .dedicatedResources(let m) = current {v = m}
          }
          try decoder.decodeSingularMessageField(value: &v)
          if let v = v {_storage._predictionResources = .dedicatedResources(v)}
        }()
        case 8: try {
          var v: Google_Cloud_Aiplatform_V1beta1_AutomaticResources?
          if let current = _storage._predictionResources {
            try decoder.handleConflictingOneOf()
            if case .automaticResources(let m) = current {v = m}
          }
          try decoder.decodeSingularMessageField(value: &v)
          if let v = v {_storage._predictionResources = .automaticResources(v)}
        }()
        case 9: try { try decoder.decodeSingularMessageField(value: &_storage._explanationSpec) }()
        case 11: try { try decoder.decodeSingularStringField(value: &_storage._serviceAccount) }()
        case 12: try { try decoder.decodeSingularBoolField(value: &_storage._enableContainerLogging) }()
        case 13: try { try decoder.decodeSingularBoolField(value: &_storage._enableAccessLogging) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._id.isEmpty {
        try visitor.visitSingularStringField(value: _storage._id, fieldNumber: 1)
      }
      if !_storage._model.isEmpty {
        try visitor.visitSingularStringField(value: _storage._model, fieldNumber: 2)
      }
      if !_storage._displayName.isEmpty {
        try visitor.visitSingularStringField(value: _storage._displayName, fieldNumber: 3)
      }
      if let v = _storage._createTime {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch _storage._predictionResources {
      case .dedicatedResources?: try {
        guard case .dedicatedResources(let v)? = _storage._predictionResources else { preconditionFailure() }
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }()
      case .automaticResources?: try {
        guard case .automaticResources(let v)? = _storage._predictionResources else { preconditionFailure() }
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }()
      case nil: break
      }
      if let v = _storage._explanationSpec {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 9)
      }
      if !_storage._serviceAccount.isEmpty {
        try visitor.visitSingularStringField(value: _storage._serviceAccount, fieldNumber: 11)
      }
      if _storage._enableContainerLogging != false {
        try visitor.visitSingularBoolField(value: _storage._enableContainerLogging, fieldNumber: 12)
      }
      if _storage._enableAccessLogging != false {
        try visitor.visitSingularBoolField(value: _storage._enableAccessLogging, fieldNumber: 13)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Aiplatform_V1beta1_DeployedModel, rhs: Google_Cloud_Aiplatform_V1beta1_DeployedModel) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._predictionResources != rhs_storage._predictionResources {return false}
        if _storage._id != rhs_storage._id {return false}
        if _storage._model != rhs_storage._model {return false}
        if _storage._displayName != rhs_storage._displayName {return false}
        if _storage._createTime != rhs_storage._createTime {return false}
        if _storage._explanationSpec != rhs_storage._explanationSpec {return false}
        if _storage._serviceAccount != rhs_storage._serviceAccount {return false}
        if _storage._enableContainerLogging != rhs_storage._enableContainerLogging {return false}
        if _storage._enableAccessLogging != rhs_storage._enableAccessLogging {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
