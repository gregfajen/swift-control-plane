//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/aiplatform/v1beta1/pipeline_service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Aiplatform_V1beta1_PipelineServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Aiplatform_V1beta1_PipelineServiceClientProtocol: GRPCClient {
  func createTrainingPipeline(
    _ request: Google_Cloud_Aiplatform_V1beta1_CreateTrainingPipelineRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1beta1_CreateTrainingPipelineRequest, Google_Cloud_Aiplatform_V1beta1_TrainingPipeline>

  func getTrainingPipeline(
    _ request: Google_Cloud_Aiplatform_V1beta1_GetTrainingPipelineRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1beta1_GetTrainingPipelineRequest, Google_Cloud_Aiplatform_V1beta1_TrainingPipeline>

  func listTrainingPipelines(
    _ request: Google_Cloud_Aiplatform_V1beta1_ListTrainingPipelinesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1beta1_ListTrainingPipelinesRequest, Google_Cloud_Aiplatform_V1beta1_ListTrainingPipelinesResponse>

  func deleteTrainingPipeline(
    _ request: Google_Cloud_Aiplatform_V1beta1_DeleteTrainingPipelineRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1beta1_DeleteTrainingPipelineRequest, Google_Longrunning_Operation>

  func cancelTrainingPipeline(
    _ request: Google_Cloud_Aiplatform_V1beta1_CancelTrainingPipelineRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1beta1_CancelTrainingPipelineRequest, SwiftProtobuf.Google_Protobuf_Empty>

}

extension Google_Cloud_Aiplatform_V1beta1_PipelineServiceClientProtocol {

  /// Creates a TrainingPipeline. A created TrainingPipeline right away will be
  /// attempted to be run.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTrainingPipeline.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createTrainingPipeline(
    _ request: Google_Cloud_Aiplatform_V1beta1_CreateTrainingPipelineRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1beta1_CreateTrainingPipelineRequest, Google_Cloud_Aiplatform_V1beta1_TrainingPipeline> {
    return self.makeUnaryCall(
      path: "/google.cloud.aiplatform.v1beta1.PipelineService/CreateTrainingPipeline",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a TrainingPipeline.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTrainingPipeline.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTrainingPipeline(
    _ request: Google_Cloud_Aiplatform_V1beta1_GetTrainingPipelineRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1beta1_GetTrainingPipelineRequest, Google_Cloud_Aiplatform_V1beta1_TrainingPipeline> {
    return self.makeUnaryCall(
      path: "/google.cloud.aiplatform.v1beta1.PipelineService/GetTrainingPipeline",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists TrainingPipelines in a Location.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListTrainingPipelines.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listTrainingPipelines(
    _ request: Google_Cloud_Aiplatform_V1beta1_ListTrainingPipelinesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1beta1_ListTrainingPipelinesRequest, Google_Cloud_Aiplatform_V1beta1_ListTrainingPipelinesResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.aiplatform.v1beta1.PipelineService/ListTrainingPipelines",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a TrainingPipeline.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteTrainingPipeline.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteTrainingPipeline(
    _ request: Google_Cloud_Aiplatform_V1beta1_DeleteTrainingPipelineRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1beta1_DeleteTrainingPipelineRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.aiplatform.v1beta1.PipelineService/DeleteTrainingPipeline",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Cancels a TrainingPipeline.
  /// Starts asynchronous cancellation on the TrainingPipeline. The server
  /// makes a best effort to cancel the pipeline, but success is not
  /// guaranteed. Clients can use [PipelineService.GetTrainingPipeline][google.cloud.aiplatform.v1beta1.PipelineService.GetTrainingPipeline] or
  /// other methods to check whether the cancellation succeeded or whether the
  /// pipeline completed despite cancellation. On successful cancellation,
  /// the TrainingPipeline is not deleted; instead it becomes a pipeline with
  /// a [TrainingPipeline.error][google.cloud.aiplatform.v1beta1.TrainingPipeline.error] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
  /// corresponding to `Code.CANCELLED`, and [TrainingPipeline.state][google.cloud.aiplatform.v1beta1.TrainingPipeline.state] is set to
  /// `CANCELLED`.
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelTrainingPipeline.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func cancelTrainingPipeline(
    _ request: Google_Cloud_Aiplatform_V1beta1_CancelTrainingPipelineRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Aiplatform_V1beta1_CancelTrainingPipelineRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.aiplatform.v1beta1.PipelineService/CancelTrainingPipeline",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Aiplatform_V1beta1_PipelineServiceClient: Google_Cloud_Aiplatform_V1beta1_PipelineServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.aiplatform.v1beta1.PipelineService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Aiplatform_V1beta1_PipelineServiceProvider: CallHandlerProvider {
  /// Creates a TrainingPipeline. A created TrainingPipeline right away will be
  /// attempted to be run.
  func createTrainingPipeline(request: Google_Cloud_Aiplatform_V1beta1_CreateTrainingPipelineRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Aiplatform_V1beta1_TrainingPipeline>
  /// Gets a TrainingPipeline.
  func getTrainingPipeline(request: Google_Cloud_Aiplatform_V1beta1_GetTrainingPipelineRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Aiplatform_V1beta1_TrainingPipeline>
  /// Lists TrainingPipelines in a Location.
  func listTrainingPipelines(request: Google_Cloud_Aiplatform_V1beta1_ListTrainingPipelinesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Aiplatform_V1beta1_ListTrainingPipelinesResponse>
  /// Deletes a TrainingPipeline.
  func deleteTrainingPipeline(request: Google_Cloud_Aiplatform_V1beta1_DeleteTrainingPipelineRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Cancels a TrainingPipeline.
  /// Starts asynchronous cancellation on the TrainingPipeline. The server
  /// makes a best effort to cancel the pipeline, but success is not
  /// guaranteed. Clients can use [PipelineService.GetTrainingPipeline][google.cloud.aiplatform.v1beta1.PipelineService.GetTrainingPipeline] or
  /// other methods to check whether the cancellation succeeded or whether the
  /// pipeline completed despite cancellation. On successful cancellation,
  /// the TrainingPipeline is not deleted; instead it becomes a pipeline with
  /// a [TrainingPipeline.error][google.cloud.aiplatform.v1beta1.TrainingPipeline.error] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
  /// corresponding to `Code.CANCELLED`, and [TrainingPipeline.state][google.cloud.aiplatform.v1beta1.TrainingPipeline.state] is set to
  /// `CANCELLED`.
  func cancelTrainingPipeline(request: Google_Cloud_Aiplatform_V1beta1_CancelTrainingPipelineRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
}

extension Google_Cloud_Aiplatform_V1beta1_PipelineServiceProvider {
  public var serviceName: Substring { return "google.cloud.aiplatform.v1beta1.PipelineService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "CreateTrainingPipeline":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createTrainingPipeline(request: request, context: context)
        }
      }

    case "GetTrainingPipeline":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getTrainingPipeline(request: request, context: context)
        }
      }

    case "ListTrainingPipelines":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listTrainingPipelines(request: request, context: context)
        }
      }

    case "DeleteTrainingPipeline":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteTrainingPipeline(request: request, context: context)
        }
      }

    case "CancelTrainingPipeline":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.cancelTrainingPipeline(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

