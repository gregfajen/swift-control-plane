//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/runtimeconfig/v1beta1/runtimeconfig.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Runtimeconfig_V1beta1_RuntimeConfigManagerClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Runtimeconfig_V1beta1_RuntimeConfigManagerClientProtocol: GRPCClient {
  func listConfigs(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_ListConfigsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_ListConfigsRequest, Google_Cloud_Runtimeconfig_V1beta1_ListConfigsResponse>

  func getConfig(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_GetConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_GetConfigRequest, Google_Cloud_Runtimeconfig_V1beta1_RuntimeConfig>

  func createConfig(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_CreateConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_CreateConfigRequest, Google_Cloud_Runtimeconfig_V1beta1_RuntimeConfig>

  func updateConfig(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_UpdateConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_UpdateConfigRequest, Google_Cloud_Runtimeconfig_V1beta1_RuntimeConfig>

  func deleteConfig(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_DeleteConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_DeleteConfigRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func listVariables(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_ListVariablesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_ListVariablesRequest, Google_Cloud_Runtimeconfig_V1beta1_ListVariablesResponse>

  func getVariable(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_GetVariableRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_GetVariableRequest, Google_Cloud_Runtimeconfig_V1beta1_Variable>

  func watchVariable(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_WatchVariableRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_WatchVariableRequest, Google_Cloud_Runtimeconfig_V1beta1_Variable>

  func createVariable(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_CreateVariableRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_CreateVariableRequest, Google_Cloud_Runtimeconfig_V1beta1_Variable>

  func updateVariable(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_UpdateVariableRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_UpdateVariableRequest, Google_Cloud_Runtimeconfig_V1beta1_Variable>

  func deleteVariable(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_DeleteVariableRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_DeleteVariableRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func listWaiters(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_ListWaitersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_ListWaitersRequest, Google_Cloud_Runtimeconfig_V1beta1_ListWaitersResponse>

  func getWaiter(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_GetWaiterRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_GetWaiterRequest, Google_Cloud_Runtimeconfig_V1beta1_Waiter>

  func createWaiter(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_CreateWaiterRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_CreateWaiterRequest, Google_Longrunning_Operation>

  func deleteWaiter(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_DeleteWaiterRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_DeleteWaiterRequest, SwiftProtobuf.Google_Protobuf_Empty>

}

extension Google_Cloud_Runtimeconfig_V1beta1_RuntimeConfigManagerClientProtocol {

  /// Lists all the RuntimeConfig resources within project.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListConfigs.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listConfigs(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_ListConfigsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_ListConfigsRequest, Google_Cloud_Runtimeconfig_V1beta1_ListConfigsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager/ListConfigs",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets information about a RuntimeConfig resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getConfig(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_GetConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_GetConfigRequest, Google_Cloud_Runtimeconfig_V1beta1_RuntimeConfig> {
    return self.makeUnaryCall(
      path: "/google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager/GetConfig",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a new RuntimeConfig resource. The configuration name must be
  /// unique within project.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createConfig(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_CreateConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_CreateConfigRequest, Google_Cloud_Runtimeconfig_V1beta1_RuntimeConfig> {
    return self.makeUnaryCall(
      path: "/google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager/CreateConfig",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates a RuntimeConfig resource. The configuration must exist beforehand.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateConfig(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_UpdateConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_UpdateConfigRequest, Google_Cloud_Runtimeconfig_V1beta1_RuntimeConfig> {
    return self.makeUnaryCall(
      path: "/google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager/UpdateConfig",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a RuntimeConfig resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteConfig(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_DeleteConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_DeleteConfigRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager/DeleteConfig",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists variables within given a configuration, matching any provided
  /// filters. This only lists variable names, not the values, unless
  /// `return_values` is true, in which case only variables that user has IAM
  /// permission to GetVariable will be returned.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListVariables.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listVariables(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_ListVariablesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_ListVariablesRequest, Google_Cloud_Runtimeconfig_V1beta1_ListVariablesResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager/ListVariables",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets information about a single variable.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetVariable.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getVariable(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_GetVariableRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_GetVariableRequest, Google_Cloud_Runtimeconfig_V1beta1_Variable> {
    return self.makeUnaryCall(
      path: "/google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager/GetVariable",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Watches a specific variable and waits for a change in the variable's value.
  /// When there is a change, this method returns the new value or times out.
  ///
  /// If a variable is deleted while being watched, the `variableState` state is
  /// set to `DELETED` and the method returns the last known variable `value`.
  ///
  /// If you set the deadline for watching to a larger value than internal
  /// timeout (60 seconds), the current variable value is returned and the
  /// `variableState` will be `VARIABLE_STATE_UNSPECIFIED`.
  ///
  /// To learn more about creating a watcher, read the
  /// [Watching a Variable for
  /// Changes](/deployment-manager/runtime-configurator/watching-a-variable)
  /// documentation.
  ///
  /// - Parameters:
  ///   - request: Request to send to WatchVariable.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func watchVariable(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_WatchVariableRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_WatchVariableRequest, Google_Cloud_Runtimeconfig_V1beta1_Variable> {
    return self.makeUnaryCall(
      path: "/google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager/WatchVariable",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a variable within the given configuration. You cannot create
  /// a variable with a name that is a prefix of an existing variable name, or a
  /// name that has an existing variable name as a prefix.
  ///
  /// To learn more about creating a variable, read the
  /// [Setting and Getting
  /// Data](/deployment-manager/runtime-configurator/set-and-get-variables)
  /// documentation.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateVariable.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createVariable(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_CreateVariableRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_CreateVariableRequest, Google_Cloud_Runtimeconfig_V1beta1_Variable> {
    return self.makeUnaryCall(
      path: "/google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager/CreateVariable",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates an existing variable with a new value.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateVariable.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateVariable(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_UpdateVariableRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_UpdateVariableRequest, Google_Cloud_Runtimeconfig_V1beta1_Variable> {
    return self.makeUnaryCall(
      path: "/google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager/UpdateVariable",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a variable or multiple variables.
  ///
  /// If you specify a variable name, then that variable is deleted. If you
  /// specify a prefix and `recursive` is true, then all variables with that
  /// prefix are deleted. You must set a `recursive` to true if you delete
  /// variables by prefix.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteVariable.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteVariable(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_DeleteVariableRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_DeleteVariableRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager/DeleteVariable",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// List waiters within the given configuration.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListWaiters.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listWaiters(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_ListWaitersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_ListWaitersRequest, Google_Cloud_Runtimeconfig_V1beta1_ListWaitersResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager/ListWaiters",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets information about a single waiter.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetWaiter.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getWaiter(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_GetWaiterRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_GetWaiterRequest, Google_Cloud_Runtimeconfig_V1beta1_Waiter> {
    return self.makeUnaryCall(
      path: "/google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager/GetWaiter",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a Waiter resource. This operation returns a long-running Operation
  /// resource which can be polled for completion. However, a waiter with the
  /// given name will exist (and can be retrieved) prior to the operation
  /// completing. If the operation fails, the failed Waiter resource will
  /// still exist and must be deleted prior to subsequent creation attempts.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateWaiter.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createWaiter(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_CreateWaiterRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_CreateWaiterRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager/CreateWaiter",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes the waiter with the specified name.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteWaiter.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteWaiter(
    _ request: Google_Cloud_Runtimeconfig_V1beta1_DeleteWaiterRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Runtimeconfig_V1beta1_DeleteWaiterRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager/DeleteWaiter",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Runtimeconfig_V1beta1_RuntimeConfigManagerClient: Google_Cloud_Runtimeconfig_V1beta1_RuntimeConfigManagerClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Runtimeconfig_V1beta1_RuntimeConfigManagerProvider: CallHandlerProvider {
  /// Lists all the RuntimeConfig resources within project.
  func listConfigs(request: Google_Cloud_Runtimeconfig_V1beta1_ListConfigsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Runtimeconfig_V1beta1_ListConfigsResponse>
  /// Gets information about a RuntimeConfig resource.
  func getConfig(request: Google_Cloud_Runtimeconfig_V1beta1_GetConfigRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Runtimeconfig_V1beta1_RuntimeConfig>
  /// Creates a new RuntimeConfig resource. The configuration name must be
  /// unique within project.
  func createConfig(request: Google_Cloud_Runtimeconfig_V1beta1_CreateConfigRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Runtimeconfig_V1beta1_RuntimeConfig>
  /// Updates a RuntimeConfig resource. The configuration must exist beforehand.
  func updateConfig(request: Google_Cloud_Runtimeconfig_V1beta1_UpdateConfigRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Runtimeconfig_V1beta1_RuntimeConfig>
  /// Deletes a RuntimeConfig resource.
  func deleteConfig(request: Google_Cloud_Runtimeconfig_V1beta1_DeleteConfigRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Lists variables within given a configuration, matching any provided
  /// filters. This only lists variable names, not the values, unless
  /// `return_values` is true, in which case only variables that user has IAM
  /// permission to GetVariable will be returned.
  func listVariables(request: Google_Cloud_Runtimeconfig_V1beta1_ListVariablesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Runtimeconfig_V1beta1_ListVariablesResponse>
  /// Gets information about a single variable.
  func getVariable(request: Google_Cloud_Runtimeconfig_V1beta1_GetVariableRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Runtimeconfig_V1beta1_Variable>
  /// Watches a specific variable and waits for a change in the variable's value.
  /// When there is a change, this method returns the new value or times out.
  ///
  /// If a variable is deleted while being watched, the `variableState` state is
  /// set to `DELETED` and the method returns the last known variable `value`.
  ///
  /// If you set the deadline for watching to a larger value than internal
  /// timeout (60 seconds), the current variable value is returned and the
  /// `variableState` will be `VARIABLE_STATE_UNSPECIFIED`.
  ///
  /// To learn more about creating a watcher, read the
  /// [Watching a Variable for
  /// Changes](/deployment-manager/runtime-configurator/watching-a-variable)
  /// documentation.
  func watchVariable(request: Google_Cloud_Runtimeconfig_V1beta1_WatchVariableRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Runtimeconfig_V1beta1_Variable>
  /// Creates a variable within the given configuration. You cannot create
  /// a variable with a name that is a prefix of an existing variable name, or a
  /// name that has an existing variable name as a prefix.
  ///
  /// To learn more about creating a variable, read the
  /// [Setting and Getting
  /// Data](/deployment-manager/runtime-configurator/set-and-get-variables)
  /// documentation.
  func createVariable(request: Google_Cloud_Runtimeconfig_V1beta1_CreateVariableRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Runtimeconfig_V1beta1_Variable>
  /// Updates an existing variable with a new value.
  func updateVariable(request: Google_Cloud_Runtimeconfig_V1beta1_UpdateVariableRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Runtimeconfig_V1beta1_Variable>
  /// Deletes a variable or multiple variables.
  ///
  /// If you specify a variable name, then that variable is deleted. If you
  /// specify a prefix and `recursive` is true, then all variables with that
  /// prefix are deleted. You must set a `recursive` to true if you delete
  /// variables by prefix.
  func deleteVariable(request: Google_Cloud_Runtimeconfig_V1beta1_DeleteVariableRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// List waiters within the given configuration.
  func listWaiters(request: Google_Cloud_Runtimeconfig_V1beta1_ListWaitersRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Runtimeconfig_V1beta1_ListWaitersResponse>
  /// Gets information about a single waiter.
  func getWaiter(request: Google_Cloud_Runtimeconfig_V1beta1_GetWaiterRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Runtimeconfig_V1beta1_Waiter>
  /// Creates a Waiter resource. This operation returns a long-running Operation
  /// resource which can be polled for completion. However, a waiter with the
  /// given name will exist (and can be retrieved) prior to the operation
  /// completing. If the operation fails, the failed Waiter resource will
  /// still exist and must be deleted prior to subsequent creation attempts.
  func createWaiter(request: Google_Cloud_Runtimeconfig_V1beta1_CreateWaiterRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Deletes the waiter with the specified name.
  func deleteWaiter(request: Google_Cloud_Runtimeconfig_V1beta1_DeleteWaiterRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
}

extension Google_Cloud_Runtimeconfig_V1beta1_RuntimeConfigManagerProvider {
  public var serviceName: Substring { return "google.cloud.runtimeconfig.v1beta1.RuntimeConfigManager" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "ListConfigs":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listConfigs(request: request, context: context)
        }
      }

    case "GetConfig":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getConfig(request: request, context: context)
        }
      }

    case "CreateConfig":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createConfig(request: request, context: context)
        }
      }

    case "UpdateConfig":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateConfig(request: request, context: context)
        }
      }

    case "DeleteConfig":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteConfig(request: request, context: context)
        }
      }

    case "ListVariables":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listVariables(request: request, context: context)
        }
      }

    case "GetVariable":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getVariable(request: request, context: context)
        }
      }

    case "WatchVariable":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.watchVariable(request: request, context: context)
        }
      }

    case "CreateVariable":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createVariable(request: request, context: context)
        }
      }

    case "UpdateVariable":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateVariable(request: request, context: context)
        }
      }

    case "DeleteVariable":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteVariable(request: request, context: context)
        }
      }

    case "ListWaiters":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listWaiters(request: request, context: context)
        }
      }

    case "GetWaiter":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getWaiter(request: request, context: context)
        }
      }

    case "CreateWaiter":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createWaiter(request: request, context: context)
        }
      }

    case "DeleteWaiter":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteWaiter(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

