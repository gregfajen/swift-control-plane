//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/billing/v1/cloud_billing.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Billing_V1_CloudBillingClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Billing_V1_CloudBillingClientProtocol: GRPCClient {
  func getBillingAccount(
    _ request: Google_Cloud_Billing_V1_GetBillingAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Billing_V1_GetBillingAccountRequest, Google_Cloud_Billing_V1_BillingAccount>

  func listBillingAccounts(
    _ request: Google_Cloud_Billing_V1_ListBillingAccountsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Billing_V1_ListBillingAccountsRequest, Google_Cloud_Billing_V1_ListBillingAccountsResponse>

  func updateBillingAccount(
    _ request: Google_Cloud_Billing_V1_UpdateBillingAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Billing_V1_UpdateBillingAccountRequest, Google_Cloud_Billing_V1_BillingAccount>

  func createBillingAccount(
    _ request: Google_Cloud_Billing_V1_CreateBillingAccountRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Billing_V1_CreateBillingAccountRequest, Google_Cloud_Billing_V1_BillingAccount>

  func listProjectBillingInfo(
    _ request: Google_Cloud_Billing_V1_ListProjectBillingInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Billing_V1_ListProjectBillingInfoRequest, Google_Cloud_Billing_V1_ListProjectBillingInfoResponse>

  func getProjectBillingInfo(
    _ request: Google_Cloud_Billing_V1_GetProjectBillingInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Billing_V1_GetProjectBillingInfoRequest, Google_Cloud_Billing_V1_ProjectBillingInfo>

  func updateProjectBillingInfo(
    _ request: Google_Cloud_Billing_V1_UpdateProjectBillingInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Billing_V1_UpdateProjectBillingInfoRequest, Google_Cloud_Billing_V1_ProjectBillingInfo>

  func getIamPolicy(
    _ request: Google_Iam_V1_GetIamPolicyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Iam_V1_GetIamPolicyRequest, Google_Iam_V1_Policy>

  func setIamPolicy(
    _ request: Google_Iam_V1_SetIamPolicyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Iam_V1_SetIamPolicyRequest, Google_Iam_V1_Policy>

  func testIamPermissions(
    _ request: Google_Iam_V1_TestIamPermissionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Iam_V1_TestIamPermissionsRequest, Google_Iam_V1_TestIamPermissionsResponse>

}

extension Google_Cloud_Billing_V1_CloudBillingClientProtocol {

  /// Gets information about a billing account. The current authenticated user
  /// must be a [viewer of the billing
  /// account](https://cloud.google.com/billing/docs/how-to/billing-access).
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBillingAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getBillingAccount(
    _ request: Google_Cloud_Billing_V1_GetBillingAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Billing_V1_GetBillingAccountRequest, Google_Cloud_Billing_V1_BillingAccount> {
    return self.makeUnaryCall(
      path: "/google.cloud.billing.v1.CloudBilling/GetBillingAccount",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists the billing accounts that the current authenticated user has
  /// permission to
  /// [view](https://cloud.google.com/billing/docs/how-to/billing-access).
  ///
  /// - Parameters:
  ///   - request: Request to send to ListBillingAccounts.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listBillingAccounts(
    _ request: Google_Cloud_Billing_V1_ListBillingAccountsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Billing_V1_ListBillingAccountsRequest, Google_Cloud_Billing_V1_ListBillingAccountsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.billing.v1.CloudBilling/ListBillingAccounts",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates a billing account's fields.
  /// Currently the only field that can be edited is `display_name`.
  /// The current authenticated user must have the `billing.accounts.update`
  /// IAM permission, which is typically given to the
  /// [administrator](https://cloud.google.com/billing/docs/how-to/billing-access)
  /// of the billing account.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateBillingAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateBillingAccount(
    _ request: Google_Cloud_Billing_V1_UpdateBillingAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Billing_V1_UpdateBillingAccountRequest, Google_Cloud_Billing_V1_BillingAccount> {
    return self.makeUnaryCall(
      path: "/google.cloud.billing.v1.CloudBilling/UpdateBillingAccount",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a billing account.
  /// This method can only be used to create
  /// [billing subaccounts](https://cloud.google.com/billing/docs/concepts)
  /// by GCP resellers.
  /// When creating a subaccount, the current authenticated user must have the
  /// `billing.accounts.update` IAM permission on the master account, which is
  /// typically given to billing account
  /// [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
  /// This method will return an error if the master account has not been
  /// provisioned as a reseller account.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateBillingAccount.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createBillingAccount(
    _ request: Google_Cloud_Billing_V1_CreateBillingAccountRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Billing_V1_CreateBillingAccountRequest, Google_Cloud_Billing_V1_BillingAccount> {
    return self.makeUnaryCall(
      path: "/google.cloud.billing.v1.CloudBilling/CreateBillingAccount",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists the projects associated with a billing account. The current
  /// authenticated user must have the `billing.resourceAssociations.list` IAM
  /// permission, which is often given to billing account
  /// [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
  ///
  /// - Parameters:
  ///   - request: Request to send to ListProjectBillingInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listProjectBillingInfo(
    _ request: Google_Cloud_Billing_V1_ListProjectBillingInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Billing_V1_ListProjectBillingInfoRequest, Google_Cloud_Billing_V1_ListProjectBillingInfoResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.billing.v1.CloudBilling/ListProjectBillingInfo",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets the billing information for a project. The current authenticated user
  /// must have [permission to view the
  /// project](https://cloud.google.com/docs/permissions-overview#h.bgs0oxofvnoo
  /// ).
  ///
  /// - Parameters:
  ///   - request: Request to send to GetProjectBillingInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getProjectBillingInfo(
    _ request: Google_Cloud_Billing_V1_GetProjectBillingInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Billing_V1_GetProjectBillingInfoRequest, Google_Cloud_Billing_V1_ProjectBillingInfo> {
    return self.makeUnaryCall(
      path: "/google.cloud.billing.v1.CloudBilling/GetProjectBillingInfo",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Sets or updates the billing account associated with a project. You specify
  /// the new billing account by setting the `billing_account_name` in the
  /// `ProjectBillingInfo` resource to the resource name of a billing account.
  /// Associating a project with an open billing account enables billing on the
  /// project and allows charges for resource usage. If the project already had a
  /// billing account, this method changes the billing account used for resource
  /// usage charges.
  ///
  /// *Note:* Incurred charges that have not yet been reported in the transaction
  /// history of the GCP Console might be billed to the new billing
  /// account, even if the charge occurred before the new billing account was
  /// assigned to the project.
  ///
  /// The current authenticated user must have ownership privileges for both the
  /// [project](https://cloud.google.com/docs/permissions-overview#h.bgs0oxofvnoo
  /// ) and the [billing
  /// account](https://cloud.google.com/billing/docs/how-to/billing-access).
  ///
  /// You can disable billing on the project by setting the
  /// `billing_account_name` field to empty. This action disassociates the
  /// current billing account from the project. Any billable activity of your
  /// in-use services will stop, and your application could stop functioning as
  /// expected. Any unbilled charges to date will be billed to the previously
  /// associated account. The current authenticated user must be either an owner
  /// of the project or an owner of the billing account for the project.
  ///
  /// Note that associating a project with a *closed* billing account will have
  /// much the same effect as disabling billing on the project: any paid
  /// resources used by the project will be shut down. Thus, unless you wish to
  /// disable billing, you should always call this method with the name of an
  /// *open* billing account.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateProjectBillingInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateProjectBillingInfo(
    _ request: Google_Cloud_Billing_V1_UpdateProjectBillingInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Billing_V1_UpdateProjectBillingInfoRequest, Google_Cloud_Billing_V1_ProjectBillingInfo> {
    return self.makeUnaryCall(
      path: "/google.cloud.billing.v1.CloudBilling/UpdateProjectBillingInfo",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets the access control policy for a billing account.
  /// The caller must have the `billing.accounts.getIamPolicy` permission on the
  /// account, which is often given to billing account
  /// [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
  ///
  /// - Parameters:
  ///   - request: Request to send to GetIamPolicy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getIamPolicy(
    _ request: Google_Iam_V1_GetIamPolicyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Iam_V1_GetIamPolicyRequest, Google_Iam_V1_Policy> {
    return self.makeUnaryCall(
      path: "/google.cloud.billing.v1.CloudBilling/GetIamPolicy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Sets the access control policy for a billing account. Replaces any existing
  /// policy.
  /// The caller must have the `billing.accounts.setIamPolicy` permission on the
  /// account, which is often given to billing account
  /// [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
  ///
  /// - Parameters:
  ///   - request: Request to send to SetIamPolicy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setIamPolicy(
    _ request: Google_Iam_V1_SetIamPolicyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Iam_V1_SetIamPolicyRequest, Google_Iam_V1_Policy> {
    return self.makeUnaryCall(
      path: "/google.cloud.billing.v1.CloudBilling/SetIamPolicy",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Tests the access control policy for a billing account. This method takes
  /// the resource and a set of permissions as input and returns the subset of
  /// the input permissions that the caller is allowed for that resource.
  ///
  /// - Parameters:
  ///   - request: Request to send to TestIamPermissions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func testIamPermissions(
    _ request: Google_Iam_V1_TestIamPermissionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Iam_V1_TestIamPermissionsRequest, Google_Iam_V1_TestIamPermissionsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.billing.v1.CloudBilling/TestIamPermissions",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Billing_V1_CloudBillingClient: Google_Cloud_Billing_V1_CloudBillingClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.billing.v1.CloudBilling service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Billing_V1_CloudBillingProvider: CallHandlerProvider {
  /// Gets information about a billing account. The current authenticated user
  /// must be a [viewer of the billing
  /// account](https://cloud.google.com/billing/docs/how-to/billing-access).
  func getBillingAccount(request: Google_Cloud_Billing_V1_GetBillingAccountRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Billing_V1_BillingAccount>
  /// Lists the billing accounts that the current authenticated user has
  /// permission to
  /// [view](https://cloud.google.com/billing/docs/how-to/billing-access).
  func listBillingAccounts(request: Google_Cloud_Billing_V1_ListBillingAccountsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Billing_V1_ListBillingAccountsResponse>
  /// Updates a billing account's fields.
  /// Currently the only field that can be edited is `display_name`.
  /// The current authenticated user must have the `billing.accounts.update`
  /// IAM permission, which is typically given to the
  /// [administrator](https://cloud.google.com/billing/docs/how-to/billing-access)
  /// of the billing account.
  func updateBillingAccount(request: Google_Cloud_Billing_V1_UpdateBillingAccountRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Billing_V1_BillingAccount>
  /// Creates a billing account.
  /// This method can only be used to create
  /// [billing subaccounts](https://cloud.google.com/billing/docs/concepts)
  /// by GCP resellers.
  /// When creating a subaccount, the current authenticated user must have the
  /// `billing.accounts.update` IAM permission on the master account, which is
  /// typically given to billing account
  /// [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
  /// This method will return an error if the master account has not been
  /// provisioned as a reseller account.
  func createBillingAccount(request: Google_Cloud_Billing_V1_CreateBillingAccountRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Billing_V1_BillingAccount>
  /// Lists the projects associated with a billing account. The current
  /// authenticated user must have the `billing.resourceAssociations.list` IAM
  /// permission, which is often given to billing account
  /// [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
  func listProjectBillingInfo(request: Google_Cloud_Billing_V1_ListProjectBillingInfoRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Billing_V1_ListProjectBillingInfoResponse>
  /// Gets the billing information for a project. The current authenticated user
  /// must have [permission to view the
  /// project](https://cloud.google.com/docs/permissions-overview#h.bgs0oxofvnoo
  /// ).
  func getProjectBillingInfo(request: Google_Cloud_Billing_V1_GetProjectBillingInfoRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Billing_V1_ProjectBillingInfo>
  /// Sets or updates the billing account associated with a project. You specify
  /// the new billing account by setting the `billing_account_name` in the
  /// `ProjectBillingInfo` resource to the resource name of a billing account.
  /// Associating a project with an open billing account enables billing on the
  /// project and allows charges for resource usage. If the project already had a
  /// billing account, this method changes the billing account used for resource
  /// usage charges.
  ///
  /// *Note:* Incurred charges that have not yet been reported in the transaction
  /// history of the GCP Console might be billed to the new billing
  /// account, even if the charge occurred before the new billing account was
  /// assigned to the project.
  ///
  /// The current authenticated user must have ownership privileges for both the
  /// [project](https://cloud.google.com/docs/permissions-overview#h.bgs0oxofvnoo
  /// ) and the [billing
  /// account](https://cloud.google.com/billing/docs/how-to/billing-access).
  ///
  /// You can disable billing on the project by setting the
  /// `billing_account_name` field to empty. This action disassociates the
  /// current billing account from the project. Any billable activity of your
  /// in-use services will stop, and your application could stop functioning as
  /// expected. Any unbilled charges to date will be billed to the previously
  /// associated account. The current authenticated user must be either an owner
  /// of the project or an owner of the billing account for the project.
  ///
  /// Note that associating a project with a *closed* billing account will have
  /// much the same effect as disabling billing on the project: any paid
  /// resources used by the project will be shut down. Thus, unless you wish to
  /// disable billing, you should always call this method with the name of an
  /// *open* billing account.
  func updateProjectBillingInfo(request: Google_Cloud_Billing_V1_UpdateProjectBillingInfoRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Billing_V1_ProjectBillingInfo>
  /// Gets the access control policy for a billing account.
  /// The caller must have the `billing.accounts.getIamPolicy` permission on the
  /// account, which is often given to billing account
  /// [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
  func getIamPolicy(request: Google_Iam_V1_GetIamPolicyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_Policy>
  /// Sets the access control policy for a billing account. Replaces any existing
  /// policy.
  /// The caller must have the `billing.accounts.setIamPolicy` permission on the
  /// account, which is often given to billing account
  /// [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
  func setIamPolicy(request: Google_Iam_V1_SetIamPolicyRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_Policy>
  /// Tests the access control policy for a billing account. This method takes
  /// the resource and a set of permissions as input and returns the subset of
  /// the input permissions that the caller is allowed for that resource.
  func testIamPermissions(request: Google_Iam_V1_TestIamPermissionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Iam_V1_TestIamPermissionsResponse>
}

extension Google_Cloud_Billing_V1_CloudBillingProvider {
  public var serviceName: Substring { return "google.cloud.billing.v1.CloudBilling" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "GetBillingAccount":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getBillingAccount(request: request, context: context)
        }
      }

    case "ListBillingAccounts":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listBillingAccounts(request: request, context: context)
        }
      }

    case "UpdateBillingAccount":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateBillingAccount(request: request, context: context)
        }
      }

    case "CreateBillingAccount":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createBillingAccount(request: request, context: context)
        }
      }

    case "ListProjectBillingInfo":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listProjectBillingInfo(request: request, context: context)
        }
      }

    case "GetProjectBillingInfo":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getProjectBillingInfo(request: request, context: context)
        }
      }

    case "UpdateProjectBillingInfo":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateProjectBillingInfo(request: request, context: context)
        }
      }

    case "GetIamPolicy":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getIamPolicy(request: request, context: context)
        }
      }

    case "SetIamPolicy":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.setIamPolicy(request: request, context: context)
        }
      }

    case "TestIamPermissions":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.testIamPermissions(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

