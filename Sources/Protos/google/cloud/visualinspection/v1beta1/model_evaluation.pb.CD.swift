// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/visualinspection/v1beta1/model_evaluation.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// ModelEvaluation for visual inspection solutions.
public struct Google_Cloud_Visualinspection_V1beta1_ModelEvaluation {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Output only. Resource name for ModelEvaluation generated by the system.
  public var name: String = String()

  /// Deprecated, use metrics_map instead.
  /// Metrics for this evaluation.
  public var metrics: Google_Cloud_Visualinspection_V1beta1_Metrics {
    get {return _metrics ?? Google_Cloud_Visualinspection_V1beta1_Metrics()}
    set {_metrics = newValue}
  }
  /// Returns true if `metrics` has been explicitly set.
  public var hasMetrics: Bool {return self._metrics != nil}
  /// Clears the value of `metrics`. Subsequent reads from it will return its default value.
  public mutating func clearMetrics() {self._metrics = nil}

  /// Output only. Deprecated, use eval_annotation_sets_map instead.
  /// The AnnotationSets containing output Annotations on the eval set. These
  /// will be readonly AnnotationSets belonging to the Solution's Dataset and
  /// have the same lifetime as the Model to which it belongs.
  public var evalAnnotationSets: [String] = []

  /// Output only. Map of the Metrics for this model evaluation. The key is a
  /// name for the Metrics entry. Individual Modules define which Metrics they
  /// support and typically there will be a map entry for every output the Module
  /// produces.
  public var metricsMap: Dictionary<String,Google_Cloud_Visualinspection_V1beta1_Metrics> = [:]

  /// Output only. Map of the evaluation annotation sets for this model. The keys
  /// are the name of module outputs annotation fields and the values are the
  /// annotation sets ids containing output Annotations on the eval set. These
  /// will be readonly AnnotationSets belonging to the Solution's Dataset and
  /// have the same lifetime as the Model to which it belongs.
  public var evalAnnotationSetsMap: Dictionary<String,String> = [:]

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _metrics: Google_Cloud_Visualinspection_V1beta1_Metrics? = nil
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.visualinspection.v1beta1"

extension Google_Cloud_Visualinspection_V1beta1_ModelEvaluation: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".ModelEvaluation"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .same(proto: "metrics"),
    3: .standard(proto: "eval_annotation_sets"),
    4: .standard(proto: "metrics_map"),
    5: .standard(proto: "eval_annotation_sets_map"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.name) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._metrics) }()
      case 3: try { try decoder.decodeRepeatedStringField(value: &self.evalAnnotationSets) }()
      case 4: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Google_Cloud_Visualinspection_V1beta1_Metrics>.self, value: &self.metricsMap) }()
      case 5: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &self.evalAnnotationSetsMap) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.name.isEmpty {
      try visitor.visitSingularStringField(value: self.name, fieldNumber: 1)
    }
    if let v = self._metrics {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if !self.evalAnnotationSets.isEmpty {
      try visitor.visitRepeatedStringField(value: self.evalAnnotationSets, fieldNumber: 3)
    }
    if !self.metricsMap.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Google_Cloud_Visualinspection_V1beta1_Metrics>.self, value: self.metricsMap, fieldNumber: 4)
    }
    if !self.evalAnnotationSetsMap.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: self.evalAnnotationSetsMap, fieldNumber: 5)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Visualinspection_V1beta1_ModelEvaluation, rhs: Google_Cloud_Visualinspection_V1beta1_ModelEvaluation) -> Bool {
    if lhs.name != rhs.name {return false}
    if lhs._metrics != rhs._metrics {return false}
    if lhs.evalAnnotationSets != rhs.evalAnnotationSets {return false}
    if lhs.metricsMap != rhs.metricsMap {return false}
    if lhs.evalAnnotationSetsMap != rhs.evalAnnotationSetsMap {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
