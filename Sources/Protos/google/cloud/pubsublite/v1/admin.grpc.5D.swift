//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/pubsublite/v1/admin.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Pubsublite_V1_AdminServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Pubsublite_V1_AdminServiceClientProtocol: GRPCClient {
  func createTopic(
    _ request: Google_Cloud_Pubsublite_V1_CreateTopicRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_CreateTopicRequest, Google_Cloud_Pubsublite_V1_Topic>

  func getTopic(
    _ request: Google_Cloud_Pubsublite_V1_GetTopicRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_GetTopicRequest, Google_Cloud_Pubsublite_V1_Topic>

  func getTopicPartitions(
    _ request: Google_Cloud_Pubsublite_V1_GetTopicPartitionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_GetTopicPartitionsRequest, Google_Cloud_Pubsublite_V1_TopicPartitions>

  func listTopics(
    _ request: Google_Cloud_Pubsublite_V1_ListTopicsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_ListTopicsRequest, Google_Cloud_Pubsublite_V1_ListTopicsResponse>

  func updateTopic(
    _ request: Google_Cloud_Pubsublite_V1_UpdateTopicRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_UpdateTopicRequest, Google_Cloud_Pubsublite_V1_Topic>

  func deleteTopic(
    _ request: Google_Cloud_Pubsublite_V1_DeleteTopicRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_DeleteTopicRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func listTopicSubscriptions(
    _ request: Google_Cloud_Pubsublite_V1_ListTopicSubscriptionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_ListTopicSubscriptionsRequest, Google_Cloud_Pubsublite_V1_ListTopicSubscriptionsResponse>

  func createSubscription(
    _ request: Google_Cloud_Pubsublite_V1_CreateSubscriptionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_CreateSubscriptionRequest, Google_Cloud_Pubsublite_V1_Subscription>

  func getSubscription(
    _ request: Google_Cloud_Pubsublite_V1_GetSubscriptionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_GetSubscriptionRequest, Google_Cloud_Pubsublite_V1_Subscription>

  func listSubscriptions(
    _ request: Google_Cloud_Pubsublite_V1_ListSubscriptionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_ListSubscriptionsRequest, Google_Cloud_Pubsublite_V1_ListSubscriptionsResponse>

  func updateSubscription(
    _ request: Google_Cloud_Pubsublite_V1_UpdateSubscriptionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_UpdateSubscriptionRequest, Google_Cloud_Pubsublite_V1_Subscription>

  func deleteSubscription(
    _ request: Google_Cloud_Pubsublite_V1_DeleteSubscriptionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_DeleteSubscriptionRequest, SwiftProtobuf.Google_Protobuf_Empty>

}

extension Google_Cloud_Pubsublite_V1_AdminServiceClientProtocol {

  /// Creates a new topic.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateTopic.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createTopic(
    _ request: Google_Cloud_Pubsublite_V1_CreateTopicRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_CreateTopicRequest, Google_Cloud_Pubsublite_V1_Topic> {
    return self.makeUnaryCall(
      path: "/google.cloud.pubsublite.v1.AdminService/CreateTopic",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns the topic configuration.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTopic.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTopic(
    _ request: Google_Cloud_Pubsublite_V1_GetTopicRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_GetTopicRequest, Google_Cloud_Pubsublite_V1_Topic> {
    return self.makeUnaryCall(
      path: "/google.cloud.pubsublite.v1.AdminService/GetTopic",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns the partition information for the requested topic.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTopicPartitions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTopicPartitions(
    _ request: Google_Cloud_Pubsublite_V1_GetTopicPartitionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_GetTopicPartitionsRequest, Google_Cloud_Pubsublite_V1_TopicPartitions> {
    return self.makeUnaryCall(
      path: "/google.cloud.pubsublite.v1.AdminService/GetTopicPartitions",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns the list of topics for the given project.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListTopics.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listTopics(
    _ request: Google_Cloud_Pubsublite_V1_ListTopicsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_ListTopicsRequest, Google_Cloud_Pubsublite_V1_ListTopicsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.pubsublite.v1.AdminService/ListTopics",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates properties of the specified topic.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateTopic.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateTopic(
    _ request: Google_Cloud_Pubsublite_V1_UpdateTopicRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_UpdateTopicRequest, Google_Cloud_Pubsublite_V1_Topic> {
    return self.makeUnaryCall(
      path: "/google.cloud.pubsublite.v1.AdminService/UpdateTopic",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes the specified topic.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteTopic.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteTopic(
    _ request: Google_Cloud_Pubsublite_V1_DeleteTopicRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_DeleteTopicRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.pubsublite.v1.AdminService/DeleteTopic",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists the subscriptions attached to the specified topic.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListTopicSubscriptions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listTopicSubscriptions(
    _ request: Google_Cloud_Pubsublite_V1_ListTopicSubscriptionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_ListTopicSubscriptionsRequest, Google_Cloud_Pubsublite_V1_ListTopicSubscriptionsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.pubsublite.v1.AdminService/ListTopicSubscriptions",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a new subscription.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateSubscription.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createSubscription(
    _ request: Google_Cloud_Pubsublite_V1_CreateSubscriptionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_CreateSubscriptionRequest, Google_Cloud_Pubsublite_V1_Subscription> {
    return self.makeUnaryCall(
      path: "/google.cloud.pubsublite.v1.AdminService/CreateSubscription",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns the subscription configuration.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSubscription.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getSubscription(
    _ request: Google_Cloud_Pubsublite_V1_GetSubscriptionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_GetSubscriptionRequest, Google_Cloud_Pubsublite_V1_Subscription> {
    return self.makeUnaryCall(
      path: "/google.cloud.pubsublite.v1.AdminService/GetSubscription",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Returns the list of subscriptions for the given project.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListSubscriptions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listSubscriptions(
    _ request: Google_Cloud_Pubsublite_V1_ListSubscriptionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_ListSubscriptionsRequest, Google_Cloud_Pubsublite_V1_ListSubscriptionsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.pubsublite.v1.AdminService/ListSubscriptions",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates properties of the specified subscription.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateSubscription.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateSubscription(
    _ request: Google_Cloud_Pubsublite_V1_UpdateSubscriptionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_UpdateSubscriptionRequest, Google_Cloud_Pubsublite_V1_Subscription> {
    return self.makeUnaryCall(
      path: "/google.cloud.pubsublite.v1.AdminService/UpdateSubscription",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes the specified subscription.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteSubscription.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteSubscription(
    _ request: Google_Cloud_Pubsublite_V1_DeleteSubscriptionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Pubsublite_V1_DeleteSubscriptionRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.cloud.pubsublite.v1.AdminService/DeleteSubscription",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Pubsublite_V1_AdminServiceClient: Google_Cloud_Pubsublite_V1_AdminServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.pubsublite.v1.AdminService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Pubsublite_V1_AdminServiceProvider: CallHandlerProvider {
  /// Creates a new topic.
  func createTopic(request: Google_Cloud_Pubsublite_V1_CreateTopicRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Pubsublite_V1_Topic>
  /// Returns the topic configuration.
  func getTopic(request: Google_Cloud_Pubsublite_V1_GetTopicRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Pubsublite_V1_Topic>
  /// Returns the partition information for the requested topic.
  func getTopicPartitions(request: Google_Cloud_Pubsublite_V1_GetTopicPartitionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Pubsublite_V1_TopicPartitions>
  /// Returns the list of topics for the given project.
  func listTopics(request: Google_Cloud_Pubsublite_V1_ListTopicsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Pubsublite_V1_ListTopicsResponse>
  /// Updates properties of the specified topic.
  func updateTopic(request: Google_Cloud_Pubsublite_V1_UpdateTopicRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Pubsublite_V1_Topic>
  /// Deletes the specified topic.
  func deleteTopic(request: Google_Cloud_Pubsublite_V1_DeleteTopicRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Lists the subscriptions attached to the specified topic.
  func listTopicSubscriptions(request: Google_Cloud_Pubsublite_V1_ListTopicSubscriptionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Pubsublite_V1_ListTopicSubscriptionsResponse>
  /// Creates a new subscription.
  func createSubscription(request: Google_Cloud_Pubsublite_V1_CreateSubscriptionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Pubsublite_V1_Subscription>
  /// Returns the subscription configuration.
  func getSubscription(request: Google_Cloud_Pubsublite_V1_GetSubscriptionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Pubsublite_V1_Subscription>
  /// Returns the list of subscriptions for the given project.
  func listSubscriptions(request: Google_Cloud_Pubsublite_V1_ListSubscriptionsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Pubsublite_V1_ListSubscriptionsResponse>
  /// Updates properties of the specified subscription.
  func updateSubscription(request: Google_Cloud_Pubsublite_V1_UpdateSubscriptionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Pubsublite_V1_Subscription>
  /// Deletes the specified subscription.
  func deleteSubscription(request: Google_Cloud_Pubsublite_V1_DeleteSubscriptionRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
}

extension Google_Cloud_Pubsublite_V1_AdminServiceProvider {
  public var serviceName: Substring { return "google.cloud.pubsublite.v1.AdminService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "CreateTopic":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createTopic(request: request, context: context)
        }
      }

    case "GetTopic":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getTopic(request: request, context: context)
        }
      }

    case "GetTopicPartitions":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getTopicPartitions(request: request, context: context)
        }
      }

    case "ListTopics":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listTopics(request: request, context: context)
        }
      }

    case "UpdateTopic":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateTopic(request: request, context: context)
        }
      }

    case "DeleteTopic":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteTopic(request: request, context: context)
        }
      }

    case "ListTopicSubscriptions":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listTopicSubscriptions(request: request, context: context)
        }
      }

    case "CreateSubscription":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createSubscription(request: request, context: context)
        }
      }

    case "GetSubscription":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getSubscription(request: request, context: context)
        }
      }

    case "ListSubscriptions":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listSubscriptions(request: request, context: context)
        }
      }

    case "UpdateSubscription":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateSubscription(request: request, context: context)
        }
      }

    case "DeleteSubscription":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteSubscription(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

