//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/cloud/gaming/v1beta/realms_service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Cloud_Gaming_V1beta_RealmsServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Cloud_Gaming_V1beta_RealmsServiceClientProtocol: GRPCClient {
  func listRealms(
    _ request: Google_Cloud_Gaming_V1beta_ListRealmsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Gaming_V1beta_ListRealmsRequest, Google_Cloud_Gaming_V1beta_ListRealmsResponse>

  func getRealm(
    _ request: Google_Cloud_Gaming_V1beta_GetRealmRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Gaming_V1beta_GetRealmRequest, Google_Cloud_Gaming_V1beta_Realm>

  func createRealm(
    _ request: Google_Cloud_Gaming_V1beta_CreateRealmRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Gaming_V1beta_CreateRealmRequest, Google_Longrunning_Operation>

  func deleteRealm(
    _ request: Google_Cloud_Gaming_V1beta_DeleteRealmRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Gaming_V1beta_DeleteRealmRequest, Google_Longrunning_Operation>

  func updateRealm(
    _ request: Google_Cloud_Gaming_V1beta_UpdateRealmRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Gaming_V1beta_UpdateRealmRequest, Google_Longrunning_Operation>

  func previewRealmUpdate(
    _ request: Google_Cloud_Gaming_V1beta_PreviewRealmUpdateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Cloud_Gaming_V1beta_PreviewRealmUpdateRequest, Google_Cloud_Gaming_V1beta_PreviewRealmUpdateResponse>

}

extension Google_Cloud_Gaming_V1beta_RealmsServiceClientProtocol {

  /// Lists realms in a given project and location.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListRealms.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listRealms(
    _ request: Google_Cloud_Gaming_V1beta_ListRealmsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Gaming_V1beta_ListRealmsRequest, Google_Cloud_Gaming_V1beta_ListRealmsResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.gaming.v1beta.RealmsService/ListRealms",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets details of a single realm.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetRealm.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getRealm(
    _ request: Google_Cloud_Gaming_V1beta_GetRealmRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Gaming_V1beta_GetRealmRequest, Google_Cloud_Gaming_V1beta_Realm> {
    return self.makeUnaryCall(
      path: "/google.cloud.gaming.v1beta.RealmsService/GetRealm",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a new realm in a given project and location.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateRealm.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createRealm(
    _ request: Google_Cloud_Gaming_V1beta_CreateRealmRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Gaming_V1beta_CreateRealmRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.gaming.v1beta.RealmsService/CreateRealm",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a single realm.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteRealm.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteRealm(
    _ request: Google_Cloud_Gaming_V1beta_DeleteRealmRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Gaming_V1beta_DeleteRealmRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.gaming.v1beta.RealmsService/DeleteRealm",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Patches a single realm.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateRealm.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateRealm(
    _ request: Google_Cloud_Gaming_V1beta_UpdateRealmRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Gaming_V1beta_UpdateRealmRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.cloud.gaming.v1beta.RealmsService/UpdateRealm",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Previews patches to a single realm.
  ///
  /// - Parameters:
  ///   - request: Request to send to PreviewRealmUpdate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func previewRealmUpdate(
    _ request: Google_Cloud_Gaming_V1beta_PreviewRealmUpdateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Cloud_Gaming_V1beta_PreviewRealmUpdateRequest, Google_Cloud_Gaming_V1beta_PreviewRealmUpdateResponse> {
    return self.makeUnaryCall(
      path: "/google.cloud.gaming.v1beta.RealmsService/PreviewRealmUpdate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Cloud_Gaming_V1beta_RealmsServiceClient: Google_Cloud_Gaming_V1beta_RealmsServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.cloud.gaming.v1beta.RealmsService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Cloud_Gaming_V1beta_RealmsServiceProvider: CallHandlerProvider {
  /// Lists realms in a given project and location.
  func listRealms(request: Google_Cloud_Gaming_V1beta_ListRealmsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Gaming_V1beta_ListRealmsResponse>
  /// Gets details of a single realm.
  func getRealm(request: Google_Cloud_Gaming_V1beta_GetRealmRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Gaming_V1beta_Realm>
  /// Creates a new realm in a given project and location.
  func createRealm(request: Google_Cloud_Gaming_V1beta_CreateRealmRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Deletes a single realm.
  func deleteRealm(request: Google_Cloud_Gaming_V1beta_DeleteRealmRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Patches a single realm.
  func updateRealm(request: Google_Cloud_Gaming_V1beta_UpdateRealmRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Previews patches to a single realm.
  func previewRealmUpdate(request: Google_Cloud_Gaming_V1beta_PreviewRealmUpdateRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Cloud_Gaming_V1beta_PreviewRealmUpdateResponse>
}

extension Google_Cloud_Gaming_V1beta_RealmsServiceProvider {
  public var serviceName: Substring { return "google.cloud.gaming.v1beta.RealmsService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "ListRealms":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listRealms(request: request, context: context)
        }
      }

    case "GetRealm":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getRealm(request: request, context: context)
        }
      }

    case "CreateRealm":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createRealm(request: request, context: context)
        }
      }

    case "DeleteRealm":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteRealm(request: request, context: context)
        }
      }

    case "UpdateRealm":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateRealm(request: request, context: context)
        }
      }

    case "PreviewRealmUpdate":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.previewRealmUpdate(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

