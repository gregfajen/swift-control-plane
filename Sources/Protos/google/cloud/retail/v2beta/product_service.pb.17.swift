// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/cloud/retail/v2beta/product_service.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Request message for [CreateProduct][] method.
public struct Google_Cloud_Retail_V2beta_CreateProductRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Required. The parent catalog resource name, such as
  ///
  /// "projects/*/locations/global/catalogs/default_catalog/branches/default_branch".
  public var parent: String = String()

  /// Required. The [Product][google.cloud.retail.v2beta.Product] to create.
  public var product: Google_Cloud_Retail_V2beta_Product {
    get {return _product ?? Google_Cloud_Retail_V2beta_Product()}
    set {_product = newValue}
  }
  /// Returns true if `product` has been explicitly set.
  public var hasProduct: Bool {return self._product != nil}
  /// Clears the value of `product`. Subsequent reads from it will return its default value.
  public mutating func clearProduct() {self._product = nil}

  /// Required. The ID to use for the
  /// [Product][google.cloud.retail.v2beta.Product], which will become the final
  /// component of the [Product.name][google.cloud.retail.v2beta.Product.name].
  ///
  /// If the caller does not have permission to create the
  /// [Product][google.cloud.retail.v2beta.Product], regardless of whether or not
  /// it exists, a PERMISSION_DENIED error is returned.
  ///
  /// This field must be unique among all
  /// [Product][google.cloud.retail.v2beta.Product]s with the same
  /// [parent][google.cloud.retail.v2beta.CreateProductRequest.parent].
  /// Otherwise, an ALREADY_EXISTS error is returned.
  ///
  /// This field must be a UTF-8 encoded string with a length limit of 128
  /// characters. Otherwise, an INVALID_ARGUMENT error is returned.
  public var productID: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _product: Google_Cloud_Retail_V2beta_Product? = nil
}

/// Request message for [GetProduct][] method.
public struct Google_Cloud_Retail_V2beta_GetProductRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Required. Full resource name of
  /// [Product][google.cloud.retail.v2beta.Product], such as
  ///
  /// "projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id".
  ///
  /// If the caller does not have permission to access the
  /// [Product][google.cloud.retail.v2beta.Product], regardless of whether or not
  /// it exists, a PERMISSION_DENIED error is returned.
  ///
  /// If the requested [Product][google.cloud.retail.v2beta.Product] does not
  /// exist, a NOT_FOUND error is returned.
  public var name: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

/// Request message for [UpdateProduct][] method.
public struct Google_Cloud_Retail_V2beta_UpdateProductRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Required. The product to update/create.
  ///
  /// If the caller does not have permission to update the
  /// [Product][google.cloud.retail.v2beta.Product], regardless of whether or not
  /// it exists, a PERMISSION_DENIED error is returned.
  ///
  /// If the [Product][google.cloud.retail.v2beta.Product] to update does not
  /// exist, a NOT_FOUND error is returned.
  public var product: Google_Cloud_Retail_V2beta_Product {
    get {return _product ?? Google_Cloud_Retail_V2beta_Product()}
    set {_product = newValue}
  }
  /// Returns true if `product` has been explicitly set.
  public var hasProduct: Bool {return self._product != nil}
  /// Clears the value of `product`. Subsequent reads from it will return its default value.
  public mutating func clearProduct() {self._product = nil}

  /// Indicates which fields in the provided
  /// [Product][google.cloud.retail.v2beta.Product] to update. The immutable and
  /// output only fields are NOT supported. If not set, all supported fields (the
  /// fields that are neither immutable nor output only) are updated.
  ///
  /// If an unsupported or unknown field is provided, an INVALID_ARGUMENT error
  /// is returned.
  public var updateMask: SwiftProtobuf.Google_Protobuf_FieldMask {
    get {return _updateMask ?? SwiftProtobuf.Google_Protobuf_FieldMask()}
    set {_updateMask = newValue}
  }
  /// Returns true if `updateMask` has been explicitly set.
  public var hasUpdateMask: Bool {return self._updateMask != nil}
  /// Clears the value of `updateMask`. Subsequent reads from it will return its default value.
  public mutating func clearUpdateMask() {self._updateMask = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _product: Google_Cloud_Retail_V2beta_Product? = nil
  fileprivate var _updateMask: SwiftProtobuf.Google_Protobuf_FieldMask? = nil
}

/// Request message for [DeleteProduct][] method.
public struct Google_Cloud_Retail_V2beta_DeleteProductRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Required. Full resource name of
  /// [Product][google.cloud.retail.v2beta.Product], such as
  ///
  /// "projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id".
  ///
  /// If the caller does not have permission to delete the
  /// [Product][google.cloud.retail.v2beta.Product], regardless of whether or not
  /// it exists, a PERMISSION_DENIED error is returned.
  ///
  /// If the [Product][google.cloud.retail.v2beta.Product] to delete does not
  /// exist, a NOT_FOUND error is returned.
  ///
  /// The [Product][google.cloud.retail.v2beta.Product] to delete can neither be
  /// a non-empty [Product.Type.COLLECTION][]
  /// [Product][google.cloud.retail.v2beta.Product] nor a
  /// [Product.Type.PRIMARY][] [Product][google.cloud.retail.v2beta.Product] with
  /// more than one [variants][Product.Type.VARIANT]. Otherwise, a
  /// FAILED_PRECONDITION error is returned.
  public var name: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.cloud.retail.v2beta"

extension Google_Cloud_Retail_V2beta_CreateProductRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".CreateProductRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "parent"),
    2: .same(proto: "product"),
    3: .standard(proto: "product_id"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.parent) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._product) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.productID) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.parent.isEmpty {
      try visitor.visitSingularStringField(value: self.parent, fieldNumber: 1)
    }
    if let v = self._product {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if !self.productID.isEmpty {
      try visitor.visitSingularStringField(value: self.productID, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Retail_V2beta_CreateProductRequest, rhs: Google_Cloud_Retail_V2beta_CreateProductRequest) -> Bool {
    if lhs.parent != rhs.parent {return false}
    if lhs._product != rhs._product {return false}
    if lhs.productID != rhs.productID {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Retail_V2beta_GetProductRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".GetProductRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.name) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.name.isEmpty {
      try visitor.visitSingularStringField(value: self.name, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Retail_V2beta_GetProductRequest, rhs: Google_Cloud_Retail_V2beta_GetProductRequest) -> Bool {
    if lhs.name != rhs.name {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Retail_V2beta_UpdateProductRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".UpdateProductRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "product"),
    2: .standard(proto: "update_mask"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._product) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._updateMask) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._product {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._updateMask {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Retail_V2beta_UpdateProductRequest, rhs: Google_Cloud_Retail_V2beta_UpdateProductRequest) -> Bool {
    if lhs._product != rhs._product {return false}
    if lhs._updateMask != rhs._updateMask {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Cloud_Retail_V2beta_DeleteProductRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".DeleteProductRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.name) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.name.isEmpty {
      try visitor.visitSingularStringField(value: self.name, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Cloud_Retail_V2beta_DeleteProductRequest, rhs: Google_Cloud_Retail_V2beta_DeleteProductRequest) -> Bool {
    if lhs.name != rhs.name {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
