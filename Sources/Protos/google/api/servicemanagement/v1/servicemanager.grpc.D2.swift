//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/api/servicemanagement/v1/servicemanager.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Api_Servicemanagement_V1_ServiceManagerClient, then call methods of this protocol to make API calls.
public protocol Google_Api_Servicemanagement_V1_ServiceManagerClientProtocol: GRPCClient {
  func listServices(
    _ request: Google_Api_Servicemanagement_V1_ListServicesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_ListServicesRequest, Google_Api_Servicemanagement_V1_ListServicesResponse>

  func getService(
    _ request: Google_Api_Servicemanagement_V1_GetServiceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_GetServiceRequest, Google_Api_Servicemanagement_V1_ManagedService>

  func createService(
    _ request: Google_Api_Servicemanagement_V1_CreateServiceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_CreateServiceRequest, Google_Longrunning_Operation>

  func deleteService(
    _ request: Google_Api_Servicemanagement_V1_DeleteServiceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_DeleteServiceRequest, Google_Longrunning_Operation>

  func undeleteService(
    _ request: Google_Api_Servicemanagement_V1_UndeleteServiceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_UndeleteServiceRequest, Google_Longrunning_Operation>

  func listServiceConfigs(
    _ request: Google_Api_Servicemanagement_V1_ListServiceConfigsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_ListServiceConfigsRequest, Google_Api_Servicemanagement_V1_ListServiceConfigsResponse>

  func getServiceConfig(
    _ request: Google_Api_Servicemanagement_V1_GetServiceConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_GetServiceConfigRequest, Google_Api_Service>

  func createServiceConfig(
    _ request: Google_Api_Servicemanagement_V1_CreateServiceConfigRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_CreateServiceConfigRequest, Google_Api_Service>

  func submitConfigSource(
    _ request: Google_Api_Servicemanagement_V1_SubmitConfigSourceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_SubmitConfigSourceRequest, Google_Longrunning_Operation>

  func listServiceRollouts(
    _ request: Google_Api_Servicemanagement_V1_ListServiceRolloutsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_ListServiceRolloutsRequest, Google_Api_Servicemanagement_V1_ListServiceRolloutsResponse>

  func getServiceRollout(
    _ request: Google_Api_Servicemanagement_V1_GetServiceRolloutRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_GetServiceRolloutRequest, Google_Api_Servicemanagement_V1_Rollout>

  func createServiceRollout(
    _ request: Google_Api_Servicemanagement_V1_CreateServiceRolloutRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_CreateServiceRolloutRequest, Google_Longrunning_Operation>

  func generateConfigReport(
    _ request: Google_Api_Servicemanagement_V1_GenerateConfigReportRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_GenerateConfigReportRequest, Google_Api_Servicemanagement_V1_GenerateConfigReportResponse>

  func enableService(
    _ request: Google_Api_Servicemanagement_V1_EnableServiceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_EnableServiceRequest, Google_Longrunning_Operation>

  func disableService(
    _ request: Google_Api_Servicemanagement_V1_DisableServiceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_DisableServiceRequest, Google_Longrunning_Operation>

}

extension Google_Api_Servicemanagement_V1_ServiceManagerClientProtocol {

  /// Lists managed services.
  ///
  /// Returns all public services. For authenticated users, also returns all
  /// services the calling user has "servicemanagement.services.get" permission
  /// for.
  ///
  /// **BETA:** If the caller specifies the `consumer_id`, it returns only the
  /// services enabled on the consumer. The `consumer_id` must have the format
  /// of "project:{PROJECT-ID}".
  ///
  /// - Parameters:
  ///   - request: Request to send to ListServices.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listServices(
    _ request: Google_Api_Servicemanagement_V1_ListServicesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_ListServicesRequest, Google_Api_Servicemanagement_V1_ListServicesResponse> {
    return self.makeUnaryCall(
      path: "/google.api.servicemanagement.v1.ServiceManager/ListServices",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a managed service. Authentication is required unless the service is
  /// public.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetService.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getService(
    _ request: Google_Api_Servicemanagement_V1_GetServiceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_GetServiceRequest, Google_Api_Servicemanagement_V1_ManagedService> {
    return self.makeUnaryCall(
      path: "/google.api.servicemanagement.v1.ServiceManager/GetService",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a new managed service.
  /// Please note one producer project can own no more than 20 services.
  ///
  /// Operation<response: ManagedService>
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateService.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createService(
    _ request: Google_Api_Servicemanagement_V1_CreateServiceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_CreateServiceRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.api.servicemanagement.v1.ServiceManager/CreateService",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a managed service. This method will change the service to the
  /// `Soft-Delete` state for 30 days. Within this period, service producers may
  /// call [UndeleteService][google.api.servicemanagement.v1.ServiceManager.UndeleteService] to restore the service.
  /// After 30 days, the service will be permanently deleted.
  ///
  /// Operation<response: google.protobuf.Empty>
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteService.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteService(
    _ request: Google_Api_Servicemanagement_V1_DeleteServiceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_DeleteServiceRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.api.servicemanagement.v1.ServiceManager/DeleteService",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Revives a previously deleted managed service. The method restores the
  /// service using the configuration at the time the service was deleted.
  /// The target service must exist and must have been deleted within the
  /// last 30 days.
  ///
  /// Operation<response: UndeleteServiceResponse>
  ///
  /// - Parameters:
  ///   - request: Request to send to UndeleteService.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func undeleteService(
    _ request: Google_Api_Servicemanagement_V1_UndeleteServiceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_UndeleteServiceRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.api.servicemanagement.v1.ServiceManager/UndeleteService",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists the history of the service configuration for a managed service,
  /// from the newest to the oldest.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListServiceConfigs.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listServiceConfigs(
    _ request: Google_Api_Servicemanagement_V1_ListServiceConfigsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_ListServiceConfigsRequest, Google_Api_Servicemanagement_V1_ListServiceConfigsResponse> {
    return self.makeUnaryCall(
      path: "/google.api.servicemanagement.v1.ServiceManager/ListServiceConfigs",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a service configuration (version) for a managed service.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetServiceConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getServiceConfig(
    _ request: Google_Api_Servicemanagement_V1_GetServiceConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_GetServiceConfigRequest, Google_Api_Service> {
    return self.makeUnaryCall(
      path: "/google.api.servicemanagement.v1.ServiceManager/GetServiceConfig",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a new service configuration (version) for a managed service.
  /// This method only stores the service configuration. To roll out the service
  /// configuration to backend systems please call
  /// [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
  ///
  /// Only the 100 most recent service configurations and ones referenced by
  /// existing rollouts are kept for each service. The rest will be deleted
  /// eventually.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateServiceConfig.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createServiceConfig(
    _ request: Google_Api_Servicemanagement_V1_CreateServiceConfigRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_CreateServiceConfigRequest, Google_Api_Service> {
    return self.makeUnaryCall(
      path: "/google.api.servicemanagement.v1.ServiceManager/CreateServiceConfig",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a new service configuration (version) for a managed service based
  /// on
  /// user-supplied configuration source files (for example: OpenAPI
  /// Specification). This method stores the source configurations as well as the
  /// generated service configuration. To rollout the service configuration to
  /// other services,
  /// please call [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
  ///
  /// Only the 100 most recent configuration sources and ones referenced by
  /// existing service configurtions are kept for each service. The rest will be
  /// deleted eventually.
  ///
  /// Operation<response: SubmitConfigSourceResponse>
  ///
  /// - Parameters:
  ///   - request: Request to send to SubmitConfigSource.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func submitConfigSource(
    _ request: Google_Api_Servicemanagement_V1_SubmitConfigSourceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_SubmitConfigSourceRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.api.servicemanagement.v1.ServiceManager/SubmitConfigSource",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists the history of the service configuration rollouts for a managed
  /// service, from the newest to the oldest.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListServiceRollouts.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listServiceRollouts(
    _ request: Google_Api_Servicemanagement_V1_ListServiceRolloutsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_ListServiceRolloutsRequest, Google_Api_Servicemanagement_V1_ListServiceRolloutsResponse> {
    return self.makeUnaryCall(
      path: "/google.api.servicemanagement.v1.ServiceManager/ListServiceRollouts",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a service configuration [rollout][google.api.servicemanagement.v1.Rollout].
  ///
  /// - Parameters:
  ///   - request: Request to send to GetServiceRollout.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getServiceRollout(
    _ request: Google_Api_Servicemanagement_V1_GetServiceRolloutRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_GetServiceRolloutRequest, Google_Api_Servicemanagement_V1_Rollout> {
    return self.makeUnaryCall(
      path: "/google.api.servicemanagement.v1.ServiceManager/GetServiceRollout",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Creates a new service configuration rollout. Based on rollout, the
  /// Google Service Management will roll out the service configurations to
  /// different backend services. For example, the logging configuration will be
  /// pushed to Google Cloud Logging.
  ///
  /// Please note that any previous pending and running Rollouts and associated
  /// Operations will be automatically cancelled so that the latest Rollout will
  /// not be blocked by previous Rollouts.
  ///
  /// Only the 100 most recent (in any state) and the last 10 successful (if not
  /// already part of the set of 100 most recent) rollouts are kept for each
  /// service. The rest will be deleted eventually.
  ///
  /// Operation<response: Rollout>
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateServiceRollout.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createServiceRollout(
    _ request: Google_Api_Servicemanagement_V1_CreateServiceRolloutRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_CreateServiceRolloutRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.api.servicemanagement.v1.ServiceManager/CreateServiceRollout",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Generates and returns a report (errors, warnings and changes from
  /// existing configurations) associated with
  /// GenerateConfigReportRequest.new_value
  ///
  /// If GenerateConfigReportRequest.old_value is specified,
  /// GenerateConfigReportRequest will contain a single ChangeReport based on the
  /// comparison between GenerateConfigReportRequest.new_value and
  /// GenerateConfigReportRequest.old_value.
  /// If GenerateConfigReportRequest.old_value is not specified, this method
  /// will compare GenerateConfigReportRequest.new_value with the last pushed
  /// service configuration.
  ///
  /// - Parameters:
  ///   - request: Request to send to GenerateConfigReport.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func generateConfigReport(
    _ request: Google_Api_Servicemanagement_V1_GenerateConfigReportRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_GenerateConfigReportRequest, Google_Api_Servicemanagement_V1_GenerateConfigReportResponse> {
    return self.makeUnaryCall(
      path: "/google.api.servicemanagement.v1.ServiceManager/GenerateConfigReport",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Enables a [service][google.api.servicemanagement.v1.ManagedService] for a project, so it can be used
  /// for the project. See
  /// [Cloud Auth Guide](https://cloud.google.com/docs/authentication) for
  /// more information.
  ///
  /// Operation<response: EnableServiceResponse>
  ///
  /// - Parameters:
  ///   - request: Request to send to EnableService.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func enableService(
    _ request: Google_Api_Servicemanagement_V1_EnableServiceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_EnableServiceRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.api.servicemanagement.v1.ServiceManager/EnableService",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Disables a [service][google.api.servicemanagement.v1.ManagedService] for a project, so it can no longer be
  /// be used for the project. It prevents accidental usage that may cause
  /// unexpected billing charges or security leaks.
  ///
  /// Operation<response: DisableServiceResponse>
  ///
  /// - Parameters:
  ///   - request: Request to send to DisableService.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func disableService(
    _ request: Google_Api_Servicemanagement_V1_DisableServiceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Api_Servicemanagement_V1_DisableServiceRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.api.servicemanagement.v1.ServiceManager/DisableService",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Api_Servicemanagement_V1_ServiceManagerClient: Google_Api_Servicemanagement_V1_ServiceManagerClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.api.servicemanagement.v1.ServiceManager service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Api_Servicemanagement_V1_ServiceManagerProvider: CallHandlerProvider {
  /// Lists managed services.
  ///
  /// Returns all public services. For authenticated users, also returns all
  /// services the calling user has "servicemanagement.services.get" permission
  /// for.
  ///
  /// **BETA:** If the caller specifies the `consumer_id`, it returns only the
  /// services enabled on the consumer. The `consumer_id` must have the format
  /// of "project:{PROJECT-ID}".
  func listServices(request: Google_Api_Servicemanagement_V1_ListServicesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Api_Servicemanagement_V1_ListServicesResponse>
  /// Gets a managed service. Authentication is required unless the service is
  /// public.
  func getService(request: Google_Api_Servicemanagement_V1_GetServiceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Api_Servicemanagement_V1_ManagedService>
  /// Creates a new managed service.
  /// Please note one producer project can own no more than 20 services.
  ///
  /// Operation<response: ManagedService>
  func createService(request: Google_Api_Servicemanagement_V1_CreateServiceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Deletes a managed service. This method will change the service to the
  /// `Soft-Delete` state for 30 days. Within this period, service producers may
  /// call [UndeleteService][google.api.servicemanagement.v1.ServiceManager.UndeleteService] to restore the service.
  /// After 30 days, the service will be permanently deleted.
  ///
  /// Operation<response: google.protobuf.Empty>
  func deleteService(request: Google_Api_Servicemanagement_V1_DeleteServiceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Revives a previously deleted managed service. The method restores the
  /// service using the configuration at the time the service was deleted.
  /// The target service must exist and must have been deleted within the
  /// last 30 days.
  ///
  /// Operation<response: UndeleteServiceResponse>
  func undeleteService(request: Google_Api_Servicemanagement_V1_UndeleteServiceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Lists the history of the service configuration for a managed service,
  /// from the newest to the oldest.
  func listServiceConfigs(request: Google_Api_Servicemanagement_V1_ListServiceConfigsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Api_Servicemanagement_V1_ListServiceConfigsResponse>
  /// Gets a service configuration (version) for a managed service.
  func getServiceConfig(request: Google_Api_Servicemanagement_V1_GetServiceConfigRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Api_Service>
  /// Creates a new service configuration (version) for a managed service.
  /// This method only stores the service configuration. To roll out the service
  /// configuration to backend systems please call
  /// [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
  ///
  /// Only the 100 most recent service configurations and ones referenced by
  /// existing rollouts are kept for each service. The rest will be deleted
  /// eventually.
  func createServiceConfig(request: Google_Api_Servicemanagement_V1_CreateServiceConfigRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Api_Service>
  /// Creates a new service configuration (version) for a managed service based
  /// on
  /// user-supplied configuration source files (for example: OpenAPI
  /// Specification). This method stores the source configurations as well as the
  /// generated service configuration. To rollout the service configuration to
  /// other services,
  /// please call [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
  ///
  /// Only the 100 most recent configuration sources and ones referenced by
  /// existing service configurtions are kept for each service. The rest will be
  /// deleted eventually.
  ///
  /// Operation<response: SubmitConfigSourceResponse>
  func submitConfigSource(request: Google_Api_Servicemanagement_V1_SubmitConfigSourceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Lists the history of the service configuration rollouts for a managed
  /// service, from the newest to the oldest.
  func listServiceRollouts(request: Google_Api_Servicemanagement_V1_ListServiceRolloutsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Api_Servicemanagement_V1_ListServiceRolloutsResponse>
  /// Gets a service configuration [rollout][google.api.servicemanagement.v1.Rollout].
  func getServiceRollout(request: Google_Api_Servicemanagement_V1_GetServiceRolloutRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Api_Servicemanagement_V1_Rollout>
  /// Creates a new service configuration rollout. Based on rollout, the
  /// Google Service Management will roll out the service configurations to
  /// different backend services. For example, the logging configuration will be
  /// pushed to Google Cloud Logging.
  ///
  /// Please note that any previous pending and running Rollouts and associated
  /// Operations will be automatically cancelled so that the latest Rollout will
  /// not be blocked by previous Rollouts.
  ///
  /// Only the 100 most recent (in any state) and the last 10 successful (if not
  /// already part of the set of 100 most recent) rollouts are kept for each
  /// service. The rest will be deleted eventually.
  ///
  /// Operation<response: Rollout>
  func createServiceRollout(request: Google_Api_Servicemanagement_V1_CreateServiceRolloutRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Generates and returns a report (errors, warnings and changes from
  /// existing configurations) associated with
  /// GenerateConfigReportRequest.new_value
  ///
  /// If GenerateConfigReportRequest.old_value is specified,
  /// GenerateConfigReportRequest will contain a single ChangeReport based on the
  /// comparison between GenerateConfigReportRequest.new_value and
  /// GenerateConfigReportRequest.old_value.
  /// If GenerateConfigReportRequest.old_value is not specified, this method
  /// will compare GenerateConfigReportRequest.new_value with the last pushed
  /// service configuration.
  func generateConfigReport(request: Google_Api_Servicemanagement_V1_GenerateConfigReportRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Api_Servicemanagement_V1_GenerateConfigReportResponse>
  /// Enables a [service][google.api.servicemanagement.v1.ManagedService] for a project, so it can be used
  /// for the project. See
  /// [Cloud Auth Guide](https://cloud.google.com/docs/authentication) for
  /// more information.
  ///
  /// Operation<response: EnableServiceResponse>
  func enableService(request: Google_Api_Servicemanagement_V1_EnableServiceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Disables a [service][google.api.servicemanagement.v1.ManagedService] for a project, so it can no longer be
  /// be used for the project. It prevents accidental usage that may cause
  /// unexpected billing charges or security leaks.
  ///
  /// Operation<response: DisableServiceResponse>
  func disableService(request: Google_Api_Servicemanagement_V1_DisableServiceRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
}

extension Google_Api_Servicemanagement_V1_ServiceManagerProvider {
  public var serviceName: Substring { return "google.api.servicemanagement.v1.ServiceManager" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "ListServices":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listServices(request: request, context: context)
        }
      }

    case "GetService":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getService(request: request, context: context)
        }
      }

    case "CreateService":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createService(request: request, context: context)
        }
      }

    case "DeleteService":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteService(request: request, context: context)
        }
      }

    case "UndeleteService":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.undeleteService(request: request, context: context)
        }
      }

    case "ListServiceConfigs":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listServiceConfigs(request: request, context: context)
        }
      }

    case "GetServiceConfig":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getServiceConfig(request: request, context: context)
        }
      }

    case "CreateServiceConfig":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createServiceConfig(request: request, context: context)
        }
      }

    case "SubmitConfigSource":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.submitConfigSource(request: request, context: context)
        }
      }

    case "ListServiceRollouts":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listServiceRollouts(request: request, context: context)
        }
      }

    case "GetServiceRollout":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getServiceRollout(request: request, context: context)
        }
      }

    case "CreateServiceRollout":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.createServiceRollout(request: request, context: context)
        }
      }

    case "GenerateConfigReport":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.generateConfigReport(request: request, context: context)
        }
      }

    case "EnableService":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.enableService(request: request, context: context)
        }
      }

    case "DisableService":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.disableService(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

