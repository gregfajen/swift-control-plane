// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: google/api/servicecontrol/v1/operation.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Represents information regarding an operation.
public struct Google_Api_Servicecontrol_V1_Operation {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Identity of the operation. This must be unique within the scope of the
  /// service that generated the operation. If the service calls
  /// Check() and Report() on the same operation, the two calls should carry
  /// the same id.
  ///
  /// UUID version 4 is recommended, though not required.
  /// In scenarios where an operation is computed from existing information
  /// and an idempotent id is desirable for deduplication purpose, UUID version 5
  /// is recommended. See RFC 4122 for details.
  public var operationID: String = String()

  /// Fully qualified name of the operation. Reserved for future use.
  public var operationName: String = String()

  /// Identity of the consumer who is using the service.
  /// This field should be filled in for the operations initiated by a
  /// consumer, but not for service-initiated operations that are
  /// not related to a specific consumer.
  ///
  /// - This can be in one of the following formats:
  ///     - project:PROJECT_ID,
  ///     - project`_`number:PROJECT_NUMBER,
  ///     - projects/PROJECT_ID or PROJECT_NUMBER,
  ///     - folders/FOLDER_NUMBER,
  ///     - organizations/ORGANIZATION_NUMBER,
  ///     - api`_`key:API_KEY.
  public var consumerID: String = String()

  /// Required. Start time of the operation.
  public var startTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _startTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_startTime = newValue}
  }
  /// Returns true if `startTime` has been explicitly set.
  public var hasStartTime: Bool {return self._startTime != nil}
  /// Clears the value of `startTime`. Subsequent reads from it will return its default value.
  public mutating func clearStartTime() {self._startTime = nil}

  /// End time of the operation.
  /// Required when the operation is used in [ServiceController.Report][google.api.servicecontrol.v1.ServiceController.Report],
  /// but optional when the operation is used in [ServiceController.Check][google.api.servicecontrol.v1.ServiceController.Check].
  public var endTime: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _endTime ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_endTime = newValue}
  }
  /// Returns true if `endTime` has been explicitly set.
  public var hasEndTime: Bool {return self._endTime != nil}
  /// Clears the value of `endTime`. Subsequent reads from it will return its default value.
  public mutating func clearEndTime() {self._endTime = nil}

  /// Labels describing the operation. Only the following labels are allowed:
  ///
  /// - Labels describing monitored resources as defined in
  ///   the service configuration.
  /// - Default labels of metric values. When specified, labels defined in the
  ///   metric value override these default.
  /// - The following labels defined by Google Cloud Platform:
  ///     - `cloud.googleapis.com/location` describing the location where the
  ///        operation happened,
  ///     - `servicecontrol.googleapis.com/user_agent` describing the user agent
  ///        of the API request,
  ///     - `servicecontrol.googleapis.com/service_agent` describing the service
  ///        used to handle the API request (e.g. ESP),
  ///     - `servicecontrol.googleapis.com/platform` describing the platform
  ///        where the API is served, such as App Engine, Compute Engine, or
  ///        Kubernetes Engine.
  public var labels: Dictionary<String,String> = [:]

  /// Represents information about this operation. Each MetricValueSet
  /// corresponds to a metric defined in the service configuration.
  /// The data type used in the MetricValueSet must agree with
  /// the data type specified in the metric definition.
  ///
  /// Within a single operation, it is not allowed to have more than one
  /// MetricValue instances that have the same metric names and identical
  /// label value combinations. If a request has such duplicated MetricValue
  /// instances, the entire request is rejected with
  /// an invalid argument error.
  public var metricValueSets: [Google_Api_Servicecontrol_V1_MetricValueSet] = []

  /// Represents information to be logged.
  public var logEntries: [Google_Api_Servicecontrol_V1_LogEntry] = []

  /// DO NOT USE. This is an experimental field.
  public var importance: Google_Api_Servicecontrol_V1_Operation.Importance = .low

  /// Unimplemented.
  public var extensions: [SwiftProtobuf.Google_Protobuf_Any] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// Defines the importance of the data contained in the operation.
  public enum Importance: SwiftProtobuf.Enum {
    public typealias RawValue = Int

    /// The API implementation may cache and aggregate the data.
    /// The data may be lost when rare and unexpected system failures occur.
    case low // = 0

    /// The API implementation doesn't cache and aggregate the data.
    /// If the method returns successfully, it's guaranteed that the data has
    /// been persisted in durable storage.
    case high // = 1
    case UNRECOGNIZED(Int)

    public init() {
      self = .low
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .low
      case 1: self = .high
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .low: return 0
      case .high: return 1
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}

  fileprivate var _startTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
  fileprivate var _endTime: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
}

#if swift(>=4.2)

extension Google_Api_Servicecontrol_V1_Operation.Importance: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Google_Api_Servicecontrol_V1_Operation.Importance] = [
    .low,
    .high,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "google.api.servicecontrol.v1"

extension Google_Api_Servicecontrol_V1_Operation: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Operation"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "operation_id"),
    2: .standard(proto: "operation_name"),
    3: .standard(proto: "consumer_id"),
    4: .standard(proto: "start_time"),
    5: .standard(proto: "end_time"),
    6: .same(proto: "labels"),
    7: .standard(proto: "metric_value_sets"),
    8: .standard(proto: "log_entries"),
    11: .same(proto: "importance"),
    16: .same(proto: "extensions"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.operationID) }()
      case 2: try { try decoder.decodeSingularStringField(value: &self.operationName) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.consumerID) }()
      case 4: try { try decoder.decodeSingularMessageField(value: &self._startTime) }()
      case 5: try { try decoder.decodeSingularMessageField(value: &self._endTime) }()
      case 6: try { try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &self.labels) }()
      case 7: try { try decoder.decodeRepeatedMessageField(value: &self.metricValueSets) }()
      case 8: try { try decoder.decodeRepeatedMessageField(value: &self.logEntries) }()
      case 11: try { try decoder.decodeSingularEnumField(value: &self.importance) }()
      case 16: try { try decoder.decodeRepeatedMessageField(value: &self.extensions) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.operationID.isEmpty {
      try visitor.visitSingularStringField(value: self.operationID, fieldNumber: 1)
    }
    if !self.operationName.isEmpty {
      try visitor.visitSingularStringField(value: self.operationName, fieldNumber: 2)
    }
    if !self.consumerID.isEmpty {
      try visitor.visitSingularStringField(value: self.consumerID, fieldNumber: 3)
    }
    if let v = self._startTime {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    if let v = self._endTime {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
    }
    if !self.labels.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: self.labels, fieldNumber: 6)
    }
    if !self.metricValueSets.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.metricValueSets, fieldNumber: 7)
    }
    if !self.logEntries.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.logEntries, fieldNumber: 8)
    }
    if self.importance != .low {
      try visitor.visitSingularEnumField(value: self.importance, fieldNumber: 11)
    }
    if !self.extensions.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.extensions, fieldNumber: 16)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Google_Api_Servicecontrol_V1_Operation, rhs: Google_Api_Servicecontrol_V1_Operation) -> Bool {
    if lhs.operationID != rhs.operationID {return false}
    if lhs.operationName != rhs.operationName {return false}
    if lhs.consumerID != rhs.consumerID {return false}
    if lhs._startTime != rhs._startTime {return false}
    if lhs._endTime != rhs._endTime {return false}
    if lhs.labels != rhs.labels {return false}
    if lhs.metricValueSets != rhs.metricValueSets {return false}
    if lhs.logEntries != rhs.logEntries {return false}
    if lhs.importance != rhs.importance {return false}
    if lhs.extensions != rhs.extensions {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Google_Api_Servicecontrol_V1_Operation.Importance: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "LOW"),
    1: .same(proto: "HIGH"),
  ]
}
