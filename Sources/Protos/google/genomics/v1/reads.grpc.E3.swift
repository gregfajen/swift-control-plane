//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: google/genomics/v1/reads.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate Google_Genomics_V1_StreamingReadServiceClient, then call methods of this protocol to make API calls.
public protocol Google_Genomics_V1_StreamingReadServiceClientProtocol: GRPCClient {
  func streamReads(
    _ request: Google_Genomics_V1_StreamReadsRequest,
    callOptions: CallOptions?,
    handler: @escaping (Google_Genomics_V1_StreamReadsResponse) -> Void
  ) -> ServerStreamingCall<Google_Genomics_V1_StreamReadsRequest, Google_Genomics_V1_StreamReadsResponse>

}

extension Google_Genomics_V1_StreamingReadServiceClientProtocol {

  /// Returns a stream of all the reads matching the search request, ordered
  /// by reference name, position, and ID.
  ///
  /// - Parameters:
  ///   - request: Request to send to StreamReads.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  public func streamReads(
    _ request: Google_Genomics_V1_StreamReadsRequest,
    callOptions: CallOptions? = nil,
    handler: @escaping (Google_Genomics_V1_StreamReadsResponse) -> Void
  ) -> ServerStreamingCall<Google_Genomics_V1_StreamReadsRequest, Google_Genomics_V1_StreamReadsResponse> {
    return self.makeServerStreamingCall(
      path: "/google.genomics.v1.StreamingReadService/StreamReads",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      handler: handler
    )
  }
}

public final class Google_Genomics_V1_StreamingReadServiceClient: Google_Genomics_V1_StreamingReadServiceClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.genomics.v1.StreamingReadService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// Usage: instantiate Google_Genomics_V1_ReadServiceV1Client, then call methods of this protocol to make API calls.
public protocol Google_Genomics_V1_ReadServiceV1ClientProtocol: GRPCClient {
  func importReadGroupSets(
    _ request: Google_Genomics_V1_ImportReadGroupSetsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Genomics_V1_ImportReadGroupSetsRequest, Google_Longrunning_Operation>

  func exportReadGroupSet(
    _ request: Google_Genomics_V1_ExportReadGroupSetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Genomics_V1_ExportReadGroupSetRequest, Google_Longrunning_Operation>

  func searchReadGroupSets(
    _ request: Google_Genomics_V1_SearchReadGroupSetsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Genomics_V1_SearchReadGroupSetsRequest, Google_Genomics_V1_SearchReadGroupSetsResponse>

  func updateReadGroupSet(
    _ request: Google_Genomics_V1_UpdateReadGroupSetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Genomics_V1_UpdateReadGroupSetRequest, Google_Genomics_V1_ReadGroupSet>

  func deleteReadGroupSet(
    _ request: Google_Genomics_V1_DeleteReadGroupSetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Genomics_V1_DeleteReadGroupSetRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getReadGroupSet(
    _ request: Google_Genomics_V1_GetReadGroupSetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Genomics_V1_GetReadGroupSetRequest, Google_Genomics_V1_ReadGroupSet>

  func listCoverageBuckets(
    _ request: Google_Genomics_V1_ListCoverageBucketsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Genomics_V1_ListCoverageBucketsRequest, Google_Genomics_V1_ListCoverageBucketsResponse>

  func searchReads(
    _ request: Google_Genomics_V1_SearchReadsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Google_Genomics_V1_SearchReadsRequest, Google_Genomics_V1_SearchReadsResponse>

}

extension Google_Genomics_V1_ReadServiceV1ClientProtocol {

  /// Creates read group sets by asynchronously importing the provided
  /// information.
  ///
  /// For the definitions of read group sets and other genomics resources, see
  /// [Fundamentals of Google
  /// Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
  ///
  /// The caller must have WRITE permissions to the dataset.
  ///
  /// ## Notes on [BAM](https://samtools.github.io/hts-specs/SAMv1.pdf) import
  ///
  /// - Tags will be converted to strings - tag types are not preserved
  /// - Comments (`@CO`) in the input file header will not be preserved
  /// - Original header order of references (`@SQ`) will not be preserved
  /// - Any reverse stranded unmapped reads will be reverse complemented, and
  /// their qualities (also the "BQ" and "OQ" tags, if any) will be reversed
  /// - Unmapped reads will be stripped of positional information (reference name
  /// and position)
  ///
  /// - Parameters:
  ///   - request: Request to send to ImportReadGroupSets.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func importReadGroupSets(
    _ request: Google_Genomics_V1_ImportReadGroupSetsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Genomics_V1_ImportReadGroupSetsRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.genomics.v1.ReadServiceV1/ImportReadGroupSets",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Exports a read group set to a BAM file in Google Cloud Storage.
  ///
  /// For the definitions of read group sets and other genomics resources, see
  /// [Fundamentals of Google
  /// Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
  ///
  /// Note that currently there may be some differences between exported BAM
  /// files and the original BAM file at the time of import. See
  /// [ImportReadGroupSets][google.genomics.v1.ReadServiceV1.ImportReadGroupSets]
  /// for caveats.
  ///
  /// - Parameters:
  ///   - request: Request to send to ExportReadGroupSet.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func exportReadGroupSet(
    _ request: Google_Genomics_V1_ExportReadGroupSetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Genomics_V1_ExportReadGroupSetRequest, Google_Longrunning_Operation> {
    return self.makeUnaryCall(
      path: "/google.genomics.v1.ReadServiceV1/ExportReadGroupSet",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Searches for read group sets matching the criteria.
  ///
  /// For the definitions of read group sets and other genomics resources, see
  /// [Fundamentals of Google
  /// Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
  ///
  /// Implements
  /// [GlobalAllianceApi.searchReadGroupSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/readmethods.avdl#L135).
  ///
  /// - Parameters:
  ///   - request: Request to send to SearchReadGroupSets.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func searchReadGroupSets(
    _ request: Google_Genomics_V1_SearchReadGroupSetsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Genomics_V1_SearchReadGroupSetsRequest, Google_Genomics_V1_SearchReadGroupSetsResponse> {
    return self.makeUnaryCall(
      path: "/google.genomics.v1.ReadServiceV1/SearchReadGroupSets",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Updates a read group set.
  ///
  /// For the definitions of read group sets and other genomics resources, see
  /// [Fundamentals of Google
  /// Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
  ///
  /// This method supports patch semantics.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateReadGroupSet.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateReadGroupSet(
    _ request: Google_Genomics_V1_UpdateReadGroupSetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Genomics_V1_UpdateReadGroupSetRequest, Google_Genomics_V1_ReadGroupSet> {
    return self.makeUnaryCall(
      path: "/google.genomics.v1.ReadServiceV1/UpdateReadGroupSet",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Deletes a read group set.
  ///
  /// For the definitions of read group sets and other genomics resources, see
  /// [Fundamentals of Google
  /// Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteReadGroupSet.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteReadGroupSet(
    _ request: Google_Genomics_V1_DeleteReadGroupSetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Genomics_V1_DeleteReadGroupSetRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: "/google.genomics.v1.ReadServiceV1/DeleteReadGroupSet",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a read group set by ID.
  ///
  /// For the definitions of read group sets and other genomics resources, see
  /// [Fundamentals of Google
  /// Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
  ///
  /// - Parameters:
  ///   - request: Request to send to GetReadGroupSet.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getReadGroupSet(
    _ request: Google_Genomics_V1_GetReadGroupSetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Genomics_V1_GetReadGroupSetRequest, Google_Genomics_V1_ReadGroupSet> {
    return self.makeUnaryCall(
      path: "/google.genomics.v1.ReadServiceV1/GetReadGroupSet",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Lists fixed width coverage buckets for a read group set, each of which
  /// correspond to a range of a reference sequence. Each bucket summarizes
  /// coverage information across its corresponding genomic range.
  ///
  /// For the definitions of read group sets and other genomics resources, see
  /// [Fundamentals of Google
  /// Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
  ///
  /// Coverage is defined as the number of reads which are aligned to a given
  /// base in the reference sequence. Coverage buckets are available at several
  /// precomputed bucket widths, enabling retrieval of various coverage 'zoom
  /// levels'. The caller must have READ permissions for the target read group
  /// set.
  ///
  /// - Parameters:
  ///   - request: Request to send to ListCoverageBuckets.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func listCoverageBuckets(
    _ request: Google_Genomics_V1_ListCoverageBucketsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Genomics_V1_ListCoverageBucketsRequest, Google_Genomics_V1_ListCoverageBucketsResponse> {
    return self.makeUnaryCall(
      path: "/google.genomics.v1.ReadServiceV1/ListCoverageBuckets",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Gets a list of reads for one or more read group sets.
  ///
  /// For the definitions of read group sets and other genomics resources, see
  /// [Fundamentals of Google
  /// Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
  ///
  /// Reads search operates over a genomic coordinate space of reference sequence
  /// & position defined over the reference sequences to which the requested
  /// read group sets are aligned.
  ///
  /// If a target positional range is specified, search returns all reads whose
  /// alignment to the reference genome overlap the range. A query which
  /// specifies only read group set IDs yields all reads in those read group
  /// sets, including unmapped reads.
  ///
  /// All reads returned (including reads on subsequent pages) are ordered by
  /// genomic coordinate (by reference sequence, then position). Reads with
  /// equivalent genomic coordinates are returned in an unspecified order. This
  /// order is consistent, such that two queries for the same content (regardless
  /// of page size) yield reads in the same order across their respective streams
  /// of paginated responses.
  ///
  /// Implements
  /// [GlobalAllianceApi.searchReads](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/readmethods.avdl#L85).
  ///
  /// - Parameters:
  ///   - request: Request to send to SearchReads.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func searchReads(
    _ request: Google_Genomics_V1_SearchReadsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Google_Genomics_V1_SearchReadsRequest, Google_Genomics_V1_SearchReadsResponse> {
    return self.makeUnaryCall(
      path: "/google.genomics.v1.ReadServiceV1/SearchReads",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

public final class Google_Genomics_V1_ReadServiceV1Client: Google_Genomics_V1_ReadServiceV1ClientProtocol {
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions

  /// Creates a client for the google.genomics.v1.ReadServiceV1 service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  public init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Genomics_V1_StreamingReadServiceProvider: CallHandlerProvider {
  /// Returns a stream of all the reads matching the search request, ordered
  /// by reference name, position, and ID.
  func streamReads(request: Google_Genomics_V1_StreamReadsRequest, context: StreamingResponseCallContext<Google_Genomics_V1_StreamReadsResponse>) -> EventLoopFuture<GRPCStatus>
}

extension Google_Genomics_V1_StreamingReadServiceProvider {
  public var serviceName: Substring { return "google.genomics.v1.StreamingReadService" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "StreamReads":
      return CallHandlerFactory.makeServerStreaming(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.streamReads(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Google_Genomics_V1_ReadServiceV1Provider: CallHandlerProvider {
  /// Creates read group sets by asynchronously importing the provided
  /// information.
  ///
  /// For the definitions of read group sets and other genomics resources, see
  /// [Fundamentals of Google
  /// Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
  ///
  /// The caller must have WRITE permissions to the dataset.
  ///
  /// ## Notes on [BAM](https://samtools.github.io/hts-specs/SAMv1.pdf) import
  ///
  /// - Tags will be converted to strings - tag types are not preserved
  /// - Comments (`@CO`) in the input file header will not be preserved
  /// - Original header order of references (`@SQ`) will not be preserved
  /// - Any reverse stranded unmapped reads will be reverse complemented, and
  /// their qualities (also the "BQ" and "OQ" tags, if any) will be reversed
  /// - Unmapped reads will be stripped of positional information (reference name
  /// and position)
  func importReadGroupSets(request: Google_Genomics_V1_ImportReadGroupSetsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Exports a read group set to a BAM file in Google Cloud Storage.
  ///
  /// For the definitions of read group sets and other genomics resources, see
  /// [Fundamentals of Google
  /// Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
  ///
  /// Note that currently there may be some differences between exported BAM
  /// files and the original BAM file at the time of import. See
  /// [ImportReadGroupSets][google.genomics.v1.ReadServiceV1.ImportReadGroupSets]
  /// for caveats.
  func exportReadGroupSet(request: Google_Genomics_V1_ExportReadGroupSetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Longrunning_Operation>
  /// Searches for read group sets matching the criteria.
  ///
  /// For the definitions of read group sets and other genomics resources, see
  /// [Fundamentals of Google
  /// Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
  ///
  /// Implements
  /// [GlobalAllianceApi.searchReadGroupSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/readmethods.avdl#L135).
  func searchReadGroupSets(request: Google_Genomics_V1_SearchReadGroupSetsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Genomics_V1_SearchReadGroupSetsResponse>
  /// Updates a read group set.
  ///
  /// For the definitions of read group sets and other genomics resources, see
  /// [Fundamentals of Google
  /// Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
  ///
  /// This method supports patch semantics.
  func updateReadGroupSet(request: Google_Genomics_V1_UpdateReadGroupSetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Genomics_V1_ReadGroupSet>
  /// Deletes a read group set.
  ///
  /// For the definitions of read group sets and other genomics resources, see
  /// [Fundamentals of Google
  /// Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
  func deleteReadGroupSet(request: Google_Genomics_V1_DeleteReadGroupSetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
  /// Gets a read group set by ID.
  ///
  /// For the definitions of read group sets and other genomics resources, see
  /// [Fundamentals of Google
  /// Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
  func getReadGroupSet(request: Google_Genomics_V1_GetReadGroupSetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Genomics_V1_ReadGroupSet>
  /// Lists fixed width coverage buckets for a read group set, each of which
  /// correspond to a range of a reference sequence. Each bucket summarizes
  /// coverage information across its corresponding genomic range.
  ///
  /// For the definitions of read group sets and other genomics resources, see
  /// [Fundamentals of Google
  /// Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
  ///
  /// Coverage is defined as the number of reads which are aligned to a given
  /// base in the reference sequence. Coverage buckets are available at several
  /// precomputed bucket widths, enabling retrieval of various coverage 'zoom
  /// levels'. The caller must have READ permissions for the target read group
  /// set.
  func listCoverageBuckets(request: Google_Genomics_V1_ListCoverageBucketsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Genomics_V1_ListCoverageBucketsResponse>
  /// Gets a list of reads for one or more read group sets.
  ///
  /// For the definitions of read group sets and other genomics resources, see
  /// [Fundamentals of Google
  /// Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
  ///
  /// Reads search operates over a genomic coordinate space of reference sequence
  /// & position defined over the reference sequences to which the requested
  /// read group sets are aligned.
  ///
  /// If a target positional range is specified, search returns all reads whose
  /// alignment to the reference genome overlap the range. A query which
  /// specifies only read group set IDs yields all reads in those read group
  /// sets, including unmapped reads.
  ///
  /// All reads returned (including reads on subsequent pages) are ordered by
  /// genomic coordinate (by reference sequence, then position). Reads with
  /// equivalent genomic coordinates are returned in an unspecified order. This
  /// order is consistent, such that two queries for the same content (regardless
  /// of page size) yield reads in the same order across their respective streams
  /// of paginated responses.
  ///
  /// Implements
  /// [GlobalAllianceApi.searchReads](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/readmethods.avdl#L85).
  func searchReads(request: Google_Genomics_V1_SearchReadsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Google_Genomics_V1_SearchReadsResponse>
}

extension Google_Genomics_V1_ReadServiceV1Provider {
  public var serviceName: Substring { return "google.genomics.v1.ReadServiceV1" }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handleMethod(_ methodName: Substring, callHandlerContext: CallHandlerContext) -> GRPCCallHandler? {
    switch methodName {
    case "ImportReadGroupSets":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.importReadGroupSets(request: request, context: context)
        }
      }

    case "ExportReadGroupSet":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.exportReadGroupSet(request: request, context: context)
        }
      }

    case "SearchReadGroupSets":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.searchReadGroupSets(request: request, context: context)
        }
      }

    case "UpdateReadGroupSet":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.updateReadGroupSet(request: request, context: context)
        }
      }

    case "DeleteReadGroupSet":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.deleteReadGroupSet(request: request, context: context)
        }
      }

    case "GetReadGroupSet":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.getReadGroupSet(request: request, context: context)
        }
      }

    case "ListCoverageBuckets":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.listCoverageBuckets(request: request, context: context)
        }
      }

    case "SearchReads":
      return CallHandlerFactory.makeUnary(callHandlerContext: callHandlerContext) { context in
        return { request in
          self.searchReads(request: request, context: context)
        }
      }

    default: return nil
    }
  }
}

